{"version":3,"file":"gnss.esm.js","sources":["../src/event-emitter.js","../src/nmea-parser.js","../src/ntrip-client.js","../src/constants.js","../src/settings.js","../src/connection/connection-manager.js","../src/connection/connection-handler.js","../src/connection/bluetooth-handler.js","../src/connection/serial-handler.js","../src/ui/rtk-settings.js","../src/ui/rtk-status.js","../src/ui/device-settings.js","../src/index.js"],"sourcesContent":["/**\n * EventEmitter - Simple event system for component communication\n */\nexport class EventEmitter {\n  constructor() {\n    this.events = {};\n    this.debugMode = false;\n  }\n\n  /**\n   * Subscribe to an event\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, listener) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    \n    this.events[event].push(listener);\n    \n    // Return unsubscribe function\n    return () => {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    };\n  }\n  \n  /**\n   * Modern DOM-style event subscription (alias for on)\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   */\n  addEventListener(event, listener) {\n    return this.on(event, listener);\n  }\n\n  /**\n   * Subscribe to an event once\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function\n   */\n  once(event, listener) {\n    const remove = this.on(event, (...args) => {\n      remove();\n      listener(...args);\n    });\n  }\n\n  /**\n   * Emit an event with data\n   * @param {string} event - Event name\n   * @param {*} data - Event data\n   */\n  emit(event, data) {\n    if (this.debugMode) {\n      console.log(`[EventEmitter] ${event}:`, data);\n    }\n    \n    if (this.events[event]) {\n      this.events[event].forEach(listener => {\n        try {\n          listener(data);\n        } catch (error) {\n          console.error(`Error in event listener for '${event}':`, error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Remove a specific listener for an event\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function to remove\n   */\n  off(event, listener) {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    }\n  }\n  \n  /**\n   * Modern DOM-style event unsubscription (alias for off)\n   * @param {string} event - Event name\n   * @param {Function} listener - Callback function to remove\n   */\n  removeEventListener(event, listener) {\n    return this.off(event, listener);\n  }\n  \n  /**\n   * Remove all listeners for an event\n   * @param {string} event - Event name\n   */\n  removeAllListeners(event) {\n    if (event) {\n      delete this.events[event];\n    } else {\n      this.events = {};\n    }\n  }\n\n  /**\n   * Enable/disable debug mode\n   * @param {boolean} enabled - Whether debug mode is enabled\n   */\n  setDebug(enabled) {\n    this.debugMode = enabled;\n  }\n}\n\n// For backward compatibility\nexport default EventEmitter;","/**\n * NmeaParser - Parses NMEA sentences from the GNSS receiver\n */\nexport class NmeaParser {\n  constructor(options = {}) {\n    this.lastPosition = null;\n    this.lastSatellites = [];\n    this.satellitesById = {};\n    this.buffer = '';\n    this.sentenceStats = {\n      GGA: 0,\n      GSA: 0,\n      GSV: 0,\n      RMC: 0,\n      GST: 0,\n      VTG: 0,\n      UNKNOWN: 0\n    };\n    this.lastSentenceTime = Date.now();\n    \n    // Store the event emitter if provided\n    this.events = options.events || null;\n    \n    // Debug settings\n    this.debug = options.debug || { \n      info: false,\n      debug: false,\n      errors: true,\n      parsedSentences: false,\n      rtcmMessages: false\n    };\n    \n    // Set up logger functions\n    this.logger = {\n      info: (...args) => {\n        if (this.debug.info) {\n          console.info('[NMEA-INFO]', ...args);\n        }\n      },\n      debug: (...args) => {\n        if (this.debug.debug) {\n          console.debug('[NMEA-DEBUG]', ...args);\n        }\n      },\n      error: (...args) => {\n        if (this.debug.errors) {\n          console.error('[NMEA-ERROR]', ...args);\n        }\n      },\n      warn: (...args) => {\n        if (this.debug.errors) {\n          console.warn('[NMEA-WARN]', ...args);\n        }\n      },\n      parsedSentence: (...args) => {\n        if (this.debug.parsedSentences) {\n          console.log('[NMEA-PARSED]', ...args);\n        }\n      }\n    };\n  }\n\n  /**\n   * Parse data received from the device\n   * @param {string|ArrayBuffer} data - Raw data from receiver\n   * @returns {Object} Parsed NMEA data\n   */\n  parseData(data) {\n    // Convert ArrayBuffer to string if needed\n    let stringData = '';\n    if (data instanceof ArrayBuffer) {\n      stringData = new TextDecoder().decode(data);\n    } else {\n      stringData = data;\n    }\n    \n    // Add to buffer and process any complete sentences\n    this.buffer += stringData;\n    return this.processBuffer();\n  }\n  \n  /**\n   * Alias for parseData for backward compatibility\n   * @param {string|ArrayBuffer} data - Raw data from receiver\n   * @returns {Object} Parsed NMEA data\n   */\n  parse(data) {\n    return this.parseData(data);\n  }\n\n  /**\n   * Process the current buffer for complete NMEA sentences\n   * @returns {Object[]} Array of parsed NMEA objects\n   */\n  processBuffer() {\n    // Handle different line endings (CRLF, LF, CR)\n    const sentences = this.buffer.split(/\\r\\n|\\n|\\r/);\n    // Keep the last potentially incomplete sentence in the buffer\n    this.buffer = sentences.pop() || '';\n    \n    const results = [];\n    let positionUpdated = false;\n    let satellitesUpdated = false;\n    \n    for (const sentence of sentences) {\n      if (sentence.trim() === '') continue;\n      \n      try {\n        const parsed = this.parseSentence(sentence);\n        if (parsed) {\n          results.push(parsed);\n          \n          // Check if position data has been updated\n          if ((parsed.type === 'GGA' || parsed.type === 'RMC') && this.lastPosition) {\n            positionUpdated = true;\n          }\n          \n          // Check if satellite data has been updated\n          if (parsed.type === 'GSV' && parsed.messageNumber === parsed.totalMessages) {\n            satellitesUpdated = true;\n          }\n        }\n      } catch (error) {\n        this.logger.error('Error parsing NMEA sentence:', error, sentence);\n      }\n    }\n    \n    // Emit position event if we have new position data and an event emitter\n    if (positionUpdated && this.events) {\n      const position = this.getPosition();\n      if (position) {\n        // Add a timestamp for convenience\n        const positionWithTimestamp = {\n          ...position,\n          timestamp: new Date()\n        };\n        this.events.emit('nmea:position', positionWithTimestamp);\n      }\n    }\n    \n    // Emit satellites event if we have new satellite data and an event emitter\n    if (satellitesUpdated && this.events) {\n      const satellites = this.getSatellites();\n      if (satellites && satellites.length > 0) {\n        this.events.emit('nmea:satellites', satellites);\n      }\n    }\n    \n    return results;\n  }\n\n  /**\n   * Parse a single NMEA sentence\n   * @param {string} sentence - NMEA sentence\n   * @returns {Object|null} Parsed data or null if invalid\n   */\n  parseSentence(sentence) {\n    try {\n      // Basic validation\n      if (!sentence || typeof sentence !== 'string') {\n        this.logger.debug('Invalid NMEA sentence (not a string):', sentence);\n        return null;\n      }\n      \n      sentence = sentence.trim();\n      \n      if (!sentence.startsWith('$') || sentence.length < 9) {\n        this.logger.debug('Invalid NMEA sentence format:', sentence);\n        return null;\n      }\n      \n      // Check for checksum\n      const asteriskIndex = sentence.indexOf('*');\n      if (asteriskIndex === -1) {\n        this.logger.debug('Missing checksum in NMEA sentence:', sentence);\n        return null;\n      }\n      \n      // Check checksum\n      if (!this.validateChecksum(sentence)) {\n        this.logger.debug('Invalid NMEA checksum:', sentence);\n        return null;\n      }\n      \n      // Log raw sentence for debugging\n      this.logger.parsedSentence('Valid NMEA sentence:', sentence);\n      \n      // Split the sentence by commas, removing the '$' and checksum\n      let parts = sentence.substring(1, asteriskIndex).split(',');\n      if (parts.length < 1) {\n        this.logger.debug('Invalid NMEA sentence structure:', sentence);\n        return null;\n      }\n      \n      const sentenceType = parts[0];\n      if (!sentenceType || sentenceType.length < 3) {\n        this.logger.debug('Invalid NMEA sentence type:', sentenceType);\n        return null;\n      }\n      \n      // Extract type without prefix (e.g., GPGGA -> GGA)\n      const typeWithoutPrefix = sentenceType.substring(2);\n      this.logger.parsedSentence(`Parsing NMEA sentence type: ${sentenceType} (${typeWithoutPrefix})`);\n      \n      // Parse different sentence types\n      let result;\n      switch (sentenceType) {\n        case 'GPGGA':\n        case 'GNGGA':\n        case 'BDGGA':\n        case 'GLGGA':\n          result = this.parseGGA(parts);\n          break;\n        case 'GPGSA':\n        case 'GNGSA':\n        case 'BDGSA':\n        case 'GLGSA':\n          result = this.parseGSA(parts);\n          break;\n        case 'GPGSV':\n        case 'GNGSV':\n        case 'BDGSV':\n        case 'GLGSV':\n          result = this.parseGSV(parts);\n          break;\n        case 'GPRMC':\n        case 'GNRMC':\n        case 'BDRMC':\n        case 'GLRMC':\n          result = this.parseRMC(parts);\n          break;\n        case 'GPGST':\n        case 'GNGST':\n        case 'BDGST':\n        case 'GLGST':\n          result = this.parseGST(parts);\n          break;\n        case 'GPVTG':\n        case 'GNVTG':\n        case 'BDVTG':\n        case 'GLVTG':\n          result = this.parseVTG(parts);\n          break;\n        default: {\n          // For unknown sentence types, extract the last part of the type\n          // Common prefixes: GP = GPS, GN = GNSS, BD = BeiDou, GL = GLONASS, GA = Galileo\n          const match = sentenceType.match(/^(GP|GN|BD|GL|GA)(.+)$/);\n          const type = match ? match[2] : typeWithoutPrefix;\n          \n          result = {\n            type,\n            raw: sentence\n          };\n          break;\n        }\n      }\n      \n      // Add raw data for reference\n      if (result) {\n        result.raw = sentence;\n        \n        // Update sentence statistics\n        if (result.type) {\n          if (this.sentenceStats.hasOwnProperty(result.type)) {\n            this.sentenceStats[result.type]++;\n          } else {\n            this.sentenceStats.UNKNOWN++;\n          }\n        }\n        \n        // Calculate data rate\n        const now = Date.now();\n        const elapsed = now - this.lastSentenceTime;\n        if (elapsed > 0) {\n          result.dataRate = parseFloat((1000 / elapsed).toFixed(2)); // sentences per second\n        }\n        this.lastSentenceTime = now;\n      }\n      \n      return result;\n    } catch (error) {\n      this.logger.error('Unexpected error parsing NMEA sentence:', error, sentence);\n      return null;\n    }\n  }\n\n  /**\n   * Validate NMEA checksum\n   * @param {string} sentence - NMEA sentence\n   * @returns {boolean} Whether checksum is valid\n   */\n  validateChecksum(sentence) {\n    // Extract checksum from the sentence\n    const asteriskIndex = sentence.indexOf('*');\n    if (asteriskIndex === -1 || asteriskIndex === sentence.length - 1) {\n      return false;\n    }\n    \n    const checksumString = sentence.substring(asteriskIndex + 1);\n    const expectedChecksum = parseInt(checksumString, 16);\n    \n    // Calculate checksum by XORing all bytes between $ and *\n    let calculatedChecksum = 0;\n    for (let i = 1; i < asteriskIndex; i++) {\n      calculatedChecksum ^= sentence.charCodeAt(i);\n    }\n    \n    return calculatedChecksum === expectedChecksum;\n  }\n\n  /**\n   * Parse GGA sentence (Global Positioning System Fix Data)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed GGA data\n   */\n  parseGGA(parts) {\n    const latitude = this.parseLatitude(parts[2], parts[3]);\n    const longitude = this.parseLongitude(parts[4], parts[5]);\n    const fixQuality = parseInt(parts[6] || '0');\n    const satellites = parseInt(parts[7] || '0');\n    const hdop = parseFloat(parts[8] || '0');\n    const altitude = parts[9] ? parseFloat(parts[9]) : null;\n    \n    // Update the last position if coordinates are valid\n    if (latitude !== null && longitude !== null) {\n      this.lastPosition = { \n        latitude, \n        longitude,\n        fixQuality,\n        satellites,\n        hdop,\n        altitude,\n        // Add other position details\n        altitudeUnits: parts[10],\n        geoidHeight: parts[11] ? parseFloat(parts[11]) : null,\n        geoidHeightUnits: parts[12],\n        dgpsAge: parts[13] ? parseFloat(parts[13]) : null,\n        dgpsStation: parts[14]\n      };\n    }\n    \n    return {\n      type: 'GGA',\n      time: parts[1],\n      latitude,\n      longitude,\n      fixQuality,\n      satellites,\n      hdop,\n      altitude,\n      altitudeUnits: parts[10],\n      geoidHeight: parts[11] ? parseFloat(parts[11]) : null,\n      geoidHeightUnits: parts[12],\n      dgpsAge: parts[13] ? parseFloat(parts[13]) : null,\n      dgpsStation: parts[14]\n    };\n  }\n\n  /**\n   * Parse GSA sentence (GPS DOP and active satellites)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed GSA data\n   */\n  parseGSA(parts) {\n    const satellites = [];\n    \n    // Extract satellite IDs (parts 3-14)\n    for (let i = 3; i <= 14; i++) {\n      if (parts[i] && parts[i].trim() !== '') {\n        satellites.push(parseInt(parts[i]));\n      }\n    }\n    \n    return {\n      type: 'GSA',\n      mode: parts[1],\n      fixType: parseInt(parts[2] || '1'),\n      satellites,\n      pdop: parseFloat(parts[15] || '0'),\n      hdop: parseFloat(parts[16] || '0'),\n      vdop: parseFloat(parts[17] || '0')\n    };\n  }\n\n  /**\n   * Parse GSV sentence (GPS Satellites in view)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed GSV data\n   */\n  parseGSV(parts) {\n    const currentMessageSatellites = [];\n    \n    // Total number of messages, message number, total satellites in view\n    const totalMessages = parseInt(parts[1] || '1');\n    const messageNumber = parseInt(parts[2] || '1');\n    const satellitesInView = parseInt(parts[3] || '0');\n    \n    // Handle first message in set\n    if (messageNumber === 1) {\n      // Clear existing satellites if this is a new set of messages\n      this.satellitesById = {};\n    }\n    \n    // Each satellite block is 4 parts: PRN, elevation, azimuth, SNR\n    const numSatellitesInMessage = Math.min(4, Math.floor((parts.length - 4) / 4));\n    \n    for (let i = 0; i < numSatellitesInMessage; i++) {\n      const baseIndex = 4 + (i * 4);\n      \n      // Some receivers may not send all 4 values for each satellite\n      if (baseIndex + 3 < parts.length) {\n        const prn = parseInt(parts[baseIndex] || '0');\n        if (prn === 0) continue; // Skip invalid PRNs\n        \n        const satellite = {\n          prn,\n          elevation: parseInt(parts[baseIndex + 1] || '0'),\n          azimuth: parseInt(parts[baseIndex + 2] || '0'),\n          snr: parts[baseIndex + 3] ? parseInt(parts[baseIndex + 3]) : null\n        };\n        \n        // Store satellite by PRN in our tracking object\n        this.satellitesById[prn] = satellite;\n        \n        // Add to current message list\n        currentMessageSatellites.push(satellite);\n      }\n    }\n    \n    // Rebuild full satellite list after processing all messages\n    if (messageNumber === totalMessages) {\n      this.lastSatellites = Object.values(this.satellitesById);\n    }\n    \n    return {\n      type: 'GSV',\n      totalMessages,\n      messageNumber,\n      satellitesInView,\n      satellites: currentMessageSatellites\n    };\n  }\n\n  /**\n   * Parse RMC sentence (Recommended Minimum Navigation Information)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed RMC data\n   */\n  parseRMC(parts) {\n    const latitude = this.parseLatitude(parts[3], parts[4]);\n    const longitude = this.parseLongitude(parts[5], parts[6]);\n    const speed = parts[7] ? parseFloat(parts[7]) : null; // Speed over ground in knots\n    const course = parts[8] ? parseFloat(parts[8]) : null; // Course in degrees\n    \n    // Extract date components\n    let date = null;\n    if (parts[9] && parts[9].length === 6) {\n      const day = parts[9].substring(0, 2);\n      const month = parts[9].substring(2, 4);\n      const year = '20' + parts[9].substring(4, 6); // Assuming 20xx years\n      date = `${year}-${month}-${day}`;\n    }\n    \n    // Extract time components\n    let time = null;\n    if (parts[1] && parts[1].length >= 6) {\n      const hours = parts[1].substring(0, 2);\n      const minutes = parts[1].substring(2, 4);\n      const seconds = parts[1].substring(4);\n      time = `${hours}:${minutes}:${seconds}`;\n    }\n    \n    // Update the last position if coordinates are valid and status is active\n    if (latitude !== null && longitude !== null && parts[2] === 'A') {\n      // Preserve the existing data like altitude and fix quality\n      // that might have come from GGA sentences\n      const currentPosition = this.lastPosition || {};\n      \n      this.lastPosition = { \n        ...currentPosition,\n        latitude, \n        longitude,\n        // Add RMC-specific data\n        status: parts[2],\n        speed,\n        course,\n        date,\n        time,\n        // The RMC sentence has a mode indicator too\n        mode: parts[12]\n      };\n    }\n    \n    return {\n      type: 'RMC',\n      time,\n      status: parts[2], // A=active, V=void\n      latitude,\n      longitude,\n      speed, // Speed over ground in knots\n      course, // Course in degrees\n      date,\n      magneticVariation: parts[10] ? parseFloat(parts[10]) : null,\n      magneticVariationDirection: parts[11],\n      mode: parts[12] // A=autonomous, D=differential, E=estimated\n    };\n  }\n\n  /**\n   * Parse GST sentence (GPS Pseudorange Noise Statistics)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed GST data\n   */\n  parseGST(parts) {\n    return {\n      type: 'GST',\n      time: parts[1],\n      rms: parseFloat(parts[2] || '0'), // RMS value of the standard deviation of the range inputs\n      semiMajorError: parseFloat(parts[3] || '0'), // Standard deviation of semi-major axis\n      semiMinorError: parseFloat(parts[4] || '0'), // Standard deviation of semi-minor axis\n      orientationError: parseFloat(parts[5] || '0'), // Orientation of semi-major axis\n      latitudeError: parseFloat(parts[6] || '0'), // Standard deviation of latitude error\n      longitudeError: parseFloat(parts[7] || '0'), // Standard deviation of longitude error\n      heightError: parseFloat(parts[8] || '0') // Standard deviation of height error\n    };\n  }\n  \n  /**\n   * Parse VTG sentence (Course Over Ground and Ground Speed)\n   * @param {string[]} parts - Sentence parts\n   * @returns {Object} Parsed VTG data\n   */\n  parseVTG(parts) {\n    return {\n      type: 'VTG',\n      courseTrue: parts[1] ? parseFloat(parts[1]) : null, // Course over ground (true)\n      trueCourseRef: parts[2], // T = True\n      courseMagnetic: parts[3] ? parseFloat(parts[3]) : null, // Course over ground (magnetic)\n      magneticCourseRef: parts[4], // M = Magnetic\n      speedKnots: parts[5] ? parseFloat(parts[5]) : null, // Speed over ground in knots\n      knotsRef: parts[6], // N = Knots\n      speedKmh: parts[7] ? parseFloat(parts[7]) : null, // Speed over ground in km/h\n      kmhRef: parts[8], // K = km/h\n      mode: parts[9] // Mode indicator: A=Autonomous, D=Differential, E=Estimated\n    };\n  }\n\n  /**\n   * Parse latitude from NMEA format\n   * @param {string} value - Latitude value\n   * @param {string} direction - N/S\n   * @returns {number|null} Decimal latitude\n   */\n  parseLatitude(value, direction) {\n    if (!value || value === '') {\n      return null;\n    }\n    \n    try {\n      // NMEA format: DDMM.MMMM\n      const degrees = parseInt(value.substring(0, 2));\n      const minutes = parseFloat(value.substring(2));\n      let latitude = degrees + (minutes / 60);\n      \n      // Apply direction\n      if (direction === 'S') {\n        latitude = -latitude;\n      }\n      \n      return parseFloat(latitude.toFixed(6));\n    } catch (error) {\n      this.logger.error('Error parsing latitude:', error, value, direction);\n      return null;\n    }\n  }\n\n  /**\n   * Parse longitude from NMEA format\n   * @param {string} value - Longitude value\n   * @param {string} direction - E/W\n   * @returns {number|null} Decimal longitude\n   */\n  parseLongitude(value, direction) {\n    if (!value || value === '') {\n      return null;\n    }\n    \n    try {\n      // NMEA format: DDDMM.MMMM\n      const degrees = parseInt(value.substring(0, 3));\n      const minutes = parseFloat(value.substring(3));\n      let longitude = degrees + (minutes / 60);\n      \n      // Apply direction\n      if (direction === 'W') {\n        longitude = -longitude;\n      }\n      \n      return parseFloat(longitude.toFixed(6));\n    } catch (error) {\n      this.logger.error('Error parsing longitude:', error, value, direction);\n      return null;\n    }\n  }\n\n  /**\n   * Get the current position\n   * @returns {Object|null} Current position with latitude, longitude, altitude, quality, etc.\n   */\n  getPosition() {\n    if (!this.lastPosition) {\n      return null;\n    }\n    \n    // Create a complete position object\n    return {\n      latitude: this.lastPosition.latitude,\n      longitude: this.lastPosition.longitude,\n      altitude: this.lastPosition.altitude || null,\n      // Include fix quality from GGA if available\n      quality: this.lastPosition.fixQuality || 0,\n      // Include satellite count\n      satellites: this.lastPosition.satellites || 0,\n      // Include HDOP if available\n      hdop: this.lastPosition.hdop || null,\n      // Include speed if available (from RMC)\n      speed: this.lastPosition.speed || null,\n      // Include course if available (from RMC)\n      course: this.lastPosition.course || null,\n    };\n  }\n\n  /**\n   * Get current satellite information\n   * @returns {Object[]|null} Satellite information\n   */\n  getSatellites() {\n    if (!this.lastSatellites || this.lastSatellites.length === 0) {\n      return [];\n    }\n    \n    // Return a clone of the satellites array so external code cannot modify our internal state\n    return [...this.lastSatellites];\n  }\n  \n  /**\n   * Get sentence statistics\n   * @returns {Object} Sentence type counts and rates\n   */\n  getSentenceStats() {\n    return {\n      ...this.sentenceStats,\n      lastUpdate: this.lastSentenceTime\n    };\n  }\n\n  /**\n   * Clear parsed data\n   */\n  reset() {\n    this.lastPosition = null;\n    this.lastSatellites = [];\n    this.satellitesById = {};\n    this.buffer = '';\n    // Reset sentence stats\n    Object.keys(this.sentenceStats).forEach(key => {\n      this.sentenceStats[key] = 0;\n    });\n  }\n}\n\nexport default NmeaParser;","/**\n * NtripClient - Handles connections to NTRIP casters for RTK corrections\n * with multiple connection approaches (direct, proxy, WebSocket)\n */\nexport class NtripClient {\n  /**\n   * Create a new NTRIP client\n   * @param {Object} eventEmitter - Event emitter for communication\n   * @param {Object} options - Configuration options\n   */\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.debug = options.debug || {};\n    this.isConnected = false;\n    this.isConnecting = false;\n    this.autoReconnect = true;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 5000; // 5 seconds initial reconnect delay\n    \n    // Default configuration\n    this.config = {\n      // Basic NTRIP configuration\n      casterHost: 'rtk2go.com',\n      casterPort: 2101,\n      mountpoint: 'RTCM3_IMAX',\n      username: '',\n      password: '',\n      sendGga: true,\n      \n      // Connection options\n      connectionMode: 'auto', // 'auto', 'direct', 'proxy', 'websocket'\n      proxyUrl: 'http://localhost:3000',  // URL to proxy server (relative or absolute)\n      websocketUrl: 'ws://localhost:3000/ws', // WebSocket endpoint\n      \n      // Advanced settings\n      ggaUpdateInterval: 10 // Seconds between GGA updates\n    };\n    \n    // Connection handling\n    this.abortController = null;  // For direct fetch\n    this.reader = null;           // For direct fetch\n    this.webSocket = null;        // For WebSocket\n    this.activeMode = null;       // Which connection mode is active\n    \n    // GGA handling\n    this.ggaInterval = null;\n    this.lastGga = null;  // Last GGA sentence sent\n    this.lastPosition = null; // Last position data for generating GGA\n    \n    // RTCM statistics\n    this.rtcmStats = {\n      messagesReceived: 0,\n      bytesSent: 0,\n      bytesReceived: 0,\n      lastMessageTime: null,\n      correctionAge: null\n    };\n    \n    // Device manager for sending corrections\n    this.deviceManager = null;\n    this.rtcmQueue = [];\n    \n    // Bind methods\n    this.handleSocketMessage = this.handleSocketMessage.bind(this);\n    this.handleSocketClose = this.handleSocketClose.bind(this);\n    this.handleSocketError = this.handleSocketError.bind(this);\n  }\n\n  /**\n   * Set the device manager for sending corrections\n   * @param {Object} deviceManager - ConnectionManager or BluetoothManager\n   */\n  setDeviceManager(deviceManager) {\n    this.deviceManager = deviceManager;\n    \n    // If this is a legacy BluetothManager reference, keep it for backward compatibility\n    if (deviceManager && deviceManager.name === 'bluetooth') {\n      this.bluetoothManager = deviceManager;\n    }\n  }\n\n  /**\n   * Connect to NTRIP caster using the configured method\n   * @param {Object} config - Connection configuration\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connect(config = {}) {\n    if (this.isConnected) {\n      console.log('Already connected to NTRIP caster');\n      return true;\n    }\n    \n    if (this.isConnecting) {\n      console.log('Already connecting to NTRIP caster');\n      return false;\n    }\n    \n    // Update configuration with provided options\n    this.config = { \n      ...this.config, \n      ...config \n    };\n    \n    // Validate configuration\n    console.log('Validating NTRIP config:', {\n      casterHost: this.config.casterHost, \n      mountpoint: this.config.mountpoint,\n      connectionMode: this.config.connectionMode\n    });\n    \n    if (!this.config.casterHost || this.config.casterHost === '') {\n      console.error('NTRIP caster host is missing or empty');\n      this.eventEmitter.emit('ntrip:error', {\n        message: 'Invalid NTRIP configuration. Host is required.'\n      });\n      return false;\n    }\n    \n    if (!this.config.mountpoint || this.config.mountpoint === '') {\n      console.error('NTRIP mountpoint is missing or empty');\n      this.eventEmitter.emit('ntrip:error', {\n        message: 'Invalid NTRIP configuration. Mountpoint is required.'\n      });\n      return false;\n    }\n    \n    this.isConnecting = true;\n    this.eventEmitter.emit('ntrip:connecting', { \n      casterHost: this.config.casterHost,\n      mountpoint: this.config.mountpoint\n    });\n    \n    // Determine connection mode\n    const connectionMode = this.config.connectionMode;\n    \n    // Auto mode - try WebSocket first, then direct, then proxy\n    if (connectionMode === 'auto') {\n      // Try WebSocket first\n      try {\n        const wsSuccess = await this.connectWebSocket();\n        if (wsSuccess) {\n          this.activeMode = 'websocket';\n          return true;\n        }\n      } catch (wsError) {\n        console.log('WebSocket connection failed, falling back to direct:', wsError);\n      }\n      \n      // Try direct connection\n      try {\n        const directSuccess = await this.connectDirect();\n        if (directSuccess) {\n          this.activeMode = 'direct';\n          return true;\n        }\n      } catch (directError) {\n        console.log('Direct connection failed, falling back to proxy:', directError);\n      }\n      \n      // Try proxy as last resort\n      try {\n        const proxySuccess = await this.connectProxy();\n        if (proxySuccess) {\n          this.activeMode = 'proxy';\n          return true;\n        }\n      } catch (proxyError) {\n        this.isConnecting = false;\n        this.eventEmitter.emit('ntrip:error', {\n          message: 'All connection methods failed',\n          error: proxyError\n        });\n        return false;\n      }\n    } \n    // Specific connection modes\n    else if (connectionMode === 'websocket') {\n      try {\n        const success = await this.connectWebSocket();\n        if (success) {\n          this.activeMode = 'websocket';\n          return true;\n        }\n      } catch (error) {\n        this.isConnecting = false;\n        this.eventEmitter.emit('ntrip:error', {\n          message: 'WebSocket connection failed',\n          error\n        });\n        return false;\n      }\n    }\n    else if (connectionMode === 'direct') {\n      try {\n        const success = await this.connectDirect();\n        if (success) {\n          this.activeMode = 'direct';\n          return true;\n        }\n      } catch (error) {\n        this.isConnecting = false;\n        this.eventEmitter.emit('ntrip:error', {\n          message: 'Direct connection failed',\n          error\n        });\n        return false;\n      }\n    }\n    else if (connectionMode === 'proxy') {\n      try {\n        const success = await this.connectProxy();\n        if (success) {\n          this.activeMode = 'proxy';\n          return true;\n        }\n      } catch (error) {\n        this.isConnecting = false;\n        this.eventEmitter.emit('ntrip:error', {\n          message: 'Proxy connection failed',\n          error\n        });\n        return false;\n      }\n    }\n    \n    // If we reach here, all connection attempts failed\n    this.isConnecting = false;\n    this.eventEmitter.emit('ntrip:error', {\n      message: 'All connection methods failed'\n    });\n    return false;\n  }\n  \n  /**\n   * Connect to NTRIP caster using WebSocket to proxy\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connectWebSocket() {\n    return new Promise((resolve, reject) => {\n      try {\n        // Determine WebSocket URL\n        let wsUrl = this.config.websocketUrl;\n        \n        // If it's a relative URL, make it absolute\n        if (wsUrl.startsWith('/')) {\n          const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n          wsUrl = `${protocol}//${window.location.host}${wsUrl}`;\n        }\n        \n        // Handle mixed content issue - enforce WSS if we're connecting from HTTPS\n        if (window.location.protocol === 'https:' && \n            wsUrl.startsWith('ws:') && \n            (wsUrl.includes('192.168.') || \n             wsUrl.includes('127.0.0.1') || \n             wsUrl.includes('localhost'))) {\n          console.log('Adjusting WebSocket URL protocol to match page protocol (WSS)');\n          wsUrl = wsUrl.replace('ws:', 'wss:');\n        }\n        \n        console.log(`Connecting to NTRIP via WebSocket at ${wsUrl}`, {\n          casterHost: this.config.casterHost,\n          mountpoint: this.config.mountpoint,\n          connectionMode: this.config.connectionMode\n        });\n        this.webSocket = new WebSocket(wsUrl);\n        \n        // Set up connection timeout\n        const connectionTimeout = setTimeout(() => {\n          if (this.webSocket && this.webSocket.readyState !== WebSocket.OPEN) {\n            this.webSocket.close();\n            reject(new Error('WebSocket connection timeout'));\n          }\n        }, 10000); // 10 second timeout\n        \n        // Set up event handlers\n        this.webSocket.onopen = () => {\n          clearTimeout(connectionTimeout);\n          \n          console.log('WebSocket connected to proxy, sending NTRIP connection request');\n          \n          // Send connection request to proxy\n          this.webSocket.send(JSON.stringify({\n            command: 'connect',\n            config: {\n              casterHost: this.config.casterHost,\n              casterPort: this.config.casterPort,\n              mountpoint: this.config.mountpoint,\n              username: this.config.username,\n              password: this.config.password\n            }\n          }));\n        };\n        \n        // Connection status handler\n        this.webSocket.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            \n            // Handle connection status message\n            if (data.type === 'status') {\n              if (data.connected) {\n                // Successfully connected\n                this.isConnected = true;\n                this.isConnecting = false;\n                this.reconnectAttempts = 0;\n                \n                // Setup regular message handler\n                this.webSocket.onmessage = this.handleSocketMessage;\n                \n                // Setup other event handlers\n                this.webSocket.onclose = this.handleSocketClose;\n                this.webSocket.onerror = this.handleSocketError;\n                \n                // Start GGA updates if enabled\n                if (this.config.sendGga && this.lastGga) {\n                  this.startGgaUpdates();\n                }\n                \n                // Emit connected event\n                this.eventEmitter.emit('ntrip:connected', {\n                  casterHost: this.config.casterHost,\n                  mountpoint: this.config.mountpoint,\n                  mode: 'websocket'\n                });\n                \n                resolve(true);\n              } else {\n                // Connection failed\n                reject(new Error(data.message || 'WebSocket connection failed'));\n              }\n            } else if (data.type === 'error') {\n              reject(new Error(data.message || 'WebSocket connection error'));\n            }\n          } catch (e) {\n            // Not JSON, unexpected during connection phase\n            reject(new Error('Unexpected binary data during WebSocket connection'));\n          }\n        };\n        \n        // Initial error handler just for connection phase\n        this.webSocket.onerror = (error) => {\n          clearTimeout(connectionTimeout);\n          reject(new Error('WebSocket connection error'));\n        };\n        \n        // Initial close handler just for connection phase\n        this.webSocket.onclose = (event) => {\n          clearTimeout(connectionTimeout);\n          reject(new Error(`WebSocket closed: ${event.code} - ${event.reason}`));\n        };\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  \n  /**\n   * Connect directly to NTRIP caster\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connectDirect() {\n    try {\n      // Determine if we're on an HTTPS page\n      const isHttpsPage = typeof window !== 'undefined' && window.location && window.location.protocol === 'https:';\n      \n      // Create URL for NTRIP connection\n      const protocol = this.config.casterPort === 443 ? 'https' : 'http';\n      \n      // Check for mixed content scenario - HTTPS page trying to access HTTP NTRIP caster\n      if (isHttpsPage && protocol === 'http') {\n        console.log('Mixed content issue detected:', {\n          isHttpsPage,\n          protocol,\n          casterHost: this.config.casterHost,\n          mountpoint: this.config.mountpoint,\n          connectionMode: this.config.connectionMode\n        });\n        \n        this.eventEmitter.emit('ntrip:info', { \n          message: 'Mixed content detected - HTTPS page trying to access HTTP NTRIP. Switching to proxy/WebSocket.'\n        });\n        \n        // Try WebSocket first if auto mode\n        if (this.config.connectionMode === 'auto' || this.config.connectionMode === 'websocket') {\n          try {\n            return await this.connectWebSocket();\n          } catch (wsError) {\n            this.eventEmitter.emit('ntrip:info', { \n              message: 'WebSocket connection failed after mixed content detection, trying proxy'\n            });\n          }\n        }\n        \n        // Fall back to proxy connection instead of direct\n        return await this.connectProxy();\n      }\n      \n      const url = `${protocol}://${this.config.casterHost}:${this.config.casterPort}/${this.config.mountpoint}`;\n      \n      // Prepare authentication headers if needed\n      const headers = new Headers({\n        'Accept': 'application/octet-stream',\n        'User-Agent': 'NTRIP WebGNSS Client'\n      });\n      \n      if (this.config.username && this.config.password) {\n        const auth = btoa(`${this.config.username}:${this.config.password}`);\n        headers.append('Authorization', `Basic ${auth}`);\n      }\n      \n      // Create abort controller for clean disconnection\n      this.abortController = new AbortController();\n      \n      // Make the request\n      const response = await fetch(url, {\n        method: 'GET',\n        headers,\n        signal: this.abortController.signal\n      });\n      \n      // Check if connection was successful\n      if (!response.ok) {\n        throw new Error(`NTRIP server error: ${response.status} ${response.statusText}`);\n      }\n      \n      // Get a reader for the response body\n      const contentType = response.headers.get('content-type');\n      \n      // For debugging - log content type\n      this.eventEmitter.emit('ntrip:info', { \n        message: `Direct NTRIP connection established, content type: ${contentType}`\n      });\n      \n      // Start reading from the response stream\n      this.reader = response.body.getReader();\n      this.isConnected = true;\n      this.isConnecting = false;\n      this.reconnectAttempts = 0;\n      \n      // Emit connected event\n      this.eventEmitter.emit('ntrip:connected', {\n        casterHost: this.config.casterHost,\n        mountpoint: this.config.mountpoint,\n        mode: 'direct'\n      });\n      \n      // If we have a GGA message or position, start sending it periodically\n      if (this.config.sendGga && (this.lastGga || this.lastPosition)) {\n        this.startGgaUpdates();\n      }\n      \n      // Start processing the stream\n      this.readStream();\n      \n      return true;\n    } catch (error) {\n      console.error('Direct connection error:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Connect to NTRIP caster via HTTP proxy\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connectProxy() {\n    try {\n      // Determine proxy URL\n      let proxyUrl = this.config.proxyUrl;\n      \n      // If it's a relative URL, make it absolute\n      if (proxyUrl.startsWith('/')) {\n        const protocol = window.location.protocol;\n        proxyUrl = `${protocol}//${window.location.host}${proxyUrl}`;\n      }\n      \n      // Handle mixed content issue - enforce HTTP if we're connecting to a local IP\n      // This avoids HTTPS to HTTP mixed content blocking\n      if (window.location.protocol === 'https:' && \n          proxyUrl.startsWith('http:') && \n          (proxyUrl.includes('192.168.') || \n           proxyUrl.includes('127.0.0.1') || \n           proxyUrl.includes('localhost'))) {\n        console.log('Adjusting proxy URL protocol to match page protocol (HTTPS)');\n        proxyUrl = proxyUrl.replace('http:', 'https:');\n      }\n      \n      // Add mountpoint and parameters\n      proxyUrl = `${proxyUrl}/${this.config.mountpoint}`;\n      const params = new URLSearchParams({\n        host: this.config.casterHost,\n        port: this.config.casterPort.toString()\n      });\n      \n      if (this.config.username && this.config.password) {\n        params.append('user', this.config.username);\n        params.append('password', this.config.password);\n      }\n      \n      proxyUrl += `?${params.toString()}`;\n      \n      // Create abort controller for clean disconnection\n      this.abortController = new AbortController();\n      \n      // Make the request to the proxy\n      const response = await fetch(proxyUrl, {\n        method: 'GET',\n        signal: this.abortController.signal\n      });\n      \n      // Check if connection was successful\n      if (!response.ok) {\n        throw new Error(`Proxy server error: ${response.status} ${response.statusText}`);\n      }\n      \n      // Start reading from the response stream\n      this.reader = response.body.getReader();\n      this.isConnected = true;\n      this.isConnecting = false;\n      this.reconnectAttempts = 0;\n      \n      // Emit connected event\n      this.eventEmitter.emit('ntrip:connected', {\n        casterHost: this.config.casterHost,\n        mountpoint: this.config.mountpoint,\n        mode: 'proxy'\n      });\n      \n      // If we have a GGA message, start sending it periodically via proxy\n      if (this.config.sendGga && (this.lastGga || this.lastPosition)) {\n        this.startGgaUpdates();\n      }\n      \n      // Start processing the stream\n      this.readStream();\n      \n      return true;\n    } catch (error) {\n      console.error('Proxy connection error:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Read and process the response stream from the NTRIP caster (for direct/proxy mode)\n   */\n  async readStream() {\n    try {\n      // Loop until disconnected or error occurs\n      while (this.isConnected) {\n        const { value, done } = await this.reader.read();\n        \n        // If stream is closed, exit the loop\n        if (done) {\n          this.handleDisconnect({ reason: 'Stream closed' });\n          break;\n        }\n        \n        // Process the chunk of binary data\n        if (value) {\n          // Update stats\n          this.rtcmStats.messagesReceived++;\n          this.rtcmStats.lastMessageTime = new Date();\n          this.rtcmStats.bytesReceived += value.length;\n          \n          // Convert to ArrayBuffer and emit correction event\n          this.eventEmitter.emit('ntrip:rtcm', {\n            data: value.buffer,\n            stats: { ...this.rtcmStats }\n          });\n          \n          // Forward to device if available\n          this.forwardRtcmToDevice(value.buffer);\n        }\n      }\n    } catch (error) {\n      // Only emit error if it's not an abort error (which happens during normal disconnect)\n      if (error.name !== 'AbortError') {\n        this.eventEmitter.emit('ntrip:error', {\n          message: 'Error reading NTRIP stream',\n          error\n        });\n      }\n      this.handleDisconnect({ reason: error.message });\n    }\n  }\n\n  /**\n   * Handle WebSocket message (for WebSocket mode)\n   * @param {MessageEvent} event - WebSocket message event\n   */\n  handleSocketMessage(event) {\n    try {\n      // Try to parse as JSON first (for control messages)\n      const data = JSON.parse(event.data);\n      \n      // Handle status messages\n      if (data.type === 'status') {\n        if (!data.connected && this.isConnected) {\n          this.handleDisconnect({ reason: data.message || 'Connection closed by server' });\n        }\n        return;\n      }\n      \n      // Handle error messages\n      if (data.type === 'error') {\n        this.eventEmitter.emit('ntrip:error', {\n          message: data.message || 'Unknown error'\n        });\n        return;\n      }\n      \n      // Handle info messages\n      if (data.type === 'info') {\n        this.eventEmitter.emit('ntrip:info', {\n          message: data.message\n        });\n        return;\n      }\n      \n      // Handle ping messages (keep alive)\n      if (data.type === 'ping') {\n        // Just acknowledge the ping silently, no need to log or emit an event\n        // Optionally could respond with a pong message if the server expects it\n        return;\n      }\n      \n      // Unknown JSON message\n      console.warn('Unknown NTRIP message type:', data.type);\n    } catch (e) {\n      // Not JSON, treat as binary RTCM data\n      this.handleRtcmData(event.data);\n    }\n  }\n  \n  /**\n   * Handle WebSocket close event\n   * @param {CloseEvent} event - WebSocket close event\n   */\n  handleSocketClose(event) {\n    console.log(`WebSocket closed: ${event.code} - ${event.reason}`);\n    this.handleDisconnect({\n      reason: `WebSocket closed: ${event.code} - ${event.reason}`\n    });\n  }\n  \n  /**\n   * Handle WebSocket error event\n   * @param {Event} event - WebSocket error event\n   */\n  handleSocketError(event) {\n    console.error('WebSocket error:', event);\n    this.eventEmitter.emit('ntrip:error', {\n      message: 'WebSocket error',\n      error: event\n    });\n  }\n  \n  /**\n   * Handle binary RTCM data from WebSocket\n   * @param {ArrayBuffer|Blob} data - RTCM data\n   */\n  async handleRtcmData(data) {\n    try {\n      // Convert data to ArrayBuffer if it's a Blob\n      let binaryData;\n      if (data instanceof Blob) {\n        binaryData = await data.arrayBuffer();\n      } else if (data instanceof ArrayBuffer) {\n        binaryData = data;\n      } else {\n        console.warn('Received RTCM data in unknown format:', typeof data);\n        return;\n      }\n      \n      // Verify if data is really RTCM3 format (should start with 0xD3 preamble)\n      const isRtcm = this.isValidRtcmData(binaryData);\n      \n      // Update stats\n      this.rtcmStats.messagesReceived++;\n      this.rtcmStats.lastMessageTime = new Date();\n      this.rtcmStats.bytesReceived += binaryData.byteLength;\n      this.updateCorrectionAge();\n      \n      // If it's not valid RTCM, check if it might be a sourcetable\n      if (!isRtcm) {\n        try {\n          const textDecoder = new TextDecoder();\n          const dataString = textDecoder.decode(binaryData);\n          \n          // Check if it looks like a sourcetable response\n          if (dataString.includes('SOURCETABLE') || dataString.includes('STR;')) {\n            // Likely we received a sourcetable instead of RTCM data\n            // This often happens when the caster is waiting for a GGA position\n            this.eventEmitter.emit('ntrip:info', { \n              message: 'Received sourcetable from NTRIP caster. The mountpoint requires GGA position data.'\n            });\n            \n            // Try to send GGA data immediately\n            if (this.config.sendGga && (this.lastGga || this.lastPosition)) {\n              if (this.lastGga) {\n                this.sendGGA(this.lastGga);\n              } else if (this.lastPosition) {\n                const gga = this.createGgaSentence(this.lastPosition);\n                this.sendGGA(gga);\n              }\n            }\n            \n            // Don't forward sourcetable data to the device\n            return;\n          }\n        } catch (err) {\n          // Ignore errors in text decoding, it might still be binary data\n          // just not valid RTCM3\n        }\n      }\n      \n      // Emit RTCM data event regardless of validation\n      this.eventEmitter.emit('ntrip:rtcm', {\n        data: binaryData,\n        isValidRtcm: isRtcm,\n        stats: { ...this.rtcmStats }\n      });\n      \n      // Only forward valid RTCM data to the device\n      if (isRtcm) {\n        this.forwardRtcmToDevice(binaryData);\n      }\n    } catch (error) {\n      console.error('Error handling RTCM data:', error);\n    }\n  }\n  \n  /**\n   * Validate if the data is in RTCM3 format\n   * @param {ArrayBuffer} data - Binary data to validate\n   * @returns {boolean} Whether the data appears to be valid RTCM3\n   */\n  isValidRtcmData(data) {\n    if (!data || data.byteLength === 0) {\n      return false;\n    }\n    \n    try {\n      // RTCM3 messages must start with 0xD3 preamble\n      const dataView = new DataView(data);\n      const firstByte = dataView.getUint8(0);\n      \n      if (firstByte !== 0xD3) {\n        // Data doesn't start with 0xD3, likely not valid RTCM3\n        // Log first few bytes for debugging\n        if (this.debug?.errors || this.debug?.rtcmMessages) {\n          const bytes = new Uint8Array(data.slice(0, Math.min(10, data.byteLength)));\n          console.error('Invalid RTCM data - missing preamble 0xD3, instead got:', \n            Array.from(bytes).map(b => '0x' + b.toString(16).padStart(2, '0')).join(' '));\n        }\n        return false;\n      }\n      \n      // Optionally decode more of the RTCM3 header for validation\n      if (data.byteLength >= 3) {\n        // Extract message length from RTCM3 header\n        const msgLength = ((dataView.getUint8(1) & 0x03) << 8) + dataView.getUint8(2);\n        \n        // Basic length validation (should at least be 6 bytes for header + CRC)\n        if (msgLength < 3 || msgLength > 1023) {\n          if (this.debug?.errors) {\n            console.error(`RTCM3 message has invalid length: ${msgLength}`);\n          }\n          return false;\n        }\n        \n        // If we have enough data, extract the message type\n        if (data.byteLength >= 6) {\n          const msgType = ((dataView.getUint8(3) & 0xFF) << 4) + ((dataView.getUint8(4) & 0xF0) >> 4);\n          \n          // Track message type in stats\n          if (!this.rtcmStats.messageTypes) {\n            this.rtcmStats.messageTypes = {};\n          }\n          \n          const typeStr = msgType.toString();\n          this.rtcmStats.messageTypes[typeStr] = (this.rtcmStats.messageTypes[typeStr] || 0) + 1;\n          \n          if (this.debug?.rtcmMessages) {\n            console.log(`RTCM3 message type: ${msgType}, length: ${msgLength}`);\n          }\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error validating RTCM data:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Forward RTCM data to connected device\n   * @param {ArrayBuffer} data - RTCM binary data to forward\n   */\n  forwardRtcmToDevice(data) {\n    try {\n      // Check if we have a deviceManager property set by the GNSS module\n      if ((this.deviceManager && this.deviceManager.isDeviceConnected()) || \n          (this.bluetoothManager && this.bluetoothManager.isConnected)) {\n        \n        // Verify RTCM data format - RTCM3 messages should start with 0xD3 preamble\n        const dataView = new DataView(data);\n        const firstByte = dataView.getUint8(0);\n        \n        // Check for the RTCM3 preamble (0xD3)\n        if (firstByte === 0xD3) {\n          if (this.debug?.debug || this.debug?.rtcmMessages) {\n            const msgLength = ((dataView.getUint8(1) & 0x03) << 8) + dataView.getUint8(2);\n            const msgType = ((dataView.getUint8(3) & 0xFF) << 4) + ((dataView.getUint8(4) & 0xF0) >> 4);\n            \n            console.log(`Forwarding RTCM message type ${msgType}, length ${msgLength} (${data.byteLength} bytes) to device`);\n            \n            // Log the first 10 bytes for debugging (hex format)\n            if (this.debug?.debug) {\n              const bytes = new Uint8Array(data.slice(0, Math.min(10, data.byteLength)));\n              console.log('RTCM header bytes:', Array.from(bytes).map(b => '0x' + b.toString(16).padStart(2, '0')).join(' '));\n            }\n          }\n          \n          // Send the intact binary data to the device - CRITICAL: do not modify the data\n          // Use ConnectionManager if available, fall back to BluetoothManager for backward compatibility\n          if (this.deviceManager && this.deviceManager.isDeviceConnected()) {\n            this.deviceManager.sendData(data);\n            return true;\n          } else if (this.bluetoothManager && this.bluetoothManager.isConnected) {\n            this.bluetoothManager.sendData(data);\n            return true;\n          }\n        } else {\n          if (this.debug?.errors) {\n            console.error(`Invalid RTCM data - missing preamble 0xD3, instead got 0x${firstByte.toString(16)}`);\n            \n            // Log the first 10 bytes for debugging (hex format)\n            const bytes = new Uint8Array(data.slice(0, Math.min(10, data.byteLength)));\n            console.error('Invalid RTCM bytes:', Array.from(bytes).map(b => '0x' + b.toString(16).padStart(2, '0')).join(' '));\n          }\n          return false;\n        }\n      } else if (this.debug?.debug) {\n        console.log('No device connected, cannot forward RTCM data');\n      }\n      return false;\n    } catch (error) {\n      console.error('Error forwarding RTCM data to device:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Disconnect from NTRIP caster\n   */\n  disconnect() {\n    if (!this.isConnected && !this.isConnecting) {\n      return;\n    }\n    \n    try {\n      // Stop GGA updates\n      this.stopGgaUpdates();\n      \n      // WebSocket mode\n      if (this.activeMode === 'websocket' && this.webSocket) {\n        // Send disconnect command to proxy\n        if (this.webSocket.readyState === WebSocket.OPEN) {\n          this.webSocket.send(JSON.stringify({\n            command: 'disconnect'\n          }));\n        }\n        \n        // Close WebSocket\n        this.webSocket.close();\n        this.webSocket = null;\n      }\n      // Direct or proxy mode\n      else if (this.abortController) {\n        this.abortController.abort();\n        this.abortController = null;\n        this.reader = null;\n      }\n      \n      this.handleDisconnect({ reason: 'User disconnected' });\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      this.isConnected = false;\n      this.isConnecting = false;\n    }\n  }\n\n  /**\n   * Handle disconnection (either manual or due to error)\n   * @param {Object} event - Disconnection event info\n   */\n  handleDisconnect(event) {\n    const wasConnected = this.isConnected;\n    this.isConnected = false;\n    this.isConnecting = false;\n    \n    // Reset connection resources\n    this.webSocket = null;\n    this.reader = null;\n    this.abortController = null;\n    \n    // Stop GGA updates\n    this.stopGgaUpdates();\n    \n    if (wasConnected) {\n      this.eventEmitter.emit('ntrip:disconnected', {\n        reason: event.reason || 'Unknown reason'\n      });\n    }\n    \n    // Attempt reconnection if enabled\n    if (this.autoReconnect && this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.scheduleReconnect();\n    }\n  }\n\n  /**\n   * Schedule a reconnection attempt\n   */\n  scheduleReconnect() {\n    // Exponential backoff with jitter\n    const delay = Math.min(30000, this.reconnectDelay * Math.pow(1.5, this.reconnectAttempts)) \n      * (0.9 + Math.random() * 0.2); // Add 10% jitter\n      \n    console.log(`Scheduling reconnection attempt in ${Math.round(delay / 1000)} seconds`);\n    \n    setTimeout(() => {\n      if (!this.isConnected && !this.isConnecting) {\n        console.log(`Attempting to reconnect (attempt ${this.reconnectAttempts + 1}/${this.maxReconnectAttempts})`);\n        this.reconnectAttempts++;\n        this.connect(this.config);\n      }\n    }, delay);\n  }\n\n  /**\n   * Process the queue of RTCM messages\n   */\n  async processRtcmQueue() {\n    while (this.rtcmQueue.length > 0) {\n      try {\n        const rtcmData = this.rtcmQueue[0];\n        \n        // Send to device\n        if (this.deviceManager.isDeviceConnected()) {\n          const result = await this.deviceManager.sendData(rtcmData);\n          \n          if (result) {\n            this.rtcmStats.bytesSent += rtcmData.byteLength;\n          } else {\n            console.warn('Failed to send RTCM to device');\n          }\n        }\n        \n        // Remove from queue regardless of success\n        // This prevents getting stuck on a problematic message\n        this.rtcmQueue.shift();\n        \n        // Small delay between messages to avoid overwhelming the device\n        await new Promise(resolve => setTimeout(resolve, 50));\n      } catch (error) {\n        console.error('Error processing RTCM queue:', error);\n        \n        // Remove problematic message from queue\n        this.rtcmQueue.shift();\n        \n        // Longer delay after error\n        await new Promise(resolve => setTimeout(resolve, 200));\n      }\n    }\n  }\n\n  /**\n   * Start periodically sending GGA updates to the NTRIP caster\n   */\n  startGgaUpdates() {\n    // Stop existing interval if any\n    this.stopGgaUpdates();\n    \n    // Send initial update immediately - this is critical for NTRIP casters\n    // that require GGA before sending RTCM data\n    let initialGgaSent = false;\n    \n    if (this.isConnected) {\n      if (this.lastGga) {\n        initialGgaSent = this.sendGGA(this.lastGga);\n      } else if (this.lastPosition) {\n        const gga = this.createGgaSentence(this.lastPosition);\n        initialGgaSent = this.sendGGA(gga);\n      } else {\n        // If we don't have a position, generate a default one\n        // This is necessary because many casters require a GGA\n        // to start streaming data, even if it's not accurate\n        try {\n          // Create a default position close to the equator (to be in range of most casters)\n          const defaultPosition = {\n            latitude: 0.1,\n            longitude: 0.1,\n            quality: 1,\n            satellites: 8,\n            hdop: 1.0\n          };\n          \n          const gga = this.createGgaSentence(defaultPosition);\n          initialGgaSent = this.sendGGA(gga);\n          \n          // Log that we're using a fallback position\n          console.warn('No position available, sending default GGA position to NTRIP caster');\n          this.eventEmitter.emit('ntrip:info', { \n            message: 'Using default position for NTRIP. Corrections may not be optimal.'\n          });\n        } catch (error) {\n          console.error('Failed to send default GGA position:', error);\n        }\n      }\n    }\n    \n    // Start regular interval for updates\n    this.ggaInterval = setInterval(() => {\n      if (this.isConnected) {\n        if (this.lastGga) {\n          this.sendGGA(this.lastGga);\n        } else if (this.lastPosition) {\n          const gga = this.createGgaSentence(this.lastPosition);\n          this.sendGGA(gga);\n        }\n      }\n    }, this.config.ggaUpdateInterval * 1000);\n    \n    // If we didn't send the initial GGA and the caster might be waiting,\n    // try sending GGA messages with progressively shorter intervals initially\n    if (this.isConnected && !initialGgaSent) {\n      // Try again after 1 second\n      setTimeout(() => {\n        if (this.isConnected && (this.lastGga || this.lastPosition)) {\n          const gga = this.lastGga || this.createGgaSentence(this.lastPosition);\n          this.sendGGA(gga);\n        }\n      }, 1000);\n      \n      // And again after 3 seconds\n      setTimeout(() => {\n        if (this.isConnected && (this.lastGga || this.lastPosition)) {\n          const gga = this.lastGga || this.createGgaSentence(this.lastPosition);\n          this.sendGGA(gga);\n        }\n      }, 3000);\n    }\n  }\n\n  /**\n   * Stop sending GGA updates\n   */\n  stopGgaUpdates() {\n    if (this.ggaInterval) {\n      clearInterval(this.ggaInterval);\n      this.ggaInterval = null;\n    }\n  }\n\n  /**\n   * Set the GGA update interval\n   * @param {number} seconds - Update interval in seconds\n   */\n  setGgaUpdateInterval(seconds) {\n    // Validate input\n    const interval = parseInt(seconds);\n    if (isNaN(interval) || interval <= 0) {\n      console.warn('Invalid GGA update interval, using default:', this.config.ggaUpdateInterval);\n      return;\n    }\n    \n    // Update config\n    this.config.ggaUpdateInterval = interval;\n    console.log(`NTRIP GGA update interval set to ${interval} seconds`);\n    \n    // Restart interval if already running\n    if (this.ggaInterval) {\n      this.startGgaUpdates(); // This will stop and restart with new interval\n    }\n  }\n\n  /**\n   * Update the device with the latest position\n   * @param {Object} position - Position data\n   */\n  updatePosition(position) {\n    this.lastPosition = position;\n    \n    // If GGA updates are enabled and we're connected, create and send GGA\n    if (this.config.sendGga && this.isConnected && !this.lastGga) {\n      const gga = this.createGgaSentence(position);\n      this.sendGGA(gga);\n    }\n  }\n\n  /**\n   * Send NMEA GGA sentence to NTRIP caster\n   * @param {string} gga - NMEA GGA sentence\n   * @returns {Promise<boolean>} Whether message was sent successfully\n   */\n  async sendGGA(gga) {\n    if (!this.isConnected) {\n      return false;\n    }\n    \n    try {\n      // Store the GGA for periodic updates\n      this.lastGga = gga;\n      \n      // Choose method based on active mode\n      if (this.activeMode === 'websocket') {\n        return this.sendGGAWebSocket(gga);\n      } else if (this.activeMode === 'direct') {\n        return this.sendGGADirect(gga);\n      } else if (this.activeMode === 'proxy') {\n        return this.sendGGAProxy(gga);\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Error sending GGA:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Send GGA via WebSocket\n   * @param {string} gga - NMEA GGA sentence\n   * @returns {Promise<boolean>} Whether message was sent successfully\n   */\n  async sendGGAWebSocket(gga) {\n    if (!this.webSocket || this.webSocket.readyState !== WebSocket.OPEN) {\n      return false;\n    }\n    \n    try {\n      this.webSocket.send(JSON.stringify({\n        command: 'gga',\n        data: gga\n      }));\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending GGA via WebSocket:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Send GGA directly to NTRIP caster\n   * @param {string} gga - NMEA GGA sentence\n   * @returns {Promise<boolean>} Whether message was sent successfully\n   */\n  async sendGGADirect(gga) {\n    try {\n      // Create POST request URL\n      const protocol = this.config.casterPort === 443 ? 'https' : 'http';\n      const url = `${protocol}://${this.config.casterHost}:${this.config.casterPort}/${this.config.mountpoint}`;\n      \n      // Create headers with authentication if needed\n      const headers = new Headers({\n        'Content-Type': 'text/plain',\n        'User-Agent': 'NTRIP WebGNSS Client'\n      });\n      \n      if (this.config.username && this.config.password) {\n        const auth = btoa(`${this.config.username}:${this.config.password}`);\n        headers.append('Authorization', `Basic ${auth}`);\n      }\n      \n      // Send request - don't await the response as it's fire-and-forget\n      fetch(url, {\n        method: 'POST',\n        headers,\n        body: gga\n      }).catch(error => {\n        console.warn('Error sending GGA directly:', error);\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending GGA directly:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Send GGA via proxy\n   * @param {string} gga - NMEA GGA sentence\n   * @returns {Promise<boolean>} Whether message was sent successfully\n   */\n  async sendGGAProxy(gga) {\n    try {\n      // Determine proxy URL\n      let proxyUrl = this.config.proxyUrl;\n      \n      // If it's a relative URL, make it absolute\n      if (proxyUrl.startsWith('/')) {\n        const protocol = window.location.protocol;\n        proxyUrl = `${protocol}//${window.location.host}${proxyUrl}`;\n      }\n      \n      // Add GGA endpoint\n      proxyUrl = `${proxyUrl}/${this.config.mountpoint}/gga`;\n      \n      // Add parameters\n      const params = new URLSearchParams({\n        host: this.config.casterHost,\n        port: this.config.casterPort.toString()\n      });\n      \n      if (this.config.username && this.config.password) {\n        params.append('user', this.config.username);\n        params.append('password', this.config.password);\n      }\n      \n      proxyUrl += `?${params.toString()}`;\n      \n      // Send request - don't await the response as it's fire-and-forget\n      fetch(proxyUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: gga\n      }).catch(error => {\n        console.warn('Error sending GGA via proxy:', error);\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Error sending GGA via proxy:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create NMEA GGA sentence from position data\n   * @param {Object} position - Position data\n   * @returns {string} GGA sentence\n   */\n  createGgaSentence(position) {\n    try {\n      // Validate position\n      if (!position || typeof position.latitude !== 'number' || typeof position.longitude !== 'number') {\n        throw new Error('Invalid position data');\n      }\n      \n      // Get time in UTC\n      const now = new Date();\n      const hours = now.getUTCHours().toString().padStart(2, '0');\n      const minutes = now.getUTCMinutes().toString().padStart(2, '0');\n      const seconds = now.getUTCSeconds().toString().padStart(2, '0');\n      const milliseconds = now.getUTCMilliseconds().toString().padStart(3, '0');\n      const timeStr = `${hours}${minutes}${seconds}.${milliseconds}`;\n      \n      // Format latitude - IMPORTANT: This must follow NMEA spec exactly\n      // Format: DDMM.MMMMM (degrees and decimal minutes)\n      const latDeg = Math.floor(Math.abs(position.latitude));\n      const latMin = (Math.abs(position.latitude) - latDeg) * 60;\n      const latStr = `${latDeg.toString().padStart(2, '0')}${latMin.toFixed(7)}`;\n      const latDir = position.latitude >= 0 ? 'N' : 'S';\n      \n      // Format longitude - IMPORTANT: This must follow NMEA spec exactly\n      // Format: DDDMM.MMMMM (degrees and decimal minutes)\n      const lonDeg = Math.floor(Math.abs(position.longitude));\n      const lonMin = (Math.abs(position.longitude) - lonDeg) * 60;\n      const lonStr = `${lonDeg.toString().padStart(3, '0')}${lonMin.toFixed(7)}`;\n      const lonDir = position.longitude >= 0 ? 'E' : 'W';\n      \n      // Quality indicator\n      // 0 = No fix, 1 = GPS fix, 2 = DGPS, 4 = RTK fixed, 5 = RTK float\n      const quality = position.quality || 1;\n      \n      // Number of satellites\n      const satellites = position.satellites || 8; // Default to 8 satellites to indicate strong signal\n      \n      // HDOP\n      const hdop = position.hdop || 1.0;\n      \n      // Altitude\n      const altitude = position.altitude || 0.0;\n      \n      // Geoid separation (set to 0 if not available)\n      const geoidSep = position.geoidSeparation || 0.0;\n      \n      // Age of differential corrections (set to empty if not available)\n      const diffAge = position.diffAge || '';\n      \n      // Differential reference station ID (empty if not available)\n      const diffStationId = position.diffStationId || '';\n      \n      // Construct GGA sentence\n      const ggaFields = [\n        'GPGGA',         // Message ID\n        timeStr,         // UTC Time\n        latStr,          // Latitude\n        latDir,          // N/S indicator\n        lonStr,          // Longitude\n        lonDir,          // E/W indicator\n        quality,         // Quality indicator\n        satellites,      // Number of satellites\n        hdop.toFixed(1), // HDOP\n        altitude.toFixed(1), // Altitude\n        'M',             // Altitude units (meters)\n        geoidSep.toFixed(1), // Geoid separation\n        'M',             // Geoid separation units (meters)\n        diffAge,         // Age of differential corrections\n        diffStationId    // Differential reference station ID\n      ];\n      \n      // Join fields with commas\n      const sentence = '$' + ggaFields.join(',');\n      \n      // Calculate checksum\n      let checksum = 0;\n      for (let i = 1; i < sentence.length; i++) {\n        checksum ^= sentence.charCodeAt(i);\n      }\n      \n      // Format checksum as 2-digit hex\n      const checksumHex = checksum.toString(16).toUpperCase().padStart(2, '0');\n      \n      // Add checksum and line ending\n      const fullSentence = `${sentence}*${checksumHex}\\r\\n`;\n      \n      // Validate the created sentence\n      if (this.isValidGga(fullSentence)) {\n        return fullSentence;\n      } else {\n        throw new Error('Generated GGA sentence failed validation');\n      }\n    } catch (error) {\n      console.error('Error creating GGA sentence:', error);\n      \n      // Return a minimal valid GGA sentence with 0,0 coordinates\n      // This is a fallback that uses a pre-computed valid GGA with checksum\n      return '$GPGGA,000000.000,0000.0000,N,00000.0000,E,1,08,1.0,0.0,M,0.0,M,,*67\\r\\n';\n    }\n  }\n  \n  /**\n   * Validate if a GGA sentence is properly formatted\n   * @param {string} sentence - GGA sentence to validate\n   * @returns {boolean} Whether the sentence is valid\n   */\n  isValidGga(sentence) {\n    // Basic format check\n    if (!sentence || typeof sentence !== 'string') {\n      return false;\n    }\n    \n    // Must start with $GPGGA or $GNGGA\n    if (!sentence.startsWith('$GPGGA') && !sentence.startsWith('$GNGGA')) {\n      return false;\n    }\n    \n    // Must have enough fields (minimum 14 comma-separated values)\n    const parts = sentence.split(',');\n    if (parts.length < 14) {\n      return false;\n    }\n    \n    // Must have lat/long data\n    if (!parts[2] || !parts[4]) {\n      return false;\n    }\n    \n    // Verify checksum if present\n    if (sentence.includes('*')) {\n      try {\n        const checksumIndex = sentence.indexOf('*');\n        const providedChecksum = parseInt(sentence.substring(checksumIndex + 1), 16);\n        \n        // Calculate checksum\n        let calculatedChecksum = 0;\n        for (let i = 1; i < checksumIndex; i++) {\n          calculatedChecksum ^= sentence.charCodeAt(i);\n        }\n        \n        if (providedChecksum !== calculatedChecksum) {\n          console.error(`GGA checksum mismatch: provided ${providedChecksum}, calculated ${calculatedChecksum}`);\n          return false;\n        }\n      } catch (e) {\n        console.error('Error validating GGA checksum:', e);\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n  /**\n   * Update correction age based on last message time\n   */\n  updateCorrectionAge() {\n    if (this.rtcmStats.lastMessageTime) {\n      const now = new Date();\n      this.rtcmStats.correctionAge = (now - this.rtcmStats.lastMessageTime) / 1000;\n    }\n  }\n\n  /**\n   * Get RTCM statistics\n   * @returns {Object} RTCM statistics\n   */\n  getRtcmStats() {\n    // Update correction age\n    this.updateCorrectionAge();\n    \n    return {\n      ...this.rtcmStats,\n      connected: this.isConnected,\n      mode: this.activeMode,\n      reconnectAttempts: this.reconnectAttempts\n    };\n  }\n\n  /**\n   * Reset RTCM statistics\n   */\n  resetRtcmStats() {\n    this.rtcmStats = {\n      messagesReceived: 0,\n      bytesSent: 0,\n      bytesReceived: 0,\n      lastMessageTime: null,\n      correctionAge: null\n    };\n  }\n\n  /**\n   * Enable/disable auto-reconnect\n   * @param {boolean} enabled - Whether auto-reconnect is enabled\n   * @param {number} maxAttempts - Maximum reconnection attempts\n   */\n  setAutoReconnect(enabled, maxAttempts = 5) {\n    this.autoReconnect = enabled;\n    this.maxReconnectAttempts = maxAttempts;\n  }\n  \n  /**\n   * Get connection status information\n   * @returns {Object} Connection status\n   */\n  getConnectionInfo() {\n    this.updateCorrectionAge();\n    \n    return {\n      connected: this.isConnected,\n      connecting: this.isConnecting,\n      casterHost: this.config.casterHost,\n      mountpoint: this.config.mountpoint,\n      mode: this.activeMode,\n      rtcmStats: { ...this.rtcmStats },\n      reconnectAttempts: this.reconnectAttempts,\n      autoReconnect: this.autoReconnect\n    };\n  }\n}\n\nexport default NtripClient;","/**\n * Constants - Centralized constants for the GNSS.js library\n * \n * This module contains all shared constants used throughout the library,\n * eliminating duplication and providing a single source of truth.\n */\n\n/**\n * Bluetooth LE Service UUIDs\n */\nexport const BLE_SERVICES = {\n  // Nordic UART Service (most common in BLE devices)\n  NORDIC_UART: '6e400001-b5a3-f393-e0a9-e50e24dcca9e',\n  \n  // Alternative UART Service form\n  UART_ALTERNATIVE: '0000ffe0-0000-1000-8000-00805f9b34fb',\n  \n  // HM-10/HM-16/HM-17 BLE Module Service\n  HM_MODULE: '49535343-fe7d-4ae5-8fa9-9fafd205e455',\n  \n  // HC-08/HC-10 BLE Service\n  HC_MODULE: '0000fff0-0000-1000-8000-00805f9b34fb',\n  \n  // Generic BLE services\n  GENERIC_ATTRIBUTE: '00001801-0000-1000-8000-00805f9b34fb',\n  GENERIC_ACCESS: '00001800-0000-1000-8000-00805f9b34fb',\n  \n  // SparkFun RTK-specific custom service\n  SPARKFUN_CUSTOM: '0000fe9a-0000-1000-8000-00805f9b34fb',\n  \n  // Classic Bluetooth SPP (Serial Port Profile)\n  SPP: '00001101-0000-1000-8000-00805f9b34fb',\n  \n  // Testing/fallback services\n  HEART_RATE: '0000180d-0000-1000-8000-00805f9b34fb',\n  DEVICE_INFO: '0000180a-0000-1000-8000-00805f9b34fb'\n};\n\n/**\n * Bluetooth LE Characteristic UUIDs\n * Note: TX/RX naming is from the device's perspective\n * - TX: Device → Client (we receive from device)\n * - RX: Client → Device (we send to device)\n */\nexport const BLE_CHARACTERISTICS = {\n  // Nordic UART characteristics\n  NORDIC_TX: '6e400002-b5a3-f393-e0a9-e50e24dcca9e', // Device transmits to us (we receive)\n  NORDIC_RX: '6e400003-b5a3-f393-e0a9-e50e24dcca9e', // Device receives from us (we transmit)\n  \n  // Common alternative BLE characteristic UUIDs for transmission (device → client)\n  UART_TX: '0000ffe1-0000-1000-8000-00805f9b34fb',\n  HC_TX: '0000fff1-0000-1000-8000-00805f9b34fb',\n  HM10_TX: '49535343-8841-43f4-a8d4-ecbe34729bb3',\n  SPARKFUN_TX: '0000fe9a-0002-1000-8000-00805f9b34fb',\n  \n  // Common alternative BLE characteristic UUIDs for reception (client → device)\n  UART_RX: '0000ffe2-0000-1000-8000-00805f9b34fb',\n  HC_RX: '0000fff2-0000-1000-8000-00805f9b34fb',\n  HM10_RX: '49535343-1e4d-4bd9-ba61-23c647249616',\n  SPARKFUN_RX: '0000fe9a-0003-1000-8000-00805f9b34fb',\n  \n  // Classic Bluetooth SPP characteristics\n  SPP_TX: '00001103-0000-1000-8000-00805f9b34fb',\n  SPP_RX: '00001102-0000-1000-8000-00805f9b34fb'\n};\n\n/**\n * NMEA Message Types\n */\nexport const NMEA_TYPES = {\n  GGA: 'GGA', // Global Positioning System Fix Data\n  GSA: 'GSA', // GNSS DOP and Active Satellites\n  GSV: 'GSV', // GNSS Satellites in View\n  RMC: 'RMC', // Recommended Minimum Specific GNSS Data\n  VTG: 'VTG', // Course Over Ground and Ground Speed\n  GST: 'GST', // GNSS Pseudorange Error Statistics\n  GLL: 'GLL', // Geographic Position - Latitude/Longitude\n  ZDA: 'ZDA'  // Time & Date\n};\n\n/**\n * Event Types\n * Standardized event names used throughout the library\n */\nexport const EVENTS = {\n  // Connection events\n  CONNECTING: 'device:connecting',\n  CONNECTED: 'device:connected',\n  DISCONNECTED: 'device:disconnected',\n  CONNECTION_ERROR: 'device:connection:error',\n  \n  // Data events\n  DATA_RECEIVED: 'device:data',\n  DATA_SENT: 'device:data:sent',\n  \n  // NMEA parsing events\n  NMEA_SENTENCE: 'nmea:sentence',\n  POSITION_UPDATE: 'position:update',\n  SATELLITES_UPDATE: 'satellites:update',\n  \n  // NTRIP events\n  NTRIP_CONNECTING: 'ntrip:connecting',\n  NTRIP_CONNECTED: 'ntrip:connected',\n  NTRIP_DISCONNECTED: 'ntrip:disconnected',\n  NTRIP_ERROR: 'ntrip:error',\n  NTRIP_DATA: 'ntrip:rtcm',\n  \n  // Settings and configuration events\n  SETTINGS_CHANGED: 'settings:changed',\n  DEVICE_CONFIGURING: 'device:configuring',\n  DEVICE_CONFIGURED: 'device:configured'\n};\n\n/**\n * Default connection settings\n */\nexport const DEFAULT_CONNECTION_SETTINGS = {\n  preferredMethod: 'auto',\n  connectionTimeout: 10000, // 10 seconds\n  \n  // Bluetooth-specific defaults\n  bluetooth: {\n    preferBLE: true, // Prefer BLE over classic Bluetooth\n  },\n  \n  // Serial-specific defaults\n  serial: {\n    baudRate: 9600,\n    dataBits: 8,\n    stopBits: 1,\n    parity: 'none',\n    flowControl: 'none'\n  }\n};\n\n/**\n * Default NTRIP settings\n */\nexport const DEFAULT_NTRIP_SETTINGS = {\n  port: 2101,\n  autoConnect: false,\n  useProxy: false,\n  autoDetectCors: true,\n  ggaUpdateInterval: 10, // seconds\n  autoSendGga: true\n};\n\nexport default {\n  BLE_SERVICES,\n  BLE_CHARACTERISTICS,\n  NMEA_TYPES,\n  EVENTS,\n  DEFAULT_CONNECTION_SETTINGS,\n  DEFAULT_NTRIP_SETTINGS\n};","/**\n * Settings - Manages and persists module settings\n */\nimport { DEFAULT_CONNECTION_SETTINGS, DEFAULT_NTRIP_SETTINGS } from './constants.js';\n\nexport class Settings {\n  constructor() {\n    this.dbName = 'gnss-module-db';\n    this.storeName = 'settings';\n    this.db = null;\n    this.settings = {\n      // Connection settings\n      connection: {\n        preferredMethod: DEFAULT_CONNECTION_SETTINGS.preferredMethod,\n        lastMethod: null,\n        autoConnect: false,\n        connectionTimeout: DEFAULT_CONNECTION_SETTINGS.connectionTimeout,\n        \n        // Method-specific settings\n        bluetooth: {\n          lastDeviceId: null,\n          preferBLE: DEFAULT_CONNECTION_SETTINGS.bluetooth.preferBLE,\n          filters: []\n        },\n        serial: {\n          baudRate: DEFAULT_CONNECTION_SETTINGS.serial.baudRate,\n          dataBits: DEFAULT_CONNECTION_SETTINGS.serial.dataBits,\n          stopBits: DEFAULT_CONNECTION_SETTINGS.serial.stopBits,\n          parity: DEFAULT_CONNECTION_SETTINGS.serial.parity,\n          flowControl: DEFAULT_CONNECTION_SETTINGS.serial.flowControl,\n          lastPort: null\n        }\n      },\n      \n      // NTRIP settings\n      ntrip: {\n        host: '',\n        port: DEFAULT_NTRIP_SETTINGS.port,\n        mountpoint: '',\n        username: '',\n        password: '',\n        autoConnect: DEFAULT_NTRIP_SETTINGS.autoConnect,\n        proxyUrl: 'http://localhost:3000',\n        useProxy: DEFAULT_NTRIP_SETTINGS.useProxy,\n        autoDetectCors: DEFAULT_NTRIP_SETTINGS.autoDetectCors,\n        ggaUpdateInterval: DEFAULT_NTRIP_SETTINGS.ggaUpdateInterval,\n        autoSendGga: DEFAULT_NTRIP_SETTINGS.autoSendGga,\n      },\n      \n      // UI settings\n      ui: {\n        showDebugInfo: false,\n        unitSystem: 'metric', // or 'imperial'\n        coordinateFormat: 'dd', // decimal degrees, 'dms', or 'utm'\n      },\n      \n      // Rover settings\n      rover: {\n        messageRate: 1, // Hz\n        dynamicModel: 'pedestrian', // automotive, pedestrian, etc.\n      }\n    };\n    \n    // Initialize the database\n    this.initDb();\n  }\n\n  /**\n   * Initialize IndexedDB\n   */\n  async initDb() {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, 1);\n      \n      request.onerror = (event) => {\n        console.error('IndexedDB error:', event);\n        reject(event);\n      };\n      \n      request.onsuccess = (event) => {\n        this.db = event.target.result;\n        this.loadSettings().then(resolve);\n      };\n      \n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          db.createObjectStore(this.storeName, { keyPath: 'id' });\n        }\n      };\n    });\n  }\n\n  /**\n   * Load settings from IndexedDB\n   */\n  async loadSettings() {\n    if (!this.db) {\n      return;\n    }\n    \n    return new Promise((resolve) => {\n      const transaction = this.db.transaction(this.storeName, 'readonly');\n      const store = transaction.objectStore(this.storeName);\n      const request = store.get('user-settings');\n      \n      request.onsuccess = (event) => {\n        if (event.target.result) {\n          // Merge with defaults for any new settings\n          const savedSettings = event.target.result.value;\n          \n          // Deep merge the settings\n          this.deepMerge(this.settings, savedSettings);\n        }\n        resolve();\n      };\n      \n      request.onerror = () => {\n        resolve(); // Use defaults if error\n      };\n    });\n  }\n\n  /**\n   * Deep merge objects (helper function)\n   * @param {Object} target - Target object\n   * @param {Object} source - Source object\n   * @returns {Object} Merged object\n   */\n  deepMerge(target, source) {\n    for (const key in source) {\n      if (source.hasOwnProperty(key)) {\n        // Check if the source value is an object and not null\n        if (source[key] !== null && typeof source[key] === 'object' && key in target && target[key] !== null) {\n          // Initialize target[key] if it's null but source[key] is an object\n          if (target[key] === null) {\n            target[key] = Array.isArray(source[key]) ? [] : {};\n          }\n          this.deepMerge(target[key], source[key]);\n        } else {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }\n\n  /**\n   * Save settings to IndexedDB\n   */\n  async saveSettings() {\n    if (!this.db) {\n      return;\n    }\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction(this.storeName, 'readwrite');\n      const store = transaction.objectStore(this.storeName);\n      const request = store.put({\n        id: 'user-settings',\n        value: this.settings\n      });\n      \n      request.onsuccess = () => resolve();\n      request.onerror = (event) => reject(event);\n    });\n  }\n\n  /**\n   * Get a setting value\n   * @param {string} section - Settings section (connection, bluetooth, ntrip, ui, rover)\n   * @param {string} key - Setting key\n   * @returns {*} Setting value\n   */\n  get(section, key) {\n    if (this.settings[section] && key in this.settings[section]) {\n      return this.settings[section][key];\n    }\n    return null;\n  }\n\n  /**\n   * Set a setting value\n   * @param {string} section - Settings section\n   * @param {string} key - Setting key\n   * @param {*} value - Setting value\n   */\n  async set(section, key, value) {\n    if (!this.settings[section]) {\n      this.settings[section] = {};\n    }\n    \n    this.settings[section][key] = value;\n    \n    await this.saveSettings();\n    return value;\n  }\n\n  /**\n   * Update multiple settings at once\n   * @param {string} section - Settings section\n   * @param {Object} values - Object with key/value pairs\n   */\n  async update(section, values) {\n    if (!this.settings[section]) {\n      this.settings[section] = {};\n    }\n    \n    this.settings[section] = {\n      ...this.settings[section],\n      ...values\n    };\n    \n    await this.saveSettings();\n    return this.settings[section];\n  }\n\n  /**\n   * Get all settings for a section\n   * @param {string} section - Settings section\n   * @returns {Object} Section settings\n   */\n  getSection(section) {\n    return this.settings[section] || {};\n  }\n\n  /**\n   * Get all settings\n   * @returns {Object} All settings\n   */\n  getAll() {\n    return this.settings;\n  }\n\n  /**\n   * Clear all settings and reset to defaults\n   */\n  async reset() {\n    this.settings = {\n      connection: {\n        preferredMethod: DEFAULT_CONNECTION_SETTINGS.preferredMethod,\n        lastMethod: null,\n        autoConnect: false,\n        connectionTimeout: DEFAULT_CONNECTION_SETTINGS.connectionTimeout,\n        \n        bluetooth: {\n          lastDeviceId: null,\n          preferBLE: DEFAULT_CONNECTION_SETTINGS.bluetooth.preferBLE,\n          filters: []\n        },\n        serial: {\n          baudRate: DEFAULT_CONNECTION_SETTINGS.serial.baudRate,\n          dataBits: DEFAULT_CONNECTION_SETTINGS.serial.dataBits,\n          stopBits: DEFAULT_CONNECTION_SETTINGS.serial.stopBits,\n          parity: DEFAULT_CONNECTION_SETTINGS.serial.parity,\n          flowControl: DEFAULT_CONNECTION_SETTINGS.serial.flowControl,\n          lastPort: null\n        }\n      },\n      \n      ntrip: {\n        host: '',\n        port: DEFAULT_NTRIP_SETTINGS.port,\n        mountpoint: '',\n        username: '',\n        password: '',\n        autoConnect: DEFAULT_NTRIP_SETTINGS.autoConnect,\n        proxyUrl: 'http://localhost:3000',\n        useProxy: DEFAULT_NTRIP_SETTINGS.useProxy,\n        autoDetectCors: DEFAULT_NTRIP_SETTINGS.autoDetectCors,\n        ggaUpdateInterval: DEFAULT_NTRIP_SETTINGS.ggaUpdateInterval,\n        autoSendGga: DEFAULT_NTRIP_SETTINGS.autoSendGga,\n      },\n      \n      ui: {\n        showDebugInfo: false,\n        unitSystem: 'metric',\n        coordinateFormat: 'dd',\n      },\n      \n      rover: {\n        messageRate: 1,\n        dynamicModel: 'pedestrian',\n      }\n    };\n    \n    await this.saveSettings();\n  }\n}\n\nexport default Settings;","/**\n * ConnectionManager - Manages and prioritizes different connection methods for GNSS devices\n */\nexport class ConnectionManager {\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.connectionMethods = []; // List of registered connection handlers\n    this.activeConnection = null;\n    this.isConnected = false;\n    this.isConnecting = false;\n    this.debugSettings = options.debug || { \n      info: false, \n      debug: false,\n      errors: true \n    };\n    \n    // Logger for debugging\n    this.logger = {\n      info: (...args) => {\n        if (this.debugSettings.info) {\n          console.info('[CONN-MGR]', ...args);\n        }\n      },\n      debug: (...args) => {\n        if (this.debugSettings.debug) {\n          console.debug('[CONN-MGR]', ...args);\n        }\n      },\n      warn: (...args) => {\n        // Warnings are typically shown regardless of debug settings\n        console.warn('[CONN-MGR]', ...args);\n      },\n      error: (...args) => {\n        if (this.debugSettings.errors) {\n          console.error('[CONN-MGR]', ...args);\n        }\n      }\n    };\n  }\n  \n  /**\n   * Register a connection handler\n   * @param {ConnectionHandler} handler - The connection handler to register\n   */\n  registerConnectionMethod(handler) {\n    this.connectionMethods.push(handler);\n    this.logger.info(`Registered connection method: ${handler.name}`);\n  }\n  \n  /**\n   * Get available connection methods\n   * @param {Object} options - Connection options that may affect availability\n   * @returns {Array} - List of available connection handlers\n   */\n  getAvailableMethods(options = {}) {\n    const available = this.connectionMethods\n      .filter(handler => handler.isAvailable())\n      .sort((a, b) => b.getPriority(options) - a.getPriority(options));\n    \n    this.logger.debug(`Available connection methods: ${available.map(h => h.name).join(', ')}`);\n    return available;\n  }\n  \n  /**\n   * Connect to a GNSS device using the most appropriate method\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} - Whether connection was successful\n   */\n  async connect(options = {}) {\n    if (this.isConnected) {\n      this.logger.info('Already connected');\n      return true;\n    }\n    \n    if (this.isConnecting) {\n      this.logger.info('Connection already in progress');\n      return false;\n    }\n    \n    this.isConnecting = true;\n    this.eventEmitter.emit('connection:connecting', {});\n    \n    try {\n      // Get available connection methods sorted by priority\n      const availableMethods = this.getAvailableMethods(options);\n      \n      if (availableMethods.length === 0) {\n        throw new Error('No connection methods available');\n      }\n      \n      // Try specific method if requested\n      if (options.method && options.method !== 'auto') {\n        const specificMethod = this.connectionMethods\n          .find(handler => handler.name === options.method && handler.isAvailable());\n          \n        if (specificMethod) {\n          this.logger.info(`Trying specifically requested method: ${options.method}`);\n          const success = await specificMethod.connect(options);\n          \n          if (success) {\n            this.activeConnection = specificMethod;\n            this.isConnected = true;\n            this.isConnecting = false;\n            this.eventEmitter.emit('connection:connected', {\n              method: specificMethod.name,\n              deviceInfo: specificMethod.getDeviceInfo()\n            });\n            return true;\n          }\n          \n          // Do not fall back to auto if a specific method was requested\n          this.logger.info(`Requested method ${options.method} failed`);\n          this.isConnecting = false;\n          this.eventEmitter.emit('connection:error', {\n            message: `Failed to connect with ${options.method} method`\n          });\n          return false;\n        } else {\n          this.logger.warn(`Requested method ${options.method} not available`);\n          this.isConnecting = false;\n          this.eventEmitter.emit('connection:error', {\n            message: `Requested connection method '${options.method}' is not available`\n          });\n          return false;\n        }\n      }\n      \n      // Try each method in priority order\n      for (const handler of availableMethods) {\n        this.logger.info(`Trying connection method: ${handler.name}`);\n        this.eventEmitter.emit('connection:connecting', { method: handler.name });\n        \n        try {\n          const success = await handler.connect(options);\n          \n          if (success) {\n            this.activeConnection = handler;\n            this.isConnected = true;\n            this.isConnecting = false;\n            this.eventEmitter.emit('connection:connected', {\n              method: handler.name,\n              deviceInfo: handler.getDeviceInfo()\n            });\n            return true;\n          }\n        } catch (err) {\n          this.logger.error(`Error with ${handler.name}:`, err);\n          // Continue with next method\n        }\n        \n        this.logger.info(`Connection with ${handler.name} failed, trying next method`);\n      }\n      \n      // If we get here, all methods failed\n      this.logger.error('All connection methods failed');\n      this.isConnecting = false;\n      this.eventEmitter.emit('connection:error', {\n        message: 'Failed to connect with any available method'\n      });\n      return false;\n    } catch (error) {\n      this.logger.error('Connection error:', error);\n      this.isConnecting = false;\n      this.eventEmitter.emit('connection:error', {\n        message: error.message,\n        error\n      });\n      return false;\n    }\n  }\n  \n  /**\n   * Disconnect from the device\n   * @returns {Promise<void>}\n   */\n  async disconnect() {\n    if (!this.isConnected || !this.activeConnection) {\n      return;\n    }\n    \n    try {\n      await this.activeConnection.disconnect();\n      this.activeConnection = null;\n      this.isConnected = false;\n      this.eventEmitter.emit('connection:disconnected', {});\n    } catch (error) {\n      this.logger.error('Error during disconnect:', error);\n      this.eventEmitter.emit('connection:error', {\n        message: 'Failed to disconnect properly',\n        error\n      });\n    }\n  }\n  \n  /**\n   * Send data to the connected device\n   * @param {string|ArrayBuffer} data - Data to send\n   * @returns {Promise<boolean>} - Whether data was sent successfully\n   */\n  async sendData(data) {\n    if (!this.isConnected || !this.activeConnection) {\n      this.logger.error('Cannot send data: no active connection');\n      return false;\n    }\n    \n    try {\n      return await this.activeConnection.sendData(data);\n    } catch (error) {\n      this.logger.error('Error sending data:', error);\n      this.eventEmitter.emit('connection:warning', {\n        message: `Failed to send data: ${error.message}`,\n        error\n      });\n      return false;\n    }\n  }\n  \n  /**\n   * Check if device is connected\n   * @returns {boolean} - Whether device is connected\n   */\n  isDeviceConnected() {\n    return this.isConnected && this.activeConnection !== null;\n  }\n  \n  /**\n   * Get connection status information\n   * @returns {Object} - Connection status\n   */\n  getConnectionInfo() {\n    if (this.activeConnection) {\n      return {\n        connected: this.isConnected,\n        connecting: this.isConnecting,\n        method: this.activeConnection.name,\n        deviceInfo: this.activeConnection.getDeviceInfo()\n      };\n    }\n    \n    return {\n      connected: false,\n      connecting: this.isConnecting,\n      method: null,\n      deviceInfo: null\n    };\n  }\n}\n\nexport default ConnectionManager;","/**\n * ConnectionHandler - Base class for implementing different connection methods\n */\nexport class ConnectionHandler {\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.isConnected = false;\n    this.isConnecting = false;\n    this.name = 'unknown';\n    this.debugSettings = options.debug || { \n      info: false, \n      debug: false,\n      errors: true \n    };\n    \n    // Logger for debugging\n    this.logger = {\n      info: (...args) => {\n        if (this.debugSettings.info) {\n          console.info(`[${this.name.toUpperCase()}]`, ...args);\n        }\n      },\n      debug: (...args) => {\n        if (this.debugSettings.debug) {\n          console.debug(`[${this.name.toUpperCase()}]`, ...args);\n        }\n      },\n      warn: (...args) => {\n        // Warnings are typically shown regardless of debug settings\n        console.warn(`[${this.name.toUpperCase()}]`, ...args);\n      },\n      error: (...args) => {\n        if (this.debugSettings.errors) {\n          console.error(`[${this.name.toUpperCase()}]`, ...args);\n        }\n      }\n    };\n  }\n  \n  /**\n   * Check if this connection method is available\n   * @returns {boolean} - Whether this method is available\n   */\n  isAvailable() {\n    throw new Error('isAvailable() must be implemented by subclass');\n  }\n  \n  /**\n   * Get priority level for this connection method\n   * @param {Object} options - Connection options that may affect priority\n   * @returns {number} - Priority level (higher = try first)\n   */\n  getPriority(options = {}) {\n    throw new Error('getPriority() must be implemented by subclass');\n  }\n  \n  /**\n   * Connect to a device\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} - Whether connection was successful\n   */\n  async connect(options = {}) {\n    throw new Error('connect() must be implemented by subclass');\n  }\n  \n  /**\n   * Disconnect from the device\n   * @returns {Promise<void>}\n   */\n  async disconnect() {\n    throw new Error('disconnect() must be implemented by subclass');\n  }\n  \n  /**\n   * Send data to the device\n   * @param {string|ArrayBuffer} data - Data to send\n   * @returns {Promise<boolean>} - Whether data was sent successfully\n   */\n  async sendData(data) {\n    throw new Error('sendData() must be implemented by subclass');\n  }\n  \n  /**\n   * Get information about the connected device\n   * @returns {Object} - Device information\n   */\n  getDeviceInfo() {\n    throw new Error('getDeviceInfo() must be implemented by subclass');\n  }\n}\n\nexport default ConnectionHandler;","/**\n * BluetoothHandler - Implements Web Bluetooth connections\n */\nimport { ConnectionHandler } from './connection-handler.js';\nimport { BLE_SERVICES, BLE_CHARACTERISTICS, EVENTS } from '../constants.js';\n\nexport class BluetoothHandler extends ConnectionHandler {\n  constructor(eventEmitter, options = {}) {\n    super(eventEmitter, options);\n    this.name = 'bluetooth';\n    this.device = null;\n    this.server = null;\n    this.serialService = null;\n    this.rxCharacteristic = null;\n    this.txCharacteristic = null;\n    this.autoReconnect = false;\n    this.connectionTimeout = 10000; // 10 seconds\n    this.pollingEnabled = false;\n    this.pollingInterval = null;\n    \n    // Use the service UUIDs from the constants module\n    this.SERVICE_UUIDS = [\n      BLE_SERVICES.NORDIC_UART,\n      BLE_SERVICES.UART_ALTERNATIVE,\n      BLE_SERVICES.HM_MODULE,\n      BLE_SERVICES.HC_MODULE,\n      BLE_SERVICES.GENERIC_ATTRIBUTE,\n      BLE_SERVICES.GENERIC_ACCESS,\n      BLE_SERVICES.SPARKFUN_CUSTOM,\n      BLE_SERVICES.SPP,\n      BLE_SERVICES.HEART_RATE,\n      BLE_SERVICES.DEVICE_INFO\n    ];\n    \n    // Use the characteristic UUIDs from the constants module\n    // Device transmit = We receive\n    this.NORDIC_RX_UUID = BLE_CHARACTERISTICS.NORDIC_TX;\n    // Device receive = We transmit\n    this.NORDIC_TX_UUID = BLE_CHARACTERISTICS.NORDIC_RX;\n    \n    // Characteristics where WE TRANSMIT TO the device\n    this.BLE_TX_UUIDS = [\n      BLE_CHARACTERISTICS.NORDIC_RX,\n      BLE_CHARACTERISTICS.UART_RX,\n      BLE_CHARACTERISTICS.HC_RX,\n      BLE_CHARACTERISTICS.HM10_RX,\n      BLE_CHARACTERISTICS.SPARKFUN_RX\n    ];\n    \n    // Characteristics where WE RECEIVE FROM the device\n    this.BLE_RX_UUIDS = [\n      BLE_CHARACTERISTICS.NORDIC_TX,\n      BLE_CHARACTERISTICS.UART_TX,\n      BLE_CHARACTERISTICS.HC_TX,\n      BLE_CHARACTERISTICS.HM10_TX,\n      BLE_CHARACTERISTICS.SPARKFUN_TX\n    ];\n    \n    // Legacy UUIDs from constants\n    this.SPP_SERVICE_UUID = BLE_SERVICES.SPP;\n    this.SPP_RX_UUID = BLE_CHARACTERISTICS.SPP_RX;\n    this.SPP_TX_UUID = BLE_CHARACTERISTICS.SPP_TX;\n    \n    // Bind methods\n    this.onDisconnected = this.onDisconnected.bind(this);\n  }\n\n  /**\n   * Check if Web Bluetooth API is available\n   * @returns {boolean} - Whether Web Bluetooth is available\n   */\n  isAvailable() {\n    return typeof navigator !== 'undefined' && \n           navigator.bluetooth !== undefined;\n  }\n  \n  /**\n   * Get priority level for Bluetooth connections\n   * @param {Object} options - Connection options\n   * @returns {number} - Priority level\n   */\n  getPriority(options = {}) {\n    // Default priority (1-10 scale, higher = try first)\n    let priority = 7; // Bluetooth is generally preferred over Serial as it's more common\n    \n    // Increase priority if explicitly preferred\n    if (options.preferredMethod === 'bluetooth') {\n      priority += 3;\n    }\n    \n    // Increase priority if we have a last used device\n    if (options.deviceId || (options.bluetooth && options.bluetooth.lastDeviceId)) {\n      priority += 2;\n    }\n    \n    // If connecting to a specific device type\n    if (options.sparkfun) {\n      priority += 1;\n    }\n    \n    // Return final priority value\n    return priority;\n  }\n\n  /**\n   * Connect to a GNSS receiver via Bluetooth\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connect(options = {}) {\n    if (this.isConnected) {\n      return true;\n    }\n    \n    if (this.isConnecting) {\n      return false;\n    }\n    \n    this.isConnecting = true;\n    this.eventEmitter.emit('bluetooth:connecting', {});\n    \n    try {\n      // Browser compatibility check\n      if (!navigator.bluetooth) {\n        throw new Error('Web Bluetooth API is not supported in this browser');\n      }\n      \n      // Debug logging\n      console.log('BluetoothHandler.connect called with options:', JSON.stringify(options));\n      \n      // List all services we're requesting access to\n      console.log('Available service UUIDs:', this.SERVICE_UUIDS);\n      \n      // Check if this is a SparkFun device connection\n      if (options.sparkfun) {\n        console.log('Using SparkFun device connection method');\n        // Use our special SparkFun connection method\n        return this.connectToSparkFunFacet(options);\n      }\n      \n      // Request device with optional filters\n      const requestOptions = {\n        acceptAllDevices: !options.filters,\n        filters: options.filters || [],\n        optionalServices: this.SERVICE_UUIDS // Include all possible service UUIDs\n      };\n      \n      console.log('Calling navigator.bluetooth.requestDevice with options:', JSON.stringify(requestOptions));\n      \n      // Check if a device object was directly passed (from GnssModule.connectBluetooth)\n      if (options.deviceObj) {\n        console.log('Using device object passed from GnssModule:', options.deviceObj.name || options.deviceObj.id);\n        this.device = options.deviceObj;\n      }\n      // Try to get device ID from options or Bluetooth section (legacy path)\n      else if (typeof navigator.bluetooth.getDevices === 'function') {\n        const deviceId = options.deviceId || \n                        (options.bluetooth && options.bluetooth.lastDeviceId);\n        \n        // Allow connecting to last device\n        if (deviceId) {\n          try {\n            this.device = await navigator.bluetooth.getDevices()\n              .then(devices => devices.find(d => d.id === deviceId));\n              \n            if (!this.device) {\n              throw new Error('Device not found');\n            }\n          } catch (error) {\n            this.logger.debug('Failed to reconnect to known device:', error);\n            // This path should not be reached with the updated flow\n            throw new Error('Device selection must happen in GnssModule.connectBluetooth');\n          }\n        } else {\n          // This path should not be reached with the updated flow\n          throw new Error('Device selection must happen in GnssModule.connectBluetooth');\n        }\n      } else {\n        // This path should not be reached with the updated flow\n        throw new Error('Device selection must happen in GnssModule.connectBluetooth');\n      }\n      \n      if (!this.device) {\n        throw new Error('No device selected');\n      }\n      \n      // Set up disconnection listener\n      this.device.addEventListener('gattserverdisconnected', this.onDisconnected);\n      \n      // Connect to GATT server\n      this.eventEmitter.emit('bluetooth:connecting', { step: 'gatt' });\n      this.server = await this.device.gatt.connect();\n      \n      // Get a suitable UART/Serial service\n      this.eventEmitter.emit('bluetooth:connecting', { step: 'service' });\n      \n      // First, get all services to see what's available\n      const allServices = await this.server.getPrimaryServices();\n      this.logger.debug('All available services:', allServices.map(s => s.uuid));\n      \n      if (allServices.length === 0) {\n        throw new Error('No Bluetooth services found on this device');\n      }\n      \n      // Then try to find one of our known UART services\n      let foundService = null;\n      let serviceUUID = '';\n      \n      // Try each of our known service UUIDs\n      // BLE devices sometimes use shortened 16-bit UUIDs\n      for (const uuid of this.SERVICE_UUIDS) {\n        try {\n          this.logger.debug(`Trying to connect to service: ${uuid}`);\n          const service = await this.server.getPrimaryService(uuid);\n          if (service) {\n            foundService = service;\n            serviceUUID = uuid;\n            this.logger.debug(`Successfully connected to service: ${uuid}`);\n            break;\n          }\n        } catch (e) {\n          this.logger.debug(`Service ${uuid} not found on device`);\n          \n          // Try to convert to 16-bit UUID if it might be a standard BLE UUID\n          try {\n            // For standard 16-bit UUIDs, like \"180d\" for Heart Rate\n            // Extract the 16-bit part if it's a full UUID\n            if (uuid.includes('-')) {\n              const shortUuid = uuid.split('-')[0].replace('0000', '');\n              if (shortUuid.length === 4) {\n                this.logger.debug(`Trying 16-bit service UUID: ${shortUuid}`);\n                const service = await this.server.getPrimaryService(shortUuid);\n                if (service) {\n                  foundService = service;\n                  serviceUUID = shortUuid;\n                  this.logger.debug(`Successfully connected to 16-bit service: ${shortUuid}`);\n                  break;\n                }\n              }\n            }\n          } catch (e2) {\n            this.logger.debug(`16-bit service ID not found either`);\n          }\n          // Continue to next service UUID\n        }\n      }\n      \n      // If we couldn't find a known service, try to use any available service that has characteristics\n      if (!foundService) {\n        this.logger.warn('Could not find any known UART/Serial services');\n        \n        // Try each service to find one with suitable characteristics\n        for (const service of allServices) {\n          try {\n            const characteristics = await service.getCharacteristics();\n            this.logger.debug(`Service ${service.uuid} has ${characteristics.length} characteristics`);\n            \n            if (characteristics.length > 0) {\n              foundService = service;\n              serviceUUID = service.uuid;\n              this.logger.debug(`Using service ${service.uuid} with ${characteristics.length} characteristics`);\n              break;\n            }\n          } catch (e) {\n            this.logger.debug(`Could not get characteristics for service ${service.uuid}`);\n          }\n        }\n      }\n      \n      if (!foundService) {\n        throw new Error('Could not find a suitable Bluetooth service for communication');\n      }\n      \n      this.serialService = foundService;\n      this.logger.debug(`Using service: ${serviceUUID}`);\n      this.eventEmitter.emit('bluetooth:connecting', { step: 'service-found', serviceUUID });\n      \n      // Get characteristics\n      this.eventEmitter.emit('bluetooth:connecting', { step: 'characteristics' });\n      \n      // Try to get TX and RX characteristics using a more flexible approach\n      // First, get all characteristics from the service\n      this.logger.debug('Getting characteristics from service:', this.serialService.uuid);\n      let characteristics = [];\n      try {\n        characteristics = await this.serialService.getCharacteristics();\n        this.logger.debug('All characteristics:', characteristics.map(c => ({\n          uuid: c.uuid,\n          properties: Object.keys(c.properties).filter(p => c.properties[p])\n        })));\n      } catch (error) {\n        this.logger.error(`Error getting characteristics: ${error.message}`);\n        this.eventEmitter.emit('bluetooth:error', {\n          message: `Failed to get characteristics: ${error.message}`,\n          error\n        });\n        throw error;\n      }\n      \n      if (characteristics.length === 0) {\n        throw new Error('No characteristics found in the selected service');\n      }\n      \n      // Try with known BLE characteristic pairs first\n      // Creating all possible combinations of TX and RX characteristics\n      const knownCharacteristicPairs = [];\n      \n      // Nordic UART pair (most common for BLE UART)\n      knownCharacteristicPairs.push({ \n        rx: this.NORDIC_TX_UUID, // The TX characteristic from device\n        tx: this.NORDIC_RX_UUID  // The RX characteristic to device\n      });\n      \n      // Try all combinations of TX/RX pairs from our lists\n      for (const txUuid of this.BLE_TX_UUIDS) {\n        for (const rxUuid of this.BLE_RX_UUIDS) {\n          // Skip if it's the same as Nordic pair we already added\n          if (txUuid === this.NORDIC_TX_UUID && rxUuid === this.NORDIC_RX_UUID) {\n            continue;\n          }\n          knownCharacteristicPairs.push({ rx: txUuid, tx: rxUuid });\n        }\n      }\n      \n      // Some devices use the same characteristic for both TX and RX\n      for (const txUuid of this.BLE_TX_UUIDS) {\n        knownCharacteristicPairs.push({ rx: txUuid, tx: txUuid });\n      }\n      \n      // Add legacy SPP pair at the end\n      knownCharacteristicPairs.push({ rx: this.SPP_RX_UUID, tx: this.SPP_TX_UUID });\n      \n      // Try each known pair\n      for (const pair of knownCharacteristicPairs) {\n        try {\n          this.logger.debug(`Trying RX=${pair.rx}, TX=${pair.tx}`);\n          const rx = await this.serialService.getCharacteristic(pair.rx);\n          const tx = await this.serialService.getCharacteristic(pair.tx);\n          \n          if (rx && tx) {\n            this.rxCharacteristic = rx;\n            this.txCharacteristic = tx;\n            this.logger.debug(`Found matching RX/TX pair: RX=${pair.rx}, TX=${pair.tx}`);\n            break;\n          }\n        } catch (e) {\n          this.logger.debug(`Characteristic pair not found: ${e.message}`);\n          // Continue to next pair\n        }\n      }\n      \n      // If we couldn't find a known pair, try to detect based on properties\n      if (!this.rxCharacteristic || !this.txCharacteristic) {\n        this.logger.debug('No known characteristic pair found, detecting based on properties');\n        \n        // First log all available characteristics with their properties for debugging\n        characteristics.forEach(char => {\n          const props = Object.keys(char.properties).filter(p => char.properties[p]).join(', ');\n          this.logger.debug(`Characteristic ${char.uuid} has properties: ${props}`);\n        });\n        \n        // Look for characteristics with the right properties for RX/TX\n        // RX (from device to us): needs notify or read\n        // TX (from us to device): needs write or writeWithoutResponse\n        const notifyChars = characteristics.filter(char => char.properties.notify);\n        const readChars = characteristics.filter(char => char.properties.read);\n        const writeChars = characteristics.filter(char => \n            char.properties.write || char.properties.writeWithoutResponse);\n        \n        this.logger.debug(`Found ${notifyChars.length} notify, ${readChars.length} read, and ${writeChars.length} write characteristics`);\n        \n        // Prefer notify characteristics for receiving data (our RX)\n        if (notifyChars.length > 0) {\n          this.rxCharacteristic = notifyChars[0];\n          this.logger.debug(`Using RX characteristic with notify: ${this.rxCharacteristic.uuid}`);\n        } \n        // Fall back to read characteristics if no notify is available\n        else if (readChars.length > 0) {\n          this.rxCharacteristic = readChars[0];\n          this.logger.debug(`Using RX characteristic with read: ${this.rxCharacteristic.uuid}`);\n        } \n        // Last resort - use any available characteristic\n        else if (characteristics.length > 0) {\n          this.rxCharacteristic = characteristics[0];\n          this.logger.debug(`Using fallback RX characteristic: ${this.rxCharacteristic.uuid}`);\n          this.logger.warn('This characteristic may not support notifications or reading');\n        }\n        \n        // For TX, we need a characteristic we can write to\n        if (writeChars.length > 0) {\n          // Don't use the same characteristic we're using for RX if possible\n          const uniqueWriteChars = writeChars.filter(char => \n              this.rxCharacteristic && char.uuid !== this.rxCharacteristic.uuid);\n              \n          if (uniqueWriteChars.length > 0) {\n            this.txCharacteristic = uniqueWriteChars[0];\n          } else {\n            this.txCharacteristic = writeChars[0];\n          }\n          \n          this.logger.debug(`Using TX characteristic with write: ${this.txCharacteristic.uuid}`);\n        } \n        // If we absolutely must, use any other characteristic as a last resort\n        else if (characteristics.length > 1) {\n          // Try to find a different characteristic than the one used for RX\n          const otherChars = characteristics.filter(char => \n              this.rxCharacteristic && char.uuid !== this.rxCharacteristic.uuid);\n              \n          if (otherChars.length > 0) {\n            this.txCharacteristic = otherChars[0];\n          } else {\n            this.txCharacteristic = characteristics[1] || characteristics[0];\n          }\n          \n          this.logger.debug(`Using fallback TX characteristic: ${this.txCharacteristic.uuid}`);\n          this.logger.warn('This characteristic may not support writing');\n        } \n        // If only one characteristic is available, use it for both\n        else if (characteristics.length === 1) {\n          this.txCharacteristic = characteristics[0];\n          this.logger.debug(`Using single characteristic for both RX and TX: ${this.txCharacteristic.uuid}`);\n          this.logger.warn('Using the same characteristic for both reading and writing');\n        }\n        \n        // Final check to ensure we selected characteristics with the right properties\n        if (this.rxCharacteristic) {\n          const rxProps = Object.keys(this.rxCharacteristic.properties)\n            .filter(p => this.rxCharacteristic.properties[p]).join(', ');\n          this.logger.debug(`Selected RX characteristic ${this.rxCharacteristic.uuid} with properties: ${rxProps}`);\n        }\n        \n        if (this.txCharacteristic) {\n          const txProps = Object.keys(this.txCharacteristic.properties)\n            .filter(p => this.txCharacteristic.properties[p]).join(', ');\n          this.logger.debug(`Selected TX characteristic ${this.txCharacteristic.uuid} with properties: ${txProps}`);\n        }\n      }\n      \n      // Verify we have both characteristics\n      if (!this.rxCharacteristic) {\n        throw new Error('Could not find a suitable RX characteristic');\n      }\n      \n      if (!this.txCharacteristic) {\n        throw new Error('Could not find a suitable TX characteristic');\n      }\n      \n      // Define a helper method for setting up safe polling\n      const setupSafePolling = (interval = 2000) => {\n        this.logger.debug(`Setting up safe polling with interval: ${interval}ms`);\n        this.pollingEnabled = true;\n        \n        // Clear any existing polling interval\n        if (this.pollingInterval) {\n          clearInterval(this.pollingInterval);\n        }\n        \n        // We'll use a timeout-based approach to ensure we don't queue up multiple reads\n        let isReading = false;\n        \n        const pollOnce = async () => {\n          if (!this.isConnected || !this.rxCharacteristic || isReading) {\n            return;\n          }\n          \n          isReading = true;\n          \n          try {\n            // Wait for GATT to be ready\n            // Check if characteristic supports reading first\n            if (this.rxCharacteristic.properties.read) {\n              const value = await this.rxCharacteristic.readValue();\n              \n              // Only process if there's actual data\n              if (value && value.byteLength > 0) {\n                this.handleIncomingData({ target: { value } });\n              }\n            }\n          } catch (e) {\n            // Only log the first few errors to avoid flooding the console\n            if (!this.pollingErrorCount) this.pollingErrorCount = 0;\n            this.pollingErrorCount++;\n            \n            if (this.pollingErrorCount < 5) {\n              this.logger.warn(`Error polling characteristic (${this.pollingErrorCount}/5): ${e.message}`);\n            } else if (this.pollingErrorCount === 5) {\n              this.logger.warn(`Reached maximum polling error count. Suppressing further errors.`);\n            }\n            \n            // If too many errors occur, increase the polling interval\n            if (this.pollingErrorCount === 10) {\n              clearInterval(this.pollingInterval);\n              this.pollingInterval = setInterval(pollOnce, interval * 2);\n              this.logger.warn(`Increased polling interval to ${interval * 2}ms due to errors`);\n            }\n          } finally {\n            isReading = false;\n          }\n        };\n        \n        this.pollingInterval = setInterval(pollOnce, interval);\n      };\n      \n      // Try to start notifications for incoming data\n      // But make this optional - some devices might use a polling approach instead\n      try {\n        this.logger.debug(`Setting up data reception for characteristic: ${this.rxCharacteristic.uuid}`);\n        const props = Object.keys(this.rxCharacteristic.properties)\n          .filter(p => this.rxCharacteristic.properties[p]);\n        this.logger.debug(`Characteristic properties: ${props.join(', ')}`);\n        \n        // Only attempt to start notifications if the characteristic supports it\n        if (this.rxCharacteristic.properties.notify) {\n          try {\n            await this.rxCharacteristic.startNotifications();\n            this.rxCharacteristic.addEventListener('characteristicvaluechanged', \n              (event) => this.handleIncomingData(event));\n            this.logger.debug('Notifications started successfully');\n          } catch (notifyError) {\n            this.logger.warn(`Error starting notifications: ${notifyError.message}`);\n            this.eventEmitter.emit('bluetooth:warning', {\n              message: `Could not start notifications: ${notifyError.message}`\n            });\n            \n            // Check if read is available as fallback\n            if (this.rxCharacteristic.properties.read) {\n              this.logger.debug('Falling back to conservative polling');\n              setupSafePolling(3000); // Use a longer interval for fallback polling\n            }\n          }\n        } else if (this.rxCharacteristic.properties.read) {\n          this.logger.debug('Characteristic supports read but not notify, setting up conservative polling');\n          setupSafePolling(2000); // Poll every 2 seconds\n        } else {\n          this.logger.debug('Characteristic does not support read or notify, will use passive reception only');\n          this.eventEmitter.emit('bluetooth:warning', {\n            message: 'Device does not support notifications or reading. Data reception may be limited.'\n          });\n        }\n      } catch (error) {\n        this.logger.error(`Error setting up data reception: ${error.message}`);\n        this.eventEmitter.emit('bluetooth:warning', {\n          message: `Could not set up data reception: ${error.message}`,\n          error\n        });\n      }\n      \n      this.isConnected = true;\n      this.isConnecting = false;\n      this.autoReconnect = options.autoReconnect || false;\n      \n      this.eventEmitter.emit('bluetooth:connected', {\n        deviceId: this.device.id,\n        deviceName: this.device.name\n      });\n      \n      // Also emit generic connection event for the connection manager\n      this.eventEmitter.emit('device:connected', {\n        method: 'bluetooth',\n        deviceId: this.device.id,\n        deviceName: this.device.name\n      });\n      \n      return true;\n    } catch (error) {\n      this.isConnecting = false;\n      this.eventEmitter.emit('bluetooth:error', {\n        message: error.message,\n        error\n      });\n      \n      return false;\n    }\n  }\n\n  /**\n   * Disconnect from the device\n   */\n  async disconnect() {\n    if (!this.isConnected || !this.device) {\n      return;\n    }\n    \n    try {\n      this.autoReconnect = false;\n      \n      // Safely clean up notifications if they were started\n      if (this.rxCharacteristic) {\n        try {\n          if (this.rxCharacteristic.properties.notify) {\n            await this.rxCharacteristic.stopNotifications().catch(e => {\n              this.logger.warn(`Error stopping notifications: ${e.message}`);\n            });\n          }\n        } catch (err) {\n          this.logger.warn(`Error cleaning up notifications: ${err.message}`);\n        }\n      }\n      \n      // Clear polling interval if it was used\n      if (this.pollingInterval) {\n        clearInterval(this.pollingInterval);\n        this.pollingInterval = null;\n      }\n      \n      // Reset polling state\n      this.pollingEnabled = false;\n      this.pollingErrorCount = 0;\n      \n      if (this.device.gatt.connected) {\n        await this.device.gatt.disconnect();\n      }\n      \n      this.isConnected = false;\n      this.eventEmitter.emit('bluetooth:disconnected', {\n        deviceId: this.device.id,\n        deviceName: this.device.name\n      });\n      \n      // Also emit generic disconnection event for the connection manager\n      this.eventEmitter.emit('device:disconnected', {\n        method: 'bluetooth',\n        deviceId: this.device.id,\n        deviceName: this.device.name\n      });\n    } catch (error) {\n      this.logger.error('Error during disconnect:', error);\n      this.eventEmitter.emit('bluetooth:error', {\n        message: 'Failed to disconnect properly',\n        error\n      });\n    }\n  }\n\n  /**\n   * Handle device disconnection\n   */\n  async onDisconnected() {\n    const wasConnected = this.isConnected;\n    this.isConnected = false;\n    \n    // Safe cleanup of polling\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n      this.pollingInterval = null;\n    }\n    \n    // Reset all polling related state\n    this.pollingEnabled = false;\n    this.pollingErrorCount = 0;\n    \n    this.server = null;\n    this.serialService = null;\n    this.rxCharacteristic = null;\n    this.txCharacteristic = null;\n    \n    if (wasConnected) {\n      this.eventEmitter.emit('bluetooth:disconnected', {\n        deviceId: this.device?.id,\n        deviceName: this.device?.name\n      });\n      \n      // Also emit generic disconnection event for the connection manager\n      this.eventEmitter.emit('device:disconnected', {\n        method: 'bluetooth',\n        deviceId: this.device?.id,\n        deviceName: this.device?.name\n      });\n      \n      // Attempt automatic reconnection if enabled\n      if (this.autoReconnect && this.device) {\n        setTimeout(() => {\n          this.connect({ deviceId: this.device.id, autoReconnect: true });\n        }, 1000);\n      }\n    }\n  }\n\n  /**\n   * Handle incoming data from the device\n   * @param {Event} event - Characteristic value changed event\n   */\n  handleIncomingData(event) {\n    try {\n      const value = event.target.value;\n      const data = value.buffer;\n      \n      // Convert ArrayBuffer to string for debugging\n      const textDecoder = new TextDecoder('utf-8');\n      const dataString = textDecoder.decode(new Uint8Array(data));\n      \n      // Generate a hex representation for debugging\n      const hexValues = Array.from(new Uint8Array(data))\n        .map(b => b.toString(16).padStart(2, '0'))\n        .join(' ');\n      \n      // Check for empty or extremely short data\n      if (dataString.length < 3) {\n        this.logger.debug(`Received very short data (${dataString.length} bytes), likely not NMEA. Skipping.`);\n        return;\n      }\n      \n      if (this.debugSettings.debug) {\n        this.logger.debug('Received data:', dataString);\n        this.logger.debug('Hex representation:', hexValues);\n      }\n      \n      // More comprehensive detection of NMEA data\n      const isNmea = dataString.includes('$');\n      const containsCrLf = dataString.includes('\\r\\n');\n      const hasNmeaSentence = /\\$(GP|GL|GA|GB|GN)[A-Z]{3},/.test(dataString);\n      \n      // Skip data processing if:\n      // 1. This appears to be just the device name repeating\n      // 2. The device name has already been reported many times\n      if (this.lastDataString === dataString && !isNmea) {\n        this.logger.debug('Skipping duplicate data (device name)');\n        return;\n      }\n      \n      // Remember the last string to detect repeats\n      this.lastDataString = dataString;\n      \n      // Handle potential configuration messages (responses to our PUBX commands)\n      if (dataString.includes('PUBX') && !this.configurationResponded) {\n        this.logger.debug('Detected configuration response from device:', dataString);\n        this.configurationResponded = true;\n        \n        // Try to enable GGA messages again immediately after receiving a response\n        setTimeout(async () => {\n          try {\n            await this.sendData('$PUBX,40,GGA,1,1,1,1,1,0*5A\\r\\n');\n            this.logger.debug('Resent GGA enable command after receiving PUBX response');\n          } catch (e) {\n            this.logger.warn('Failed to send follow-up command:', e);\n          }\n        }, 300);\n        \n        // Try to detect if this includes error information\n        if (dataString.toLowerCase().includes('error') || dataString.includes('ERR')) {\n          this.logger.warn('Device responded with error to configuration commands');\n        } else {\n          this.logger.debug('Device appears to have accepted configuration');\n        }\n      }\n      \n      // Look for UBX binary protocol responses\n      if (hexValues.startsWith('b5 62')) {\n        this.logger.debug('Detected UBX binary protocol response');\n        \n        // Parse UBX message class and ID\n        if (hexValues.length >= 10) {\n          const msgClass = parseInt(hexValues.split(' ')[2], 16);\n          const msgId = parseInt(hexValues.split(' ')[3], 16);\n          this.logger.debug(`UBX message class: 0x${msgClass.toString(16)}, ID: 0x${msgId.toString(16)}`);\n        }\n      }\n      \n      // Sometimes RMC/GGA sentences are actually present but in unusual format\n      // Try to extract them even if not perfectly formatted\n      if (isNmea && !hasNmeaSentence) {\n        // Look for position data with regex pattern matching\n        const extractedPosition = dataString.match(/(\\d{2})(\\d{2}\\.\\d+),([NS]),(\\d{3})(\\d{2}\\.\\d+),([EW])/);\n        if (extractedPosition) {\n          this.logger.debug('Found position data in non-standard format:', extractedPosition[0]);\n          // Consider constructing a valid NMEA sentence here if needed\n        }\n      }\n      \n      // Emit a raw data event with the string, before any parsing\n      this.eventEmitter.emit('bluetooth:raw-data', dataString);\n      \n      // Only emit for parsing if this looks like NMEA data\n      if (isNmea) {\n        // Use standardized events from constants - emit only device:data for consistency\n        // This helps consolidate event handling in the GnssModule\n        this.eventEmitter.emit(EVENTS.DATA_RECEIVED, data);\n      }\n    } catch (error) {\n      this.logger.error('Error handling incoming data:', error);\n    }\n  }\n\n  /**\n   * Send data to the device\n   * @param {string|ArrayBuffer} data - Data to send\n   * @returns {Promise<boolean>} Whether send was successful\n   */\n  async sendData(data) {\n    if (!this.isConnected || !this.txCharacteristic) {\n      this.logger.error('Cannot send data: device not connected or TX characteristic not available');\n      return false;\n    }\n    \n    try {\n      // Convert string to ArrayBuffer if needed\n      let buffer;\n      if (typeof data === 'string') {\n        if (this.debugSettings.debug) {\n          this.logger.debug('Sending string data:', data);\n        }\n        buffer = new TextEncoder().encode(data);\n      } else if (data instanceof ArrayBuffer) {\n        const textDecoder = new TextDecoder('utf-8');\n        const dataString = textDecoder.decode(new Uint8Array(data));\n        if (this.debugSettings.debug) {\n          this.logger.debug('Sending binary data:', dataString);\n        }\n        buffer = data;\n      } else {\n        throw new Error('Invalid data type. Expected string or ArrayBuffer');\n      }\n      \n      // When using Nordic UART Service (which is typical for many GNSS devices):\n      // The write characteristic might need writeWithoutResponse\n      if (this.txCharacteristic.uuid === '6e400002-b5a3-f393-e0a9-e50e24dcca9e') {\n        if (this.debugSettings.debug) {\n          this.logger.debug('Using writeWithoutResponse for Nordic UART TX');\n        }\n        \n        // Break data into smaller chunks (20 bytes max) to avoid overflow\n        const MAX_CHUNK_SIZE = 20;\n        const dataArray = new Uint8Array(buffer);\n        \n        for (let i = 0; i < dataArray.length; i += MAX_CHUNK_SIZE) {\n          const chunk = dataArray.slice(i, Math.min(i + MAX_CHUNK_SIZE, dataArray.length));\n          // Use writeValueWithoutResponse for Nordic UART\n          await this.txCharacteristic.writeValueWithoutResponse(chunk);\n          \n          // Small delay between chunks\n          await new Promise(resolve => setTimeout(resolve, 50));\n        }\n      } \n      // Otherwise try standard methods\n      else {\n        // Determine the write type based on the characteristic properties\n        let writeOptions = {};\n        if (this.txCharacteristic.properties.writeWithoutResponse) {\n          if (this.debugSettings.debug) {\n            this.logger.debug('Using writeWithoutResponse');\n          }\n          writeOptions = { type: 'writeWithoutResponse' };\n        } else {\n          if (this.debugSettings.debug) {\n            this.logger.debug('Using standard write');\n          }\n        }\n        \n        await this.txCharacteristic.writeValue(buffer, writeOptions);\n      }\n      \n      this.logger.debug('Data sent successfully');\n      return true;\n    } catch (error) {\n      this.logger.error('Failed to send data:', error);\n      this.eventEmitter.emit('bluetooth:warning', {\n        message: `Failed to send data: ${error.message} - continuing operation`,\n        error\n      });\n      // Return true even if sending fails - we want to continue trying to receive data\n      // This helps if the device is in a mode where it's sending but not receiving\n      return true; \n    }\n  }\n\n  /**\n   * Send a command to configure the device\n   * @param {string} command - Command string\n   * @returns {Promise<boolean>} Whether command was sent successfully\n   */\n  async sendCommand(command) {\n    // Ensure command ends with proper line ending\n    if (!command.endsWith('\\r\\n')) {\n      command += '\\r\\n';\n    }\n    \n    return this.sendData(command);\n  }\n\n  /**\n   * Special connection method for SparkFun Facet RTK Rover\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} Whether connection was successful\n   */\n  async connectToSparkFunFacet(options = {}) {\n    if (this.isConnected) {\n      return true;\n    }\n    \n    if (this.isConnecting) {\n      return false;\n    }\n    \n    this.isConnecting = true;\n    this.eventEmitter.emit('bluetooth:connecting', { type: 'sparkfun' });\n    \n    try {\n      // Browser compatibility check\n      if (!navigator.bluetooth) {\n        throw new Error('Web Bluetooth API is not supported in this browser');\n      }\n      \n      // Create a broader list of optionalServices to improve our chances\n      // of finding the correct one for the SparkFun device\n      \n      // Create a comprehensive list of possible BLE UART services - use only full UUIDs\n      const allPossibleServices = [\n        // The specific known SparkFun service (this may vary by device model)\n        '0000ffe0-0000-1000-8000-00805f9b34fb', // Common for HC-05/06/08 modules\n        \n        // Common UART services in priority order\n        '6e400001-b5a3-f393-e0a9-e50e24dcca9e', // Nordic UART Service\n        '49535343-fe7d-4ae5-8fa9-9fafd205e455', // HM-10 Service\n        '0000fff0-0000-1000-8000-00805f9b34fb', // Alternative UART Service\n        \n        // Generic services\n        '00001800-0000-1000-8000-00805f9b34fb', // Generic Access\n        '00001801-0000-1000-8000-00805f9b34fb', // Generic Attribute\n        \n        // Add all other service UUIDs we know about\n        ...this.SERVICE_UUIDS,\n        \n        // Try some common UUID patterns with different bases\n        '0000180a-0000-1000-8000-00805f9b34fb', // Device Information\n        '00001809-0000-1000-8000-00805f9b34fb', // Health Thermometer\n        '0000180d-0000-1000-8000-00805f9b34fb', // Heart Rate\n        '0000180f-0000-1000-8000-00805f9b34fb', // Battery Service\n        '0000181a-0000-1000-8000-00805f9b34fb'  // Environmental Sensing\n      ];\n      \n      // Request device with Facet specific filters\n      const requestOptions = {\n        filters: [\n          { namePrefix: 'Facet' },\n          { namePrefix: 'SparkFun' },\n          { namePrefix: 'RTK' }\n        ],\n        optionalServices: allPossibleServices\n      };\n      \n      // Show device picker\n      this.logger.debug('Requesting SparkFun Facet RTK device...');\n      this.device = await navigator.bluetooth.requestDevice(requestOptions);\n      \n      if (!this.device) {\n        throw new Error('No device selected');\n      }\n      \n      // Set up disconnection listener\n      this.device.addEventListener('gattserverdisconnected', this.onDisconnected);\n      \n      // Connect to GATT server\n      this.logger.debug('Connecting to GATT server...');\n      this.server = await this.device.gatt.connect();\n      \n      // Get all available services\n      this.logger.debug('Getting all services...');\n      const allServices = await this.server.getPrimaryServices();\n      \n      if (allServices.length === 0) {\n        throw new Error('No services found on device');\n      }\n      \n      this.logger.debug('Available services:', allServices.map(s => s.uuid));\n      \n      // Find a service we can use for communication\n      // Create a priority list of services to try - use only full UUIDs\n      const priorityServices = [\n        // First priority: Known UART/Serial services\n        '0000ffe0-0000-1000-8000-00805f9b34fb', // BLE UART (HC-05/06/08)\n        '0000ffe5-0000-1000-8000-00805f9b34fb', // BLE Data Service\n        '6e400001-b5a3-f393-e0a9-e50e24dcca9e', // Nordic UART\n        '49535343-fe7d-4ae5-8fa9-9fafd205e455', // HM-10/16/17\n        '0000fff0-0000-1000-8000-00805f9b34fb', // HC-08/10 Alternative\n        \n        // Generic services - lowest priority\n        '00001800-0000-1000-8000-00805f9b34fb', // Generic Access \n        '00001801-0000-1000-8000-00805f9b34fb'  // Generic Attribute\n      ];\n      \n      // Log all available services for debugging\n      this.logger.debug('Available services on device:');\n      allServices.forEach(service => {\n        this.logger.debug(`- ${service.uuid}`);\n      });\n      \n      // Try each service in priority order\n      for (const serviceId of priorityServices) {\n        const service = allServices.find(s => s.uuid === serviceId);\n        if (service) {\n          this.logger.debug(`Found priority service: ${serviceId}`);\n          this.serialService = service;\n          break;\n        }\n      }\n      \n      // If we still don't have a service, try all services\n      if (!this.serialService) {\n        this.logger.debug('No priority service found, trying all services...');\n        \n        // Try each service and see if it has suitable characteristics\n        for (const service of allServices) {\n          try {\n            const chars = await service.getCharacteristics();\n            this.logger.debug(`Service ${service.uuid} has ${chars.length} characteristics`);\n            \n            // Look for characteristics with read property (needed for data reception)\n            const readChar = chars.find(c => c.properties.read);\n            if (readChar) {\n              this.logger.debug(`Found service with readable characteristic: ${service.uuid}`);\n              this.serialService = service;\n              break;\n            }\n          } catch (e) {\n            this.logger.warn(`Error checking characteristics for service ${service.uuid}:`, e);\n          }\n        }\n        \n        // Last resort: use the first service\n        if (!this.serialService && allServices.length > 0) {\n          this.logger.debug('Using first available service as last resort');\n          this.serialService = allServices[0];\n        }\n      }\n      \n      if (!this.serialService) {\n        throw new Error('Could not find a suitable service');\n      }\n      \n      this.logger.debug('Using service:', this.serialService.uuid);\n      \n      // Get all characteristics from this service\n      this.logger.debug('Getting characteristics...');\n      const characteristics = await this.serialService.getCharacteristics();\n      \n      if (characteristics.length === 0) {\n        throw new Error('No characteristics found');\n      }\n      \n      this.logger.debug('Available characteristics:', characteristics.map(c => ({\n        uuid: c.uuid,\n        properties: Object.keys(c.properties).filter(p => c.properties[p])\n      })));\n      \n      // For SparkFun devices, we'll prioritize characteristics with read/write permissions\n      this.rxCharacteristic = characteristics.find(char => char.properties.read);\n      this.txCharacteristic = characteristics.find(char => char.properties.write || char.properties.writeWithoutResponse);\n      \n      // If we couldn't find a read characteristic, use the first available\n      if (!this.rxCharacteristic && characteristics.length > 0) {\n        this.rxCharacteristic = characteristics[0];\n      }\n      \n      // If we couldn't find a write characteristic, use the second available or the first one\n      if (!this.txCharacteristic && characteristics.length > 1) {\n        this.txCharacteristic = characteristics[1];\n      } else if (!this.txCharacteristic) {\n        this.txCharacteristic = characteristics[0];\n      }\n      \n      this.logger.debug('Using RX characteristic:', this.rxCharacteristic.uuid);\n      this.logger.debug('Using TX characteristic:', this.txCharacteristic.uuid);\n      \n      // Set up enhanced polling for SparkFun device with better error recovery\n      this.logger.debug('Setting up enhanced polling for SparkFun device...');\n      this.pollingEnabled = true;\n      \n      // For some devices, we need to try multiple characteristics\n      // Get all characteristics from this service\n      let allCharacteristics = [];\n      try {\n        // Get all characteristics for potential polling targets\n        allCharacteristics = await this.serialService.getCharacteristics();\n        this.logger.debug(`Found ${allCharacteristics.length} characteristics to potentially poll`);\n      } catch (e) {\n        this.logger.warn('Error getting all characteristics:', e);\n      }\n      \n      // Track failure count to potentially switch characteristics\n      let failureCount = 0;\n      const MAX_FAILURES = 3;\n      let currentCharIndex = 0;\n      let dataReceived = false;\n      let startupDelay = true;\n      \n      // Give device time to initialize before starting polling\n      setTimeout(() => {\n        startupDelay = false;\n        this.logger.debug('Starting data polling after initialization delay');\n      }, 3000);\n      \n      // Use a more robust polling approach with two methods\n      this.pollingInterval = setInterval(async () => {\n        // Skip polling during startup delay\n        if (startupDelay) {\n          return;\n        }\n        \n        try {\n          // Try notification method first (preferred)\n          if (this.isConnected && this.rxCharacteristic && this.rxCharacteristic.properties.notify) {\n            if (!this.rxCharacteristic._hasStartedNotifications) {\n              try {\n                await this.rxCharacteristic.startNotifications();\n                this.rxCharacteristic._hasStartedNotifications = true;\n                this.logger.debug('Successfully started notifications on characteristic');\n                \n                // Add event listener for notifications\n                this.rxCharacteristic.addEventListener('characteristicvaluechanged', \n                  (event) => this.handleIncomingData(event));\n              } catch (notifyError) {\n                this.logger.warn('Failed to start notifications, falling back to polling:', notifyError);\n              }\n            }\n          }\n          \n          // Also use direct readValue as backup or alternative\n          if (this.isConnected && this.rxCharacteristic) {\n            const value = await this.rxCharacteristic.readValue();\n            // Only process if there's actual data\n            if (value && value.byteLength > 0) {\n              this.handleIncomingData({ target: { value } });\n              \n              // Track successful data receipt\n              if (!dataReceived) {\n                dataReceived = true;\n                this.logger.debug('Successfully receiving data from device');\n              }\n              \n              failureCount = 0; // Reset failure count on success\n            } else {\n              // Empty value could be a soft failure\n              failureCount++;\n            }\n          }\n        } catch (e) {\n          this.logger.warn('Error polling primary characteristic:', e);\n          failureCount++;\n          \n          // If we've had multiple failures, try switching to another characteristic\n          if (failureCount >= MAX_FAILURES && allCharacteristics.length > 1) {\n            failureCount = 0;\n            currentCharIndex = (currentCharIndex + 1) % allCharacteristics.length;\n            \n            // Try using a different characteristic\n            const nextChar = allCharacteristics[currentCharIndex];\n            if (nextChar && nextChar !== this.rxCharacteristic) {\n              this.logger.debug(`Switching to alternative characteristic: ${nextChar.uuid}`);\n              this.rxCharacteristic = nextChar;\n              \n              // Reset notification tracking for this characteristic\n              this.rxCharacteristic._hasStartedNotifications = false;\n              \n              // Try to start notifications for the new characteristic\n              try {\n                await this.rxCharacteristic.startNotifications();\n                this.rxCharacteristic._hasStartedNotifications = true;\n                this.logger.debug('Successfully started notifications on new characteristic');\n                \n                // Add event listener for notifications on the new characteristic\n                this.rxCharacteristic.addEventListener('characteristicvaluechanged', \n                  (event) => this.handleIncomingData(event));\n                \n                // Try to enable GGA messages again with the new characteristic\n                setTimeout(async () => {\n                  try {\n                    // Send specific command with this new characteristic\n                    await this.sendData('$PUBX,40,GGA,1,1,1,1,1,0*5A\\r\\n');\n                    this.logger.debug('Resent GGA enable command on new characteristic');\n                  } catch (e) {\n                    this.logger.warn('Failed to send command on new characteristic:', e);\n                  }\n                }, 500);\n              } catch (notifyError) {\n                this.logger.warn('Failed to start notifications on new characteristic, continuing with polling');\n              }\n            }\n          }\n        }\n      }, 250); // Poll more frequently (250ms) for better responsiveness\n      \n      // Device is now connected\n      this.isConnected = true;\n      this.isConnecting = false;\n      this.autoReconnect = options.autoReconnect || false;\n      \n      // Nordic UART commands - specifically for SparkFun device\n      // Since we know we're already receiving GSA sentences, we'll just try to enable GGA\n      setTimeout(async () => {\n        try {\n          this.logger.debug('Sending NMEA configuration commands for Nordic UART (SparkFun)...');\n          \n          // First wait a full 2 seconds for the device to stabilize its connection\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          \n          this.logger.debug('Connection stabilized, beginning command sequence');\n          \n          // First send some line breaks to wake it up - important for some modules\n          await this.sendData('\\r\\n\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // Send reset command - try to start from a clean state\n          // This will revert settings to defaults but ensure consistent behavior\n          await this.sendData('$PUBX,40,ZDA,0,0,0,0,0,0*45\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          \n          // Send the configuration commands in the exact order used by other applications\n          // GGA sentence - position data (must be first and with higher rate)\n          await this.sendData('$PUBX,40,GGA,0,1,0,0,0,0*5A\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // GGA sentence again with different parameters - matches working app's sequence\n          await this.sendData('$PUBX,40,GGA,1,1,1,1,1,0*5A\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // RMC sentence - minimum navigation info\n          await this.sendData('$PUBX,40,RMC,1,1,1,1,1,0*47\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // GSA sentence - satellite data\n          await this.sendData('$PUBX,40,GSA,1,1,1,1,1,0*4E\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // GST sentence - error statistics \n          await this.sendData('$PUBX,40,GST,1,1,1,1,1,0*5B\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // VTG sentence - course and speed\n          await this.sendData('$PUBX,40,VTG,1,1,1,1,1,0*5E\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // Save configuration to persist changes\n          await this.sendData('$PUBX,00*33\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Query current configuration to trigger response\n          await this.sendData('$PUBX,00*33\\r\\n');\n          await new Promise(resolve => setTimeout(resolve, 300));\n          \n          this.logger.debug('Complete NMEA configuration commands sent');\n        } catch (e) {\n          this.logger.warn('Error sending NMEA configuration - device may be in read-only mode:', e);\n          this.logger.debug('Continuing with available data');\n        }\n      }, 1000);\n      \n      this.eventEmitter.emit('bluetooth:connected', {\n        deviceId: this.device.id,\n        deviceName: this.device.name,\n        type: 'sparkfun'\n      });\n      \n      // Also emit generic connection event for the connection manager\n      this.eventEmitter.emit('device:connected', {\n        method: 'bluetooth',\n        deviceId: this.device.id,\n        deviceName: this.device.name,\n        deviceType: 'sparkfun'\n      });\n      \n      return true;\n    } catch (error) {\n      this.isConnecting = false;\n      this.eventEmitter.emit('bluetooth:error', {\n        message: error.message,\n        error,\n        type: 'sparkfun'\n      });\n      \n      return false;\n    }\n  }\n\n  /**\n   * Get information about the connected device\n   * @returns {Object} - Device information\n   */\n  getDeviceInfo() {\n    if (!this.isConnected) {\n      return null;\n    }\n    \n    return {\n      type: 'bluetooth',\n      id: this.device?.id,\n      name: this.device?.name\n    };\n  }\n}\n\nexport default BluetoothHandler;","/**\n * SerialHandler - Implements Web Serial API connections\n */\nimport { ConnectionHandler } from './connection-handler.js';\n\nexport class SerialHandler extends ConnectionHandler {\n  constructor(eventEmitter, options = {}) {\n    super(eventEmitter, options);\n    this.name = 'serial';\n    this.port = null;\n    this.reader = null;\n    this.writer = null;\n    this.readInProgress = false;\n    this.writeInProgress = false;\n    this.keepReading = false;\n    this.dataProcessor = null;\n    this.autoReconnect = false;\n    this.deviceInfo = {\n      usbVendorId: null,\n      usbProductId: null,\n      portName: null\n    };\n  }\n  \n  /**\n   * Check if Web Serial API is available\n   * @returns {boolean} - Whether Web Serial is available\n   */\n  isAvailable() {\n    return typeof navigator !== 'undefined' && \n           navigator.serial !== undefined;\n  }\n  \n  /**\n   * Get priority level for serial connections\n   * @param {Object} options - Connection options\n   * @returns {number} - Priority level\n   */\n  getPriority(options = {}) {\n    // Default priority (1-10 scale, higher = try first)\n    let priority = 5;\n    \n    // Increase priority if explicitly preferred\n    if (options.preferredMethod === 'serial') {\n      priority += 5;\n    }\n    \n    // Increase priority if we have a last used port\n    if (options.lastPort || (options.serial && options.serial.lastPort)) {\n      priority += 2;\n    }\n    \n    // Return final priority value\n    return priority;\n  }\n  \n  /**\n   * Connect to a serial device\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} - Whether connection was successful\n   */\n  async connect(options = {}) {\n    if (this.isConnected) {\n      return true;\n    }\n    \n    if (this.isConnecting) {\n      return false;\n    }\n    \n    this.isConnecting = true;\n    this.eventEmitter.emit('serial:connecting', {});\n    \n    try {\n      // Check if Serial API is available\n      if (!this.isAvailable()) {\n        throw new Error('Web Serial API is not supported in this browser');\n      }\n      \n      // Get last port info from options\n      const lastPort = options.lastPort || \n                      (options.serial && options.serial.lastPort);\n      \n      // Try to get existing port if we have a last one\n      if (lastPort) {\n        try {\n          const ports = await navigator.serial.getPorts();\n          this.port = ports.find(port => {\n            const info = port.getInfo();\n            return info.usbVendorId === lastPort.usbVendorId && \n                   info.usbProductId === lastPort.usbProductId;\n          });\n          \n          if (this.port) {\n            this.logger.info('Reconnecting to last used port');\n          }\n        } catch (e) {\n          this.logger.warn('Failed to reuse last port:', e);\n        }\n      }\n      \n      // Request a port if we don't have one\n      if (!this.port) {\n        // Configure filters based on options\n        const filters = [];\n        \n        // Add filters for known GNSS device vendors if available\n        if (options.knownDevices) {\n          options.knownDevices.forEach(device => {\n            if (device.usbVendorId) {\n              filters.push({ usbVendorId: device.usbVendorId });\n            }\n          });\n        }\n        \n        // Add filters for common GNSS vendors\n        // u-blox USB vendor ID\n        if (!filters.some(f => f.usbVendorId === 0x1546)) {\n          filters.push({ usbVendorId: 0x1546 }); // u-blox\n        }\n        \n        // FTDI (commonly used in GPS modules)\n        if (!filters.some(f => f.usbVendorId === 0x0403)) {\n          filters.push({ usbVendorId: 0x0403 }); // FTDI\n        }\n        \n        // Silicon Labs CP210x (used in many GPS modules)\n        if (!filters.some(f => f.usbVendorId === 0x10C4)) {\n          filters.push({ usbVendorId: 0x10C4 }); // Silicon Labs\n        }\n        \n        // Prolific (PL2303)\n        if (!filters.some(f => f.usbVendorId === 0x067B)) {\n          filters.push({ usbVendorId: 0x067B }); // Prolific\n        }\n        \n        // Determine if we should use filters or show all devices\n        const useFilters = options.useSerialFilters !== false; // Default to using filters unless explicitly disabled\n        \n        if (useFilters) {\n          this.logger.debug('Requesting serial port with filters:', filters);\n        } else {\n          this.logger.debug('Requesting serial port with no filters (showing all devices)');\n        }\n        \n        // Show port picker to user\n        try {\n          this.port = await navigator.serial.requestPort({\n            // Only apply filters if useFilters is true and we have filters\n            filters: useFilters && filters.length > 0 ? filters : undefined\n          });\n        } catch (e) {\n          if (e.name === 'NotFoundError') {\n            throw new Error('No matching serial devices found');\n          } else if (e.name === 'SecurityError') {\n            throw new Error('Serial port access denied by user or browser');\n          } else {\n            throw e;\n          }\n        }\n        \n        if (!this.port) {\n          throw new Error('No port selected');\n        }\n      }\n      \n      // Determine port info for later reference\n      const portInfo = this.port.getInfo();\n      this.deviceInfo = {\n        usbVendorId: portInfo.usbVendorId,\n        usbProductId: portInfo.usbProductId,\n        portName: null // Not provided by the API\n      };\n      \n      // Configure port settings\n      const baudRate = options.baudRate || \n                       (options.serial && options.serial.baudRate) || \n                       9600;\n      const dataBits = options.dataBits || \n                       (options.serial && options.serial.dataBits) || \n                       8;\n      const stopBits = options.stopBits || \n                       (options.serial && options.serial.stopBits) || \n                       1;\n      const parity = options.parity || \n                     (options.serial && options.serial.parity) || \n                     'none';\n      const flowControl = options.flowControl || \n                          (options.serial && options.serial.flowControl) || \n                          'none';\n      \n      // Open the port\n      this.logger.info(`Opening serial port with baud rate ${baudRate}`);\n      await this.port.open({\n        baudRate,\n        dataBits,\n        stopBits,\n        parity,\n        flowControl\n      });\n      \n      // Start reading from the port\n      this.startReading();\n      \n      // Configure auto-reconnect\n      this.autoReconnect = options.autoReconnect || false;\n      \n      // Update state\n      this.isConnected = true;\n      this.isConnecting = false;\n      \n      // Emit connected event\n      this.eventEmitter.emit('serial:connected', {\n        deviceInfo: this.deviceInfo,\n        baudRate\n      });\n      \n      // Also emit generic connection event for the connection manager\n      this.eventEmitter.emit('device:connected', {\n        method: 'serial',\n        deviceInfo: this.deviceInfo\n      });\n      \n      return true;\n    } catch (error) {\n      this.logger.error('Serial connection error:', error);\n      this.isConnecting = false;\n      this.eventEmitter.emit('serial:error', {\n        message: error.message,\n        error\n      });\n      \n      return false;\n    }\n  }\n  \n  /**\n   * Start reading data from the serial port\n   */\n  async startReading() {\n    if (this.readInProgress || !this.port || !this.port.readable) {\n      return;\n    }\n    \n    try {\n      this.readInProgress = true;\n      this.keepReading = true;\n      \n      // Create reader\n      this.reader = this.port.readable.getReader();\n      \n      // Read data loop\n      while (this.keepReading) {\n        const { value, done } = await this.reader.read();\n        \n        if (done) {\n          // Reader has been canceled or closed\n          break;\n        }\n        \n        if (value) {\n          // Process the received data\n          this.processData(value.buffer);\n        }\n      }\n      \n      // Release the reader when done\n      this.reader.releaseLock();\n      this.reader = null;\n    } catch (error) {\n      this.logger.error('Error reading from serial port:', error);\n      this.handleDisconnection(error);\n    } finally {\n      this.readInProgress = false;\n      this.reader = null;\n    }\n  }\n  \n  /**\n   * Process received data\n   * @param {ArrayBuffer} data - Received binary data\n   */\n  processData(data) {\n    // For debugging\n    if (this.debugSettings.debug) {\n      const textDecoder = new TextDecoder('utf-8');\n      const dataString = textDecoder.decode(new Uint8Array(data));\n      this.logger.debug('Serial data received:', dataString);\n    }\n    \n    // Emit raw data event\n    this.eventEmitter.emit('serial:data', data);\n    \n    // Also emit generic data event for uniform handling\n    this.eventEmitter.emit('device:data', data);\n  }\n  \n  /**\n   * Disconnect from the device\n   * @returns {Promise<void>}\n   */\n  async disconnect() {\n    if (!this.isConnected || !this.port) {\n      return;\n    }\n    \n    try {\n      // Stop reading\n      this.keepReading = false;\n      \n      if (this.reader) {\n        try {\n          await this.reader.cancel();\n          this.reader = null;\n        } catch (e) {\n          this.logger.warn('Error canceling reader:', e);\n        }\n      }\n      \n      // Close the port\n      try {\n        await this.port.close();\n      } catch (e) {\n        this.logger.warn('Error closing port:', e);\n      }\n      \n      // Update state\n      this.isConnected = false;\n      this.eventEmitter.emit('serial:disconnected', {\n        deviceInfo: this.deviceInfo\n      });\n      \n      // Also emit generic disconnection event for the connection manager\n      this.eventEmitter.emit('device:disconnected', {\n        method: 'serial',\n        deviceInfo: this.deviceInfo\n      });\n    } catch (error) {\n      this.logger.error('Error during disconnect:', error);\n      this.eventEmitter.emit('serial:error', {\n        message: 'Failed to disconnect properly',\n        error\n      });\n    }\n  }\n  \n  /**\n   * Handle unexpected disconnection\n   * @param {Error} error - Disconnection error\n   */\n  handleDisconnection(error) {\n    const wasConnected = this.isConnected;\n    this.isConnected = false;\n    \n    // Clean up resources\n    this.reader = null;\n    this.writer = null;\n    \n    if (wasConnected) {\n      this.eventEmitter.emit('serial:disconnected', {\n        deviceInfo: this.deviceInfo,\n        error\n      });\n      \n      // Also emit generic disconnection event for the connection manager\n      this.eventEmitter.emit('device:disconnected', {\n        method: 'serial',\n        deviceInfo: this.deviceInfo,\n        error\n      });\n      \n      // Attempt to reconnect if enabled\n      if (this.autoReconnect) {\n        setTimeout(() => {\n          this.connect({\n            lastPort: this.deviceInfo,\n            autoReconnect: true\n          });\n        }, 2000);\n      }\n    }\n  }\n  \n  /**\n   * Send data to the device\n   * @param {string|ArrayBuffer} data - Data to send\n   * @returns {Promise<boolean>} - Whether data was sent successfully\n   */\n  async sendData(data) {\n    if (!this.isConnected || !this.port || !this.port.writable) {\n      return false;\n    }\n    \n    try {\n      // Acquire writer if we don't have one\n      if (!this.writer) {\n        this.writer = this.port.writable.getWriter();\n      }\n      \n      // Convert string to ArrayBuffer if needed\n      let buffer;\n      if (typeof data === 'string') {\n        buffer = new TextEncoder().encode(data);\n      } else if (data instanceof ArrayBuffer) {\n        buffer = new Uint8Array(data);\n      } else {\n        throw new Error('Invalid data type. Expected string or ArrayBuffer');\n      }\n      \n      // Write data\n      await this.writer.write(buffer);\n      \n      // Release writer for other operations\n      this.writer.releaseLock();\n      this.writer = null;\n      \n      return true;\n    } catch (error) {\n      this.logger.error('Error sending data:', error);\n      \n      // Try to release writer if we have one\n      if (this.writer) {\n        try {\n          this.writer.releaseLock();\n        } catch (e) {\n          // Ignore errors releasing lock\n        }\n        this.writer = null;\n      }\n      \n      return false;\n    }\n  }\n  \n  /**\n   * Get information about the connected device\n   * @returns {Object} - Device information\n   */\n  getDeviceInfo() {\n    if (!this.isConnected) {\n      return null;\n    }\n    \n    return {\n      type: 'serial',\n      ...this.deviceInfo\n    };\n  }\n}\n\nexport default SerialHandler;","/**\n * RTK Settings UI Component\n * \n * This component provides a user interface for configuring NTRIP RTK correction settings\n * and managing connections to NTRIP casters.\n */\nexport class RtkSettings {\n  /**\n   * Create an RTK settings component\n   * @param {Object} options - Configuration options\n   * @param {EventEmitter} options.events - Event emitter for communication\n   * @param {Settings} options.settings - Settings manager\n   * @param {string} options.selector - CSS selector for the container element\n   */\n  constructor(options = {}) {\n    this.events = options.events;\n    this.settings = options.settings;\n    this.isConnected = false;\n    this.isConnecting = false;\n    \n    // Find container element if selector provided\n    if (options.selector) {\n      this.container = document.querySelector(options.selector);\n    }\n    \n    // If no container, don't initialize UI\n    if (!this.container) {\n      console.warn('RtkSettings: No container element found. UI will not be initialized.');\n      return;\n    }\n    \n    // Cache frequently used elements\n    this.elements = {};\n    \n    // Add CSS for proper styling\n    this.addStyles();\n    \n    // Create UI elements\n    this.initializeUI();\n    \n    // Set up event listeners\n    this.setupEventListeners();\n    \n    // Listen for RTK events\n    this.registerEventListeners();\n    \n    // Load saved configuration\n    this.loadSavedConfig();\n  }\n\n  /**\n   * Add required CSS styles to the document\n   */\n  addStyles() {\n    // Check if styles already exist\n    if (document.getElementById('rtk-settings-styles')) {\n      return;\n    }\n    \n    // Create style element\n    const style = document.createElement('style');\n    style.id = 'rtk-settings-styles';\n    style.textContent = `\n      .rtk-settings-container {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n        margin: 0 auto;\n        padding: 15px;\n        background-color: #f7f7f7;\n        border-radius: 5px;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n      }\n      \n      .rtk-settings-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #e0e0e0;\n      }\n      \n      .rtk-settings-title {\n        font-size: 18px;\n        font-weight: 500;\n        margin: 0;\n      }\n      \n      .rtk-settings-enable {\n        display: flex;\n        align-items: center;\n        margin-bottom: 15px;\n      }\n      \n      .rtk-settings-form {\n        display: grid;\n        grid-gap: 10px;\n      }\n      \n      .form-group {\n        display: flex;\n        flex-direction: column;\n      }\n      \n      .form-group label {\n        font-size: 14px;\n        color: #555;\n        margin-bottom: 5px;\n      }\n      \n      .form-group input, .form-group select {\n        padding: 8px 10px;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        font-size: 14px;\n      }\n      \n      .form-group input:focus, .form-group select:focus {\n        outline: none;\n        border-color: #4285F4;\n        box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.25);\n      }\n      \n      .rtk-settings-actions {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 15px;\n      }\n      \n      .rtk-status-display {\n        display: flex;\n        align-items: center;\n        margin-top: 15px;\n        padding: 10px;\n        background-color: #f0f0f0;\n        border-radius: 4px;\n      }\n      \n      .rtk-status-indicator {\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        margin-right: 8px;\n      }\n      \n      .rtk-status-indicator.disconnected { background-color: #9e9e9e; }\n      .rtk-status-indicator.connecting { background-color: #ff9800; }\n      .rtk-status-indicator.connected { background-color: #4caf50; }\n      .rtk-status-indicator.error { background-color: #f44336; }\n      \n      .rtk-button {\n        padding: 8px 16px;\n        border: none;\n        border-radius: 4px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        transition: background-color 0.2s;\n      }\n      \n      .rtk-button:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n      \n      .rtk-button.primary {\n        background-color: #4285F4;\n        color: white;\n      }\n      \n      .rtk-button.secondary {\n        background-color: #f1f1f1;\n        color: #333;\n      }\n      \n      .rtk-button.danger {\n        background-color: #f44336;\n        color: white;\n      }\n      \n      .rtk-button.primary:hover { background-color: #3367d6; }\n      .rtk-button.secondary:hover { background-color: #e0e0e0; }\n      .rtk-button.danger:hover { background-color: #d32f2f; }\n      \n      .rtk-toggle {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        height: 20px;\n        margin-right: 8px;\n      }\n      \n      .rtk-toggle input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      \n      .rtk-toggle-slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        transition: .4s;\n        border-radius: 20px;\n      }\n      \n      .rtk-toggle-slider:before {\n        position: absolute;\n        content: \"\";\n        height: 16px;\n        width: 16px;\n        left: 2px;\n        bottom: 2px;\n        background-color: white;\n        transition: .4s;\n        border-radius: 50%;\n      }\n      \n      .rtk-toggle input:checked + .rtk-toggle-slider {\n        background-color: #4285F4;\n      }\n      \n      .rtk-toggle input:focus + .rtk-toggle-slider {\n        box-shadow: 0 0 1px #4285F4;\n      }\n      \n      .rtk-toggle input:checked + .rtk-toggle-slider:before {\n        transform: translateX(20px);\n      }\n      \n      .rtk-correction-stats {\n        margin-top: 10px;\n        font-size: 12px;\n        color: #666;\n      }\n      \n      .rtk-correction-stats div {\n        margin-bottom: 4px;\n      }\n      \n      @media (min-width: 768px) {\n        .rtk-settings-form {\n          grid-template-columns: 1fr 1fr;\n          grid-gap: 15px;\n        }\n      }\n    `;\n    \n    // Add style to document\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Initialize the UI elements\n   */\n  initializeUI() {\n    if (!this.container) return;\n    \n    // Clear container\n    this.container.innerHTML = '';\n    \n    // Create main container\n    const settingsContainer = document.createElement('div');\n    settingsContainer.className = 'rtk-settings-container';\n    \n    // Create header\n    const header = document.createElement('div');\n    header.className = 'rtk-settings-header';\n    \n    const title = document.createElement('h2');\n    title.className = 'rtk-settings-title';\n    title.textContent = 'RTK Correction Settings';\n    \n    header.appendChild(title);\n    settingsContainer.appendChild(header);\n    \n    // Create enable toggle\n    const enableContainer = document.createElement('div');\n    enableContainer.className = 'rtk-settings-enable';\n    \n    const toggleLabel = document.createElement('label');\n    toggleLabel.className = 'rtk-toggle';\n    \n    const toggleInput = document.createElement('input');\n    toggleInput.type = 'checkbox';\n    toggleInput.id = 'rtk-enable';\n    \n    const toggleSlider = document.createElement('span');\n    toggleSlider.className = 'rtk-toggle-slider';\n    \n    toggleLabel.appendChild(toggleInput);\n    toggleLabel.appendChild(toggleSlider);\n    \n    const toggleText = document.createElement('span');\n    toggleText.textContent = 'Enable RTK Corrections';\n    \n    enableContainer.appendChild(toggleLabel);\n    enableContainer.appendChild(toggleText);\n    \n    settingsContainer.appendChild(enableContainer);\n    \n    // Create form\n    const form = document.createElement('form');\n    form.className = 'rtk-settings-form';\n    \n    // Connection method\n    const connectionMethodGroup = document.createElement('div');\n    connectionMethodGroup.className = 'form-group';\n    \n    const connectionMethodLabel = document.createElement('label');\n    connectionMethodLabel.htmlFor = 'rtk-connection-mode';\n    connectionMethodLabel.textContent = 'Connection Method';\n    \n    const connectionMethodSelect = document.createElement('select');\n    connectionMethodSelect.id = 'rtk-connection-mode';\n    \n    const autoOption = document.createElement('option');\n    autoOption.value = 'auto';\n    autoOption.textContent = 'Auto (WebSocket preferred)';\n    \n    const websocketOption = document.createElement('option');\n    websocketOption.value = 'websocket';\n    websocketOption.textContent = 'WebSocket';\n    \n    const directOption = document.createElement('option');\n    directOption.value = 'direct';\n    directOption.textContent = 'Direct';\n    \n    const proxyOption = document.createElement('option');\n    proxyOption.value = 'proxy';\n    proxyOption.textContent = 'HTTP Proxy';\n    \n    connectionMethodSelect.appendChild(autoOption);\n    connectionMethodSelect.appendChild(websocketOption);\n    connectionMethodSelect.appendChild(directOption);\n    connectionMethodSelect.appendChild(proxyOption);\n    \n    connectionMethodGroup.appendChild(connectionMethodLabel);\n    connectionMethodGroup.appendChild(connectionMethodSelect);\n    \n    form.appendChild(connectionMethodGroup);\n    \n    // Caster host\n    const hostGroup = document.createElement('div');\n    hostGroup.className = 'form-group';\n    \n    const hostLabel = document.createElement('label');\n    hostLabel.htmlFor = 'rtk-caster-host';\n    hostLabel.textContent = 'NTRIP Caster Host';\n    \n    const hostInput = document.createElement('input');\n    hostInput.type = 'text';\n    hostInput.id = 'rtk-caster-host';\n    hostInput.placeholder = 'caster.example.com';\n    \n    hostGroup.appendChild(hostLabel);\n    hostGroup.appendChild(hostInput);\n    \n    form.appendChild(hostGroup);\n    \n    // Caster port\n    const portGroup = document.createElement('div');\n    portGroup.className = 'form-group';\n    \n    const portLabel = document.createElement('label');\n    portLabel.htmlFor = 'rtk-caster-port';\n    portLabel.textContent = 'NTRIP Caster Port';\n    \n    const portInput = document.createElement('input');\n    portInput.type = 'number';\n    portInput.id = 'rtk-caster-port';\n    portInput.value = 2101;\n    \n    portGroup.appendChild(portLabel);\n    portGroup.appendChild(portInput);\n    \n    form.appendChild(portGroup);\n    \n    // Mountpoint\n    const mountpointGroup = document.createElement('div');\n    mountpointGroup.className = 'form-group';\n    \n    const mountpointLabel = document.createElement('label');\n    mountpointLabel.htmlFor = 'rtk-mountpoint';\n    mountpointLabel.textContent = 'Mountpoint';\n    \n    const mountpointInput = document.createElement('input');\n    mountpointInput.type = 'text';\n    mountpointInput.id = 'rtk-mountpoint';\n    mountpointInput.placeholder = 'MOUNTPOINT';\n    \n    mountpointGroup.appendChild(mountpointLabel);\n    mountpointGroup.appendChild(mountpointInput);\n    \n    form.appendChild(mountpointGroup);\n    \n    // Username\n    const usernameGroup = document.createElement('div');\n    usernameGroup.className = 'form-group';\n    \n    const usernameLabel = document.createElement('label');\n    usernameLabel.htmlFor = 'rtk-username';\n    usernameLabel.textContent = 'Username';\n    \n    const usernameInput = document.createElement('input');\n    usernameInput.type = 'text';\n    usernameInput.id = 'rtk-username';\n    usernameInput.placeholder = 'username (optional)';\n    \n    usernameGroup.appendChild(usernameLabel);\n    usernameGroup.appendChild(usernameInput);\n    \n    form.appendChild(usernameGroup);\n    \n    // Password\n    const passwordGroup = document.createElement('div');\n    passwordGroup.className = 'form-group';\n    \n    const passwordLabel = document.createElement('label');\n    passwordLabel.htmlFor = 'rtk-password';\n    passwordLabel.textContent = 'Password';\n    \n    const passwordInput = document.createElement('input');\n    passwordInput.type = 'password';\n    passwordInput.id = 'rtk-password';\n    passwordInput.placeholder = 'password (optional)';\n    \n    passwordGroup.appendChild(passwordLabel);\n    passwordGroup.appendChild(passwordInput);\n    \n    form.appendChild(passwordGroup);\n    \n    // Send GGA toggle\n    const ggaGroup = document.createElement('div');\n    ggaGroup.className = 'form-group';\n    \n    const ggaLabel = document.createElement('label');\n    ggaLabel.htmlFor = 'rtk-send-gga';\n    ggaLabel.className = 'rtk-toggle';\n    \n    const ggaInput = document.createElement('input');\n    ggaInput.type = 'checkbox';\n    ggaInput.id = 'rtk-send-gga';\n    ggaInput.checked = true;\n    \n    const ggaSlider = document.createElement('span');\n    ggaSlider.className = 'rtk-toggle-slider';\n    \n    ggaLabel.appendChild(ggaInput);\n    ggaLabel.appendChild(ggaSlider);\n    \n    const ggaText = document.createElement('span');\n    ggaText.textContent = 'Send position to caster (GGA)';\n    \n    ggaGroup.appendChild(ggaLabel);\n    ggaGroup.appendChild(ggaText);\n    \n    form.appendChild(ggaGroup);\n    \n    // GGA update interval\n    const ggaIntervalGroup = document.createElement('div');\n    ggaIntervalGroup.className = 'form-group';\n    \n    const ggaIntervalLabel = document.createElement('label');\n    ggaIntervalLabel.htmlFor = 'rtk-gga-interval';\n    ggaIntervalLabel.textContent = 'GGA Update Interval (seconds)';\n    \n    const ggaIntervalInput = document.createElement('input');\n    ggaIntervalInput.type = 'number';\n    ggaIntervalInput.id = 'rtk-gga-interval';\n    ggaIntervalInput.min = 1;\n    ggaIntervalInput.max = 60;\n    ggaIntervalInput.value = 10;\n    \n    ggaIntervalGroup.appendChild(ggaIntervalLabel);\n    ggaIntervalGroup.appendChild(ggaIntervalInput);\n    \n    form.appendChild(ggaIntervalGroup);\n    \n    // Auto reconnect toggle\n    const reconnectGroup = document.createElement('div');\n    reconnectGroup.className = 'form-group';\n    \n    const reconnectLabel = document.createElement('label');\n    reconnectLabel.htmlFor = 'rtk-auto-reconnect';\n    reconnectLabel.className = 'rtk-toggle';\n    \n    const reconnectInput = document.createElement('input');\n    reconnectInput.type = 'checkbox';\n    reconnectInput.id = 'rtk-auto-reconnect';\n    reconnectInput.checked = true;\n    \n    const reconnectSlider = document.createElement('span');\n    reconnectSlider.className = 'rtk-toggle-slider';\n    \n    reconnectLabel.appendChild(reconnectInput);\n    reconnectLabel.appendChild(reconnectSlider);\n    \n    const reconnectText = document.createElement('span');\n    reconnectText.textContent = 'Auto reconnect on disconnect';\n    \n    reconnectGroup.appendChild(reconnectLabel);\n    reconnectGroup.appendChild(reconnectText);\n    \n    form.appendChild(reconnectGroup);\n    \n    settingsContainer.appendChild(form);\n    \n    // Create status display\n    const statusDisplay = document.createElement('div');\n    statusDisplay.className = 'rtk-status-display';\n    \n    const statusIndicator = document.createElement('div');\n    statusIndicator.className = 'rtk-status-indicator disconnected';\n    \n    const statusText = document.createElement('div');\n    statusText.textContent = 'Not connected';\n    \n    statusDisplay.appendChild(statusIndicator);\n    statusDisplay.appendChild(statusText);\n    \n    // Correction statistics\n    const correctionStats = document.createElement('div');\n    correctionStats.className = 'rtk-correction-stats';\n    correctionStats.style.display = 'none';\n    \n    const messagesReceived = document.createElement('div');\n    messagesReceived.textContent = 'Messages received: 0';\n    \n    const correctionAge = document.createElement('div');\n    correctionAge.textContent = 'Correction age: N/A';\n    \n    const bytesReceived = document.createElement('div');\n    bytesReceived.textContent = 'Bytes received: 0';\n    \n    correctionStats.appendChild(messagesReceived);\n    correctionStats.appendChild(correctionAge);\n    correctionStats.appendChild(bytesReceived);\n    \n    statusDisplay.appendChild(correctionStats);\n    \n    settingsContainer.appendChild(statusDisplay);\n    \n    // Create action buttons\n    const actions = document.createElement('div');\n    actions.className = 'rtk-settings-actions';\n    \n    const saveButton = document.createElement('button');\n    saveButton.type = 'button';\n    saveButton.className = 'rtk-button secondary';\n    saveButton.textContent = 'Save Settings';\n    \n    const connectButton = document.createElement('button');\n    connectButton.type = 'button';\n    connectButton.className = 'rtk-button primary';\n    connectButton.textContent = 'Connect';\n    \n    const disconnectButton = document.createElement('button');\n    disconnectButton.type = 'button';\n    disconnectButton.className = 'rtk-button danger';\n    disconnectButton.textContent = 'Disconnect';\n    disconnectButton.style.display = 'none';\n    \n    actions.appendChild(saveButton);\n    actions.appendChild(connectButton);\n    actions.appendChild(disconnectButton);\n    \n    settingsContainer.appendChild(actions);\n    \n    // Add to container\n    this.container.appendChild(settingsContainer);\n    \n    // Store references to elements\n    this.elements = {\n      enableToggle: toggleInput,\n      connectionMethod: connectionMethodSelect,\n      casterHost: hostInput,\n      casterPort: portInput,\n      mountpoint: mountpointInput,\n      username: usernameInput,\n      password: passwordInput,\n      sendGga: ggaInput,\n      ggaInterval: ggaIntervalInput,\n      autoReconnect: reconnectInput,\n      saveButton,\n      connectButton,\n      disconnectButton,\n      statusIndicator,\n      statusText,\n      correctionStats,\n      messagesReceived,\n      correctionAge,\n      bytesReceived\n    };\n    \n    // Disable form if RTK is disabled\n    this.updateFormState();\n  }\n\n  /**\n   * Set up UI event listeners\n   */\n  setupEventListeners() {\n    if (!this.elements) {\n      console.warn('RtkSettings: No UI elements found. Event listeners not set up.');\n      return;\n    }\n    \n    // Safely add event listener to an element if it exists\n    const safeAddListener = (elementKey, eventType, handler) => {\n      const element = this.elements[elementKey];\n      if (element) {\n        element.addEventListener(eventType, handler);\n      } else {\n        console.warn(`RtkSettings: Element ${elementKey} not found`);\n      }\n    };\n    \n    // Enable/disable toggle\n    safeAddListener('enableToggle', 'change', () => {\n      this.updateFormState();\n    });\n    \n    // Connect button\n    safeAddListener('connectButton', 'click', () => {\n      this.connect();\n    });\n    \n    // Disconnect button\n    safeAddListener('disconnectButton', 'click', () => {\n      this.disconnect();\n    });\n    \n    // Save settings button\n    safeAddListener('saveButton', 'click', () => {\n      this.saveConfig();\n    });\n  }\n\n  /**\n   * Register event listeners for GNSS events\n   */\n  registerEventListeners() {\n    if (!this.events) {\n      console.warn('RtkSettings: No events emitter provided. Settings will not update.');\n      return;\n    }\n    \n    // Connection status change events\n    this.events.on('ntrip:connecting', this.handleConnecting.bind(this));\n    this.events.on('ntrip:connected', this.handleConnected.bind(this));\n    this.events.on('ntrip:disconnected', this.handleDisconnected.bind(this));\n    this.events.on('ntrip:error', this.handleError.bind(this));\n    \n    // Data statistics\n    this.events.on('ntrip:rtcm', this.handleRtcmData.bind(this));\n    \n    // Handle position updates\n    this.events.on('position', this.handlePosition.bind(this));\n    \n    // Update status periodically\n    setInterval(() => {\n      this.updateStats();\n    }, 1000);\n  }\n\n  /**\n   * Handle connecting event\n   * @param {Object} data - Event data\n   */\n  handleConnecting(data) {\n    this.isConnecting = true;\n    this.isConnected = false;\n    \n    this.elements.statusIndicator.className = 'rtk-status-indicator connecting';\n    this.elements.statusText.textContent = 'Connecting...';\n    \n    this.elements.connectButton.disabled = true;\n    this.elements.disconnectButton.disabled = true;\n    \n    this.updateButtonVisibility();\n  }\n\n  /**\n   * Handle connected event\n   * @param {Object} data - Event data\n   */\n  handleConnected(data) {\n    this.isConnecting = false;\n    this.isConnected = true;\n    \n    this.elements.statusIndicator.className = 'rtk-status-indicator connected';\n    \n    // Check if GGA position is required\n    if (data.requiresGga) {\n      this.elements.statusText.textContent = `Connected to ${data.mountpoint} (${data.mode}) - GGA position required`;\n      \n      // Make sure GGA is enabled\n      if (!this.elements.sendGga.checked) {\n        this.elements.sendGga.checked = true;\n        \n        // Update the config\n        if (this.gnss.ntripClient) {\n          this.gnss.ntripClient.config.sendGga = true;\n        }\n        \n        // Show info message\n        console.log('GGA position sharing enabled automatically because the NTRIP caster requires it');\n      }\n      \n      // Force a position update if we have one\n      if (this.gnss.lastPosition) {\n        setTimeout(() => {\n          console.log('Sending initial GGA position to NTRIP caster');\n          this.gnss.updateNtripPosition(this.gnss.lastPosition);\n        }, 500);\n      }\n    } else {\n      this.elements.statusText.textContent = `Connected to ${data.mountpoint} (${data.mode})`;\n    }\n    \n    this.elements.connectButton.disabled = false;\n    this.elements.disconnectButton.disabled = false;\n    \n    this.elements.correctionStats.style.display = 'block';\n    \n    this.updateButtonVisibility();\n  }\n\n  /**\n   * Handle disconnected event\n   * @param {Object} data - Event data\n   */\n  handleDisconnected(data) {\n    this.isConnecting = false;\n    this.isConnected = false;\n    \n    this.elements.statusIndicator.className = 'rtk-status-indicator disconnected';\n    this.elements.statusText.textContent = `Disconnected: ${data.reason || 'Unknown reason'}`;\n    \n    this.elements.connectButton.disabled = false;\n    this.elements.disconnectButton.disabled = true;\n    \n    this.updateButtonVisibility();\n  }\n\n  /**\n   * Handle error event\n   * @param {Object} data - Event data\n   */\n  handleError(data) {\n    this.elements.statusIndicator.className = 'rtk-status-indicator error';\n    this.elements.statusText.textContent = `Error: ${data.message}`;\n    \n    if (this.isConnecting) {\n      this.isConnecting = false;\n      this.elements.connectButton.disabled = false;\n      this.elements.disconnectButton.disabled = true;\n      \n      this.updateButtonVisibility();\n    }\n  }\n\n  /**\n   * Handle RTCM data event\n   * @param {Object} data - Event data\n   */\n  handleRtcmData(data) {\n    if (!data.stats) return;\n    \n    const stats = data.stats;\n    \n    this.elements.messagesReceived.textContent = `Messages received: ${stats.messagesReceived}`;\n    this.elements.bytesReceived.textContent = `Bytes received: ${this.formatBytes(stats.bytesReceived)}`;\n    \n    if (stats.correctionAge !== null) {\n      this.elements.correctionAge.textContent = `Correction age: ${stats.correctionAge.toFixed(1)}s`;\n    }\n  }\n\n  /**\n   * Handle position update\n   * @param {Object} position - Position data\n   */\n  handlePosition(position) {\n    // Nothing to do for now, but we might want to update something in the UI later\n  }\n\n  /**\n   * Format bytes to human-readable format\n   * @param {number} bytes - Number of bytes\n   * @returns {string} Formatted string\n   */\n  formatBytes(bytes) {\n    if (bytes < 1024) {\n      return `${bytes} B`;\n    } else if (bytes < 1024 * 1024) {\n      return `${(bytes / 1024).toFixed(1)} KB`;\n    } else {\n      return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;\n    }\n  }\n\n  /**\n   * Update RTCM statistics\n   */\n  updateStats() {\n    // Only update if connected\n    if (!this.isConnected || !this.gnss.ntripClient) return;\n    \n    const stats = this.gnss.ntripClient.getRtcmStats();\n    \n    if (stats) {\n      // Update correction age if available\n      if (stats.correctionAge !== null) {\n        this.elements.correctionAge.textContent = `Correction age: ${stats.correctionAge.toFixed(1)}s`;\n        \n        // Highlight old corrections\n        if (stats.correctionAge > 10) {\n          this.elements.correctionAge.style.color = '#f44336';\n        } else if (stats.correctionAge > 5) {\n          this.elements.correctionAge.style.color = '#ff9800';\n        } else {\n          this.elements.correctionAge.style.color = '#666';\n        }\n      }\n    }\n  }\n\n  /**\n   * Update form state based on enable toggle\n   */\n  updateFormState() {\n    const enabled = this.elements.enableToggle.checked;\n    \n    // Enable/disable form elements\n    const formElements = [\n      this.elements.connectionMethod,\n      this.elements.casterHost,\n      this.elements.casterPort,\n      this.elements.mountpoint,\n      this.elements.username,\n      this.elements.password,\n      this.elements.sendGga,\n      this.elements.ggaInterval,\n      this.elements.autoReconnect\n    ];\n    \n    formElements.forEach(element => {\n      element.disabled = !enabled;\n    });\n    \n    // Enable/disable buttons\n    this.elements.saveButton.disabled = !enabled;\n    this.elements.connectButton.disabled = !enabled || this.isConnected;\n    \n    // Update button visibility\n    this.updateButtonVisibility();\n  }\n\n  /**\n   * Update button visibility based on connection state\n   */\n  updateButtonVisibility() {\n    // Show/hide connect/disconnect buttons\n    if (this.isConnected) {\n      this.elements.connectButton.style.display = 'none';\n      this.elements.disconnectButton.style.display = 'block';\n    } else {\n      this.elements.connectButton.style.display = 'block';\n      this.elements.disconnectButton.style.display = 'none';\n    }\n  }\n\n  /**\n   * Load saved configuration from settings\n   */\n  loadSavedConfig() {\n    if (!this.settings || !this.settings.rtk || !this.elements) return;\n    \n    const rtkSettings = this.settings.rtk;\n    \n    // Safely set value if the element exists\n    const safeSetValue = (elementKey, value) => {\n      const element = this.elements[elementKey];\n      if (element) {\n        if (typeof element.checked !== 'undefined') {\n          element.checked = Boolean(value);\n        } else {\n          element.value = value || '';\n        }\n      }\n    };\n    \n    // Update UI elements\n    safeSetValue('enableToggle', rtkSettings.enabled);\n    safeSetValue('connectionMethod', rtkSettings.connectionMode || 'auto');\n    safeSetValue('casterHost', rtkSettings.casterHost || '');\n    safeSetValue('casterPort', rtkSettings.casterPort || 2101);\n    safeSetValue('mountpoint', rtkSettings.mountpoint || '');\n    safeSetValue('username', rtkSettings.username || '');\n    // We don't restore password for security reasons\n    safeSetValue('sendGga', rtkSettings.sendGga !== undefined ? rtkSettings.sendGga : true);\n    safeSetValue('ggaInterval', rtkSettings.ggaUpdateInterval || 10);\n    safeSetValue('autoReconnect', rtkSettings.autoReconnect !== undefined ? rtkSettings.autoReconnect : true);\n    \n    // Update form state\n    this.updateFormState();\n  }\n\n  /**\n   * Save configuration to settings\n   */\n  saveConfig() {\n    if (!this.settings || !this.elements) return;\n    \n    // Safely get value from an element if it exists\n    const safeGetValue = (elementKey, defaultValue = '') => {\n      const element = this.elements[elementKey];\n      if (!element) return defaultValue;\n      \n      if (typeof element.checked !== 'undefined') {\n        return element.checked;\n      } else {\n        return element.value || defaultValue;\n      }\n    };\n    \n    // Get values from form\n    const config = {\n      enabled: safeGetValue('enableToggle', false),\n      connectionMode: safeGetValue('connectionMethod', 'auto'),\n      casterHost: safeGetValue('casterHost', ''),\n      casterPort: parseInt(safeGetValue('casterPort', '2101')) || 2101,\n      mountpoint: safeGetValue('mountpoint', ''),\n      username: safeGetValue('username', ''),\n      password: safeGetValue('password', ''),\n      sendGga: safeGetValue('sendGga', true),\n      ggaUpdateInterval: parseInt(safeGetValue('ggaInterval', '10')) || 10,\n      autoReconnect: safeGetValue('autoReconnect', true)\n    };\n    \n    // Save to settings\n    if (this.settings) {\n      this.settings.rtk = config;\n      this.settings.save();\n    }\n    \n    // Emit settings update event\n    if (this.events) {\n      this.events.emit('rtk:settings:update', config);\n    }\n    \n    // If RTK is disabled but we're connected, disconnect\n    if (!config.enabled && this.isConnected) {\n      this.disconnect();\n    }\n  }\n\n  /**\n   * Connect to NTRIP caster\n   */\n  async connect() {\n    if (this.isConnected || this.isConnecting) return;\n    \n    // Get config from form\n    const config = {\n      connectionMode: this.elements.connectionMethod.value,\n      casterHost: this.elements.casterHost.value,\n      casterPort: parseInt(this.elements.casterPort.value) || 2101,\n      mountpoint: this.elements.mountpoint.value,\n      username: this.elements.username.value,\n      password: this.elements.password.value,\n      sendGga: this.elements.sendGga.checked,\n      ggaUpdateInterval: parseInt(this.elements.ggaInterval.value) || 10,\n      autoReconnect: this.elements.autoReconnect.checked\n    };\n    \n    // Validate config\n    if (!config.casterHost) {\n      this.handleError({ message: 'Caster host is required' });\n      return;\n    }\n    \n    if (!config.mountpoint) {\n      this.handleError({ message: 'Mountpoint is required' });\n      return;\n    }\n    \n    // Emit connect event\n    if (this.events) {\n      this.events.emit('rtk:connect', config);\n    }\n  }\n\n  /**\n   * Disconnect from NTRIP caster\n   */\n  disconnect() {\n    if (!this.isConnected) return;\n    \n    // Emit disconnect event\n    if (this.events) {\n      this.events.emit('rtk:disconnect');\n    }\n  }\n}\n\nexport default RtkSettings;","/**\n * RTK Status UI Component\n * \n * This component displays the current RTK fix status, including fix quality,\n * satellite information, and correction data status.\n */\nexport class RtkStatus {\n  /**\n   * Create an RTK status component\n   * @param {Object} options - Configuration options\n   * @param {EventEmitter} options.events - Event emitter for communication\n   * @param {string} options.selector - CSS selector for the container element\n   */\n  constructor(options = {}) {\n    this.events = options.events;\n    \n    // Find container element if selector provided\n    if (options.selector) {\n      this.container = document.querySelector(options.selector);\n    }\n    \n    // If no container, don't initialize UI\n    if (!this.container) {\n      console.warn('RtkStatus: No container element found. UI will not be initialized.');\n      return;\n    }\n    \n    // Current status information\n    this.fixQuality = 0;\n    this.satellitesUsed = 0;\n    this.rtkMode = 'none'; // 'none', 'float', 'fixed'\n    this.correctionAge = null;\n    this.messagesReceived = 0;\n    this.ggaRequired = false;\n    this.ntripConnected = false;\n    \n    // Add CSS for proper styling\n    this.addStyles();\n    \n    // Initialize UI\n    this.initializeUI();\n    \n    // Register event listeners\n    this.registerEventListeners();\n    \n    // Update status immediately\n    this.updateStatus();\n  }\n\n  /**\n   * Add required CSS styles to the document\n   */\n  addStyles() {\n    // Check if styles already exist\n    if (document.getElementById('rtk-status-styles')) {\n      return;\n    }\n    \n    // Create style element\n    const style = document.createElement('style');\n    style.id = 'rtk-status-styles';\n    style.textContent = `\n      .rtk-status-container {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n        background-color: #f7f7f7;\n        border-radius: 5px;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        padding: 12px;\n        margin-bottom: 15px;\n      }\n      \n      .rtk-status-header {\n        display: flex;\n        align-items: center;\n        margin-bottom: 8px;\n      }\n      \n      .rtk-indicator {\n        display: flex;\n        align-items: center;\n        font-weight: 500;\n      }\n      \n      .rtk-indicator-icon {\n        width: 14px;\n        height: 14px;\n        border-radius: 50%;\n        margin-right: 8px;\n      }\n      \n      .rtk-indicator-icon.no-fix { background-color: #9e9e9e; }\n      .rtk-indicator-icon.autonomous { background-color: #ffcc00; }\n      .rtk-indicator-icon.dgps { background-color: #ff9800; }\n      .rtk-indicator-icon.rtk-float { background-color: #2196f3; }\n      .rtk-indicator-icon.rtk-fixed { background-color: #4caf50; }\n      \n      .rtk-status-details {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 8px;\n        margin-top: 10px;\n        font-size: 13px;\n      }\n      \n      .rtk-status-detail {\n        display: flex;\n        align-items: center;\n      }\n      \n      .rtk-status-detail-icon {\n        width: 12px;\n        height: 12px;\n        margin-right: 6px;\n        opacity: 0.7;\n      }\n      \n      .rtk-status-detail-label {\n        color: #666;\n        margin-right: 5px;\n      }\n      \n      .rtk-status-detail-value {\n        font-weight: 500;\n      }\n      \n      .rtk-status-correction-age {\n        color: #666;\n      }\n      \n      .rtk-status-correction-age.stale {\n        color: #ff9800;\n      }\n      \n      .rtk-status-correction-age.old {\n        color: #f44336;\n      }\n      \n      .rtk-satellite-indicator {\n        margin-top: 5px;\n        height: 4px;\n        display: flex;\n        gap: 2px;\n      }\n      \n      .rtk-satellite-bar {\n        flex: 1;\n        background-color: #e0e0e0;\n        border-radius: 2px;\n      }\n      \n      .rtk-satellite-bar.used {\n        background-color: #4caf50;\n      }\n      \n      @media (max-width: 480px) {\n        .rtk-status-details {\n          grid-template-columns: 1fr;\n        }\n      }\n    `;\n    \n    // Add style to document\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Initialize the UI elements\n   */\n  initializeUI() {\n    if (!this.container) return;\n    \n    // Clear container\n    this.container.innerHTML = '';\n    \n    // Create main container\n    const statusContainer = document.createElement('div');\n    statusContainer.className = 'rtk-status-container';\n    \n    // Create header with main indicator\n    const header = document.createElement('div');\n    header.className = 'rtk-status-header';\n    \n    // Create status indicator\n    const indicator = document.createElement('div');\n    indicator.className = 'rtk-indicator';\n    \n    const indicatorIcon = document.createElement('div');\n    indicatorIcon.className = 'rtk-indicator-icon no-fix';\n    \n    const indicatorText = document.createElement('div');\n    indicatorText.textContent = 'No Fix';\n    \n    indicator.appendChild(indicatorIcon);\n    indicator.appendChild(indicatorText);\n    \n    header.appendChild(indicator);\n    statusContainer.appendChild(header);\n    \n    // Create satellite indicator\n    const satelliteIndicator = document.createElement('div');\n    satelliteIndicator.className = 'rtk-satellite-indicator';\n    \n    // Create bars for satellites (up to 20)\n    for (let i = 0; i < 20; i++) {\n      const bar = document.createElement('div');\n      bar.className = 'rtk-satellite-bar';\n      satelliteIndicator.appendChild(bar);\n    }\n    \n    statusContainer.appendChild(satelliteIndicator);\n    \n    // Create status details\n    const details = document.createElement('div');\n    details.className = 'rtk-status-details';\n    \n    // Satellites\n    const satellitesDetail = document.createElement('div');\n    satellitesDetail.className = 'rtk-status-detail';\n    \n    const satellitesIcon = document.createElement('div');\n    satellitesIcon.className = 'rtk-status-detail-icon';\n    satellitesIcon.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"12\" height=\"12\"><path fill=\"currentColor\" d=\"M5,18L8.5,13.5L11,16.5L14.5,12L19,18H5M5,12V10A5,5 0 0,1 10,5H12V3L16,6L12,9V7H10A3,3 0 0,0 7,10V12H5Z\" /></svg>`;\n    \n    const satellitesLabel = document.createElement('div');\n    satellitesLabel.className = 'rtk-status-detail-label';\n    satellitesLabel.textContent = 'Satellites:';\n    \n    const satellitesValue = document.createElement('div');\n    satellitesValue.className = 'rtk-status-detail-value';\n    satellitesValue.textContent = '0';\n    \n    satellitesDetail.appendChild(satellitesIcon);\n    satellitesDetail.appendChild(satellitesLabel);\n    satellitesDetail.appendChild(satellitesValue);\n    \n    details.appendChild(satellitesDetail);\n    \n    // Mode\n    const modeDetail = document.createElement('div');\n    modeDetail.className = 'rtk-status-detail';\n    \n    const modeIcon = document.createElement('div');\n    modeIcon.className = 'rtk-status-detail-icon';\n    modeIcon.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"12\" height=\"12\"><path fill=\"currentColor\" d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\" /></svg>`;\n    \n    const modeLabel = document.createElement('div');\n    modeLabel.className = 'rtk-status-detail-label';\n    modeLabel.textContent = 'Mode:';\n    \n    const modeValue = document.createElement('div');\n    modeValue.className = 'rtk-status-detail-value';\n    modeValue.textContent = 'None';\n    \n    modeDetail.appendChild(modeIcon);\n    modeDetail.appendChild(modeLabel);\n    modeDetail.appendChild(modeValue);\n    \n    details.appendChild(modeDetail);\n    \n    // Correction age\n    const correctionDetail = document.createElement('div');\n    correctionDetail.className = 'rtk-status-detail';\n    \n    const correctionIcon = document.createElement('div');\n    correctionIcon.className = 'rtk-status-detail-icon';\n    correctionIcon.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"12\" height=\"12\"><path fill=\"currentColor\" d=\"M19,22H5V20H19V22M17,10C15.58,10 14.26,10.77 13.55,12H13V7H16V5H13V2H11V5H8V7H11V12H10.45C9.74,10.77 8.42,10 7,10A4,4 0 0,0 3,14A4,4 0 0,0 7,18C8.42,18 9.74,17.23 10.45,16H13.55C14.26,17.23 15.58,18 17,18A4,4 0 0,0 21,14A4,4 0 0,0 17,10M7,16A2,2 0 0,1 5,14A2,2 0 0,1 7,12A2,2 0 0,1 9,14A2,2 0 0,1 7,16M17,16A2,2 0 0,1 15,14A2,2 0 0,1 17,12A2,2 0 0,1 19,14A2,2 0 0,1 17,16Z\" /></svg>`;\n    \n    const correctionLabel = document.createElement('div');\n    correctionLabel.className = 'rtk-status-detail-label';\n    correctionLabel.textContent = 'Correction:';\n    \n    const correctionValue = document.createElement('div');\n    correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age';\n    correctionValue.textContent = 'N/A';\n    \n    correctionDetail.appendChild(correctionIcon);\n    correctionDetail.appendChild(correctionLabel);\n    correctionDetail.appendChild(correctionValue);\n    \n    details.appendChild(correctionDetail);\n    \n    // Messages\n    const messagesDetail = document.createElement('div');\n    messagesDetail.className = 'rtk-status-detail';\n    \n    const messagesIcon = document.createElement('div');\n    messagesIcon.className = 'rtk-status-detail-icon';\n    messagesIcon.innerHTML = `<svg viewBox=\"0 0 24 24\" width=\"12\" height=\"12\"><path fill=\"currentColor\" d=\"M17,12V3A1,1 0 0,0 16,2H3A1,1 0 0,0 2,3V17L6,13H16A1,1 0 0,0 17,12M21,6H19V15H6V17A1,1 0 0,0 7,18H18L22,22V7A1,1 0 0,0 21,6Z\" /></svg>`;\n    \n    const messagesLabel = document.createElement('div');\n    messagesLabel.className = 'rtk-status-detail-label';\n    messagesLabel.textContent = 'Messages:';\n    \n    const messagesValue = document.createElement('div');\n    messagesValue.className = 'rtk-status-detail-value';\n    messagesValue.textContent = '0';\n    \n    messagesDetail.appendChild(messagesIcon);\n    messagesDetail.appendChild(messagesLabel);\n    messagesDetail.appendChild(messagesValue);\n    \n    details.appendChild(messagesDetail);\n    \n    statusContainer.appendChild(details);\n    \n    // Add to container\n    this.container.appendChild(statusContainer);\n    \n    // Store references to elements\n    this.elements = {\n      indicatorIcon,\n      indicatorText,\n      satelliteIndicator,\n      satellitesValue,\n      modeValue,\n      correctionValue,\n      messagesValue\n    };\n  }\n\n  /**\n   * Register event listeners for GNSS and NTRIP events\n   */\n  registerEventListeners() {\n    if (!this.events) {\n      console.warn('RtkStatus: No events emitter provided. Status will not update.');\n      return;\n    }\n    \n    // GNSS position events\n    this.events.on('position', this.handlePosition.bind(this));\n    \n    // NTRIP correction events\n    this.events.on('ntrip:rtcm', this.handleRtcmData.bind(this));\n    \n    // NTRIP status events\n    this.events.on('ntrip:connected', this.handleNtripConnected.bind(this));\n    this.events.on('ntrip:disconnected', this.handleNtripDisconnected.bind(this));\n    \n    // Update status periodically\n    setInterval(() => {\n      this.updateStatus();\n    }, 1000);\n  }\n\n  /**\n   * Handle position update event\n   * @param {Object} position - Position data\n   */\n  handlePosition(position) {\n    // Update satellites used\n    if (position.satellites !== undefined) {\n      this.satellitesUsed = position.satellites;\n    }\n    \n    // Update fix quality\n    if (position.quality !== undefined) {\n      this.fixQuality = position.quality;\n    }\n    \n    // Update UI\n    this.updateStatus();\n  }\n\n  /**\n   * Handle RTCM data event\n   * @param {Object} data - RTCM data and stats\n   */\n  handleRtcmData(data) {\n    if (!data.stats) return;\n    \n    // Update message count\n    this.messagesReceived = data.stats.messagesReceived;\n    \n    // Update correction age\n    if (data.stats.correctionAge !== undefined) {\n      this.correctionAge = data.stats.correctionAge;\n    }\n    \n    // Update UI\n    this.updateStatus();\n  }\n\n  /**\n   * Handle NTRIP connected event\n   * @param {Object} data - Connection data\n   */\n  handleNtripConnected(data) {\n    // Reset stats\n    this.messagesReceived = 0;\n    this.correctionAge = null;\n    this.ntripConnected = true;\n    \n    // Check if GGA is required\n    if (data.requiresGga) {\n      this.ggaRequired = true;\n      \n      // If we have a position, make sure it's sent to NTRIP\n      if (this.gnss.lastPosition && this.gnss.ntripClient) {\n        setTimeout(() => {\n          this.gnss.updateNtripPosition(this.gnss.lastPosition);\n        }, 500);\n      }\n    }\n    \n    // Update UI\n    this.updateStatus();\n  }\n\n  /**\n   * Handle NTRIP disconnected event\n   * @param {Object} data - Disconnection data\n   */\n  handleNtripDisconnected(data) {\n    // Clear correction age\n    this.correctionAge = null;\n    this.ntripConnected = false;\n    this.ggaRequired = false;\n    \n    // Update UI\n    this.updateStatus();\n  }\n\n  /**\n   * Update the status display\n   */\n  updateStatus() {\n    if (!this.elements) return;\n    \n    // Update fix quality indicator\n    this.updateFixQualityIndicator();\n    \n    // Update satellite count\n    this.elements.satellitesValue.textContent = this.satellitesUsed.toString();\n    \n    // Update satellite bars\n    this.updateSatelliteBars();\n    \n    // Update RTK mode\n    this.elements.modeValue.textContent = this.getRtkModeName();\n    \n    // Update correction age\n    if (this.correctionAge !== null) {\n      this.elements.correctionValue.textContent = `${this.correctionAge.toFixed(1)}s`;\n      \n      // Highlight old corrections\n      if (this.correctionAge > 10) {\n        this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age old';\n      } else if (this.correctionAge > 5) {\n        this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age stale';\n      } else {\n        this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age';\n      }\n    } else if (this.ntripConnected && this.ggaRequired) {\n      // Special message if connected to NTRIP but no corrections received and GGA is required\n      this.elements.correctionValue.textContent = 'Waiting for GGA';\n      this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age stale';\n    } else if (this.ntripConnected) {\n      this.elements.correctionValue.textContent = 'Waiting for data';\n      this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age';\n    } else {\n      this.elements.correctionValue.textContent = 'N/A';\n      this.elements.correctionValue.className = 'rtk-status-detail-value rtk-status-correction-age';\n    }\n    \n    // Update message count\n    this.elements.messagesValue.textContent = this.messagesReceived.toString();\n  }\n\n  /**\n   * Update the fix quality indicator\n   */\n  updateFixQualityIndicator() {\n    let indicatorClass = 'no-fix';\n    let indicatorText = 'No Fix';\n    \n    switch (this.fixQuality) {\n      case 1:\n        indicatorClass = 'autonomous';\n        indicatorText = 'Autonomous Fix';\n        this.rtkMode = 'none';\n        break;\n      case 2:\n        indicatorClass = 'dgps';\n        indicatorText = 'DGPS';\n        this.rtkMode = 'none';\n        break;\n      case 4:\n        indicatorClass = 'rtk-fixed';\n        indicatorText = 'RTK Fixed';\n        this.rtkMode = 'fixed';\n        break;\n      case 5:\n        indicatorClass = 'rtk-float';\n        indicatorText = 'RTK Float';\n        this.rtkMode = 'float';\n        break;\n      default:\n        indicatorClass = 'no-fix';\n        indicatorText = 'No Fix';\n        this.rtkMode = 'none';\n        break;\n    }\n    \n    this.elements.indicatorIcon.className = `rtk-indicator-icon ${indicatorClass}`;\n    this.elements.indicatorText.textContent = indicatorText;\n  }\n\n  /**\n   * Update the satellite bars\n   */\n  updateSatelliteBars() {\n    // Get all satellite bars\n    const bars = this.elements.satelliteIndicator.children;\n    \n    // Update up to the available satellites\n    for (let i = 0; i < bars.length; i++) {\n      if (i < this.satellitesUsed) {\n        bars[i].className = 'rtk-satellite-bar used';\n      } else {\n        bars[i].className = 'rtk-satellite-bar';\n      }\n    }\n  }\n\n  /**\n   * Get RTK mode name\n   * @returns {string} RTK mode name\n   */\n  getRtkModeName() {\n    switch (this.rtkMode) {\n      case 'fixed':\n        return 'RTK Fixed';\n      case 'float':\n        return 'RTK Float';\n      default:\n        return 'Standalone';\n    }\n  }\n}\n\nexport default RtkStatus;","/**\n * DeviceSettings - UI component for configuring device-specific parameters\n * This component allows users to configure and save parameters specific\n * to their GNSS device.\n */\nexport class DeviceSettings {\n  /**\n   * Create a device settings component\n   * @param {Object} options - Configuration options\n   * @param {EventEmitter} options.events - Event emitter for communication\n   * @param {Settings} options.settings - Settings manager\n   * @param {string} options.selector - CSS selector for the container element\n   */\n  constructor(options = {}) {\n    this.events = options.events;\n    this.settings = options.settings;\n    this.deviceConnected = false;\n    \n    // Find container element if selector provided\n    if (options.selector) {\n      this.container = document.querySelector(options.selector);\n    }\n    \n    // If no container, don't initialize UI\n    if (!this.container) {\n      console.warn('DeviceSettings: No container element found. UI will not be initialized.');\n      return;\n    }\n    \n    // Cache frequently used elements\n    this.elements = {};\n    \n    // Add CSS for styling\n    this.addStyles();\n    \n    // Create UI elements\n    this.initializeUI();\n    \n    // Set up event listeners\n    this.setupEventListeners();\n    \n    // Listen for connection events\n    this.registerEventListeners();\n    \n    // Load saved configuration\n    this.loadSavedConfig();\n  }\n\n  /**\n   * Add required CSS styles to the document\n   */\n  addStyles() {\n    // Check if styles already exist\n    if (document.getElementById('device-settings-styles')) {\n      return;\n    }\n    \n    // Create style element\n    const style = document.createElement('style');\n    style.id = 'device-settings-styles';\n    style.textContent = `\n      .device-settings-container {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n        margin: 0 auto;\n        padding: 15px;\n        background-color: #f7f7f7;\n        border-radius: 5px;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n      }\n      \n      .device-settings-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #e0e0e0;\n      }\n      \n      .device-settings-title {\n        font-size: 18px;\n        font-weight: 500;\n        margin: 0;\n      }\n      \n      .device-settings-form {\n        display: grid;\n        grid-gap: 10px;\n      }\n      \n      .form-group {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 10px;\n      }\n      \n      .form-group label {\n        font-size: 14px;\n        color: #555;\n        margin-bottom: 5px;\n      }\n      \n      .form-group input, .form-group select {\n        padding: 8px 10px;\n        border: 1px solid #ccc;\n        border-radius: 4px;\n        font-size: 14px;\n      }\n      \n      .form-group input:focus, .form-group select:focus {\n        outline: none;\n        border-color: #4285F4;\n        box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.25);\n      }\n      \n      .device-settings-actions {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 15px;\n      }\n      \n      .device-presets {\n        margin-bottom: 15px;\n        padding: 10px;\n        background-color: #f0f0f0;\n        border-radius: 4px;\n      }\n      \n      .device-presets h4 {\n        margin-top: 0;\n        margin-bottom: 8px;\n      }\n      \n      .device-status {\n        display: flex;\n        align-items: center;\n        margin-top: 15px;\n        padding: 10px;\n        background-color: #f0f0f0;\n        border-radius: 4px;\n      }\n      \n      .device-status-indicator {\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        margin-right: 8px;\n      }\n      \n      .device-status-indicator.disconnected { background-color: #9e9e9e; }\n      .device-status-indicator.connected { background-color: #4caf50; }\n      \n      .device-button {\n        padding: 8px 16px;\n        border: none;\n        border-radius: 4px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        transition: background-color 0.2s;\n      }\n      \n      .device-button:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n      \n      .device-button.primary {\n        background-color: #4285F4;\n        color: white;\n      }\n      \n      .device-button.secondary {\n        background-color: #f1f1f1;\n        color: #333;\n      }\n      \n      .help-text {\n        font-size: 12px;\n        color: #666;\n        margin-top: 3px;\n      }\n      \n      @media (min-width: 768px) {\n        .device-settings-form {\n          grid-template-columns: 1fr 1fr;\n          grid-gap: 15px;\n        }\n      }\n    `;\n    \n    // Add style to document\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Initialize the UI elements\n   */\n  initializeUI() {\n    if (!this.container) return;\n    \n    // Clear container\n    this.container.innerHTML = '';\n    \n    // Create main container\n    const settingsContainer = document.createElement('div');\n    settingsContainer.className = 'device-settings-container';\n    \n    // Create header\n    const header = document.createElement('div');\n    header.className = 'device-settings-header';\n    \n    const title = document.createElement('h2');\n    title.className = 'device-settings-title';\n    title.textContent = 'Device Settings';\n    \n    header.appendChild(title);\n    settingsContainer.appendChild(header);\n    \n    // Device presets section\n    const presets = document.createElement('div');\n    presets.className = 'device-presets';\n    \n    const presetsTitle = document.createElement('h4');\n    presetsTitle.textContent = 'Device Presets';\n    \n    const presetsDescription = document.createElement('p');\n    presetsDescription.textContent = 'Select your device model to load recommended settings:';\n    \n    const presetsSelect = document.createElement('select');\n    presetsSelect.id = 'device-preset';\n    \n    // Add common device presets\n    const defaultOption = document.createElement('option');\n    defaultOption.value = '';\n    defaultOption.textContent = '-- Select Device --';\n    presetsSelect.appendChild(defaultOption);\n    \n    const presetUBloxF9P = document.createElement('option');\n    presetUBloxF9P.value = 'ublox-f9p';\n    presetUBloxF9P.textContent = 'u-blox ZED-F9P';\n    presetsSelect.appendChild(presetUBloxF9P);\n    \n    const presetUBloxM8P = document.createElement('option');\n    presetUBloxM8P.value = 'ublox-m8p';\n    presetUBloxM8P.textContent = 'u-blox NEO-M8P';\n    presetsSelect.appendChild(presetUBloxM8P);\n    \n    const presetSimpleRTK = document.createElement('option');\n    presetSimpleRTK.value = 'simplertk2b';\n    presetSimpleRTK.textContent = 'Ardusimple SimpleRTK2B';\n    presetsSelect.appendChild(presetSimpleRTK);\n    \n    const presetCustom = document.createElement('option');\n    presetCustom.value = 'custom';\n    presetCustom.textContent = 'Custom Device';\n    presetsSelect.appendChild(presetCustom);\n    \n    // Load preset button\n    const loadPresetButton = document.createElement('button');\n    loadPresetButton.id = 'load-preset';\n    loadPresetButton.className = 'device-button secondary';\n    loadPresetButton.textContent = 'Load Preset';\n    loadPresetButton.style.marginLeft = '10px';\n    \n    presets.appendChild(presetsTitle);\n    presets.appendChild(presetsDescription);\n    \n    const presetRow = document.createElement('div');\n    presetRow.style.display = 'flex';\n    presetRow.style.alignItems = 'center';\n    presetRow.appendChild(presetsSelect);\n    presetRow.appendChild(loadPresetButton);\n    \n    presets.appendChild(presetRow);\n    settingsContainer.appendChild(presets);\n    \n    // Create form\n    const form = document.createElement('form');\n    form.className = 'device-settings-form';\n    form.id = 'device-settings-form';\n    \n    // Device name\n    const deviceNameGroup = document.createElement('div');\n    deviceNameGroup.className = 'form-group';\n    \n    const deviceNameLabel = document.createElement('label');\n    deviceNameLabel.htmlFor = 'device-name';\n    deviceNameLabel.textContent = 'Device Name';\n    \n    const deviceNameInput = document.createElement('input');\n    deviceNameInput.type = 'text';\n    deviceNameInput.id = 'device-name';\n    deviceNameInput.placeholder = 'My GNSS Receiver';\n    \n    const deviceNameHelp = document.createElement('p');\n    deviceNameHelp.className = 'help-text';\n    deviceNameHelp.textContent = 'Custom name for this device';\n    \n    deviceNameGroup.appendChild(deviceNameLabel);\n    deviceNameGroup.appendChild(deviceNameInput);\n    deviceNameGroup.appendChild(deviceNameHelp);\n    \n    form.appendChild(deviceNameGroup);\n    \n    // GNSS Systems\n    const gnssSystemsGroup = document.createElement('div');\n    gnssSystemsGroup.className = 'form-group';\n    \n    const gnssSystemsLabel = document.createElement('label');\n    gnssSystemsLabel.htmlFor = 'gnss-systems';\n    gnssSystemsLabel.textContent = 'GNSS Systems';\n    \n    const gnssSystemsSelect = document.createElement('select');\n    gnssSystemsSelect.id = 'gnss-systems';\n    gnssSystemsSelect.multiple = true;\n    gnssSystemsSelect.size = 5;\n    gnssSystemsSelect.style.height = 'auto';\n    \n    const gnssGPS = document.createElement('option');\n    gnssGPS.value = 'gps';\n    gnssGPS.textContent = 'GPS (USA)';\n    gnssSystemsSelect.appendChild(gnssGPS);\n    \n    const gnssGLONASS = document.createElement('option');\n    gnssGLONASS.value = 'glonass';\n    gnssGLONASS.textContent = 'GLONASS (Russia)';\n    gnssSystemsSelect.appendChild(gnssGLONASS);\n    \n    const gnssGalileo = document.createElement('option');\n    gnssGalileo.value = 'galileo';\n    gnssGalileo.textContent = 'Galileo (EU)';\n    gnssSystemsSelect.appendChild(gnssGalileo);\n    \n    const gnssBeiDou = document.createElement('option');\n    gnssBeiDou.value = 'beidou';\n    gnssBeiDou.textContent = 'BeiDou (China)';\n    gnssSystemsSelect.appendChild(gnssBeiDou);\n    \n    const gnssQZSS = document.createElement('option');\n    gnssQZSS.value = 'qzss';\n    gnssQZSS.textContent = 'QZSS (Japan)';\n    gnssSystemsSelect.appendChild(gnssQZSS);\n    \n    const gnssHelp = document.createElement('p');\n    gnssHelp.className = 'help-text';\n    gnssHelp.textContent = 'Hold Ctrl/Cmd to select multiple systems';\n    \n    gnssSystemsGroup.appendChild(gnssSystemsLabel);\n    gnssSystemsGroup.appendChild(gnssSystemsSelect);\n    gnssSystemsGroup.appendChild(gnssHelp);\n    \n    form.appendChild(gnssSystemsGroup);\n    \n    // Baud Rate\n    const baudRateGroup = document.createElement('div');\n    baudRateGroup.className = 'form-group';\n    \n    const baudRateLabel = document.createElement('label');\n    baudRateLabel.htmlFor = 'baud-rate';\n    baudRateLabel.textContent = 'Baud Rate';\n    \n    const baudRateSelect = document.createElement('select');\n    baudRateSelect.id = 'baud-rate';\n    \n    const baudRates = [4800, 9600, 19200, 38400, 57600, 115200, 230400, 460800, 921600];\n    baudRates.forEach(rate => {\n      const option = document.createElement('option');\n      option.value = rate.toString();\n      option.textContent = rate.toString();\n      if (rate === 115200) {\n        option.selected = true;\n      }\n      baudRateSelect.appendChild(option);\n    });\n    \n    const baudRateHelp = document.createElement('p');\n    baudRateHelp.className = 'help-text';\n    baudRateHelp.textContent = 'Serial communication speed';\n    \n    baudRateGroup.appendChild(baudRateLabel);\n    baudRateGroup.appendChild(baudRateSelect);\n    baudRateGroup.appendChild(baudRateHelp);\n    \n    form.appendChild(baudRateGroup);\n    \n    // Output Rate\n    const outputRateGroup = document.createElement('div');\n    outputRateGroup.className = 'form-group';\n    \n    const outputRateLabel = document.createElement('label');\n    outputRateLabel.htmlFor = 'output-rate';\n    outputRateLabel.textContent = 'Output Rate (Hz)';\n    \n    const outputRateSelect = document.createElement('select');\n    outputRateSelect.id = 'output-rate';\n    \n    const rates = [1, 2, 5, 10, 20];\n    rates.forEach(rate => {\n      const option = document.createElement('option');\n      option.value = rate.toString();\n      option.textContent = rate.toString();\n      if (rate === 1) {\n        option.selected = true;\n      }\n      outputRateSelect.appendChild(option);\n    });\n    \n    const outputRateHelp = document.createElement('p');\n    outputRateHelp.className = 'help-text';\n    outputRateHelp.textContent = 'Positioning output frequency';\n    \n    outputRateGroup.appendChild(outputRateLabel);\n    outputRateGroup.appendChild(outputRateSelect);\n    outputRateGroup.appendChild(outputRateHelp);\n    \n    form.appendChild(outputRateGroup);\n    \n    // Dynamic Model\n    const dynamicModelGroup = document.createElement('div');\n    dynamicModelGroup.className = 'form-group';\n    \n    const dynamicModelLabel = document.createElement('label');\n    dynamicModelLabel.htmlFor = 'dynamic-model';\n    dynamicModelLabel.textContent = 'Dynamic Model';\n    \n    const dynamicModelSelect = document.createElement('select');\n    dynamicModelSelect.id = 'dynamic-model';\n    \n    const dynamicModels = [\n      { value: 'portable', text: 'Portable' },\n      { value: 'stationary', text: 'Stationary' },\n      { value: 'pedestrian', text: 'Pedestrian' },\n      { value: 'automotive', text: 'Automotive' },\n      { value: 'sea', text: 'Sea' },\n      { value: 'airborne-1g', text: 'Airborne (<1g)' },\n      { value: 'airborne-2g', text: 'Airborne (<2g)' },\n      { value: 'airborne-4g', text: 'Airborne (<4g)' },\n      { value: 'wrist', text: 'Wrist' },\n      { value: 'bike', text: 'Bike' }\n    ];\n    \n    dynamicModels.forEach(model => {\n      const option = document.createElement('option');\n      option.value = model.value;\n      option.textContent = model.text;\n      if (model.value === 'pedestrian') {\n        option.selected = true;\n      }\n      dynamicModelSelect.appendChild(option);\n    });\n    \n    const dynamicModelHelp = document.createElement('p');\n    dynamicModelHelp.className = 'help-text';\n    dynamicModelHelp.textContent = 'Optimizes positioning for motion type';\n    \n    dynamicModelGroup.appendChild(dynamicModelLabel);\n    dynamicModelGroup.appendChild(dynamicModelSelect);\n    dynamicModelGroup.appendChild(dynamicModelHelp);\n    \n    form.appendChild(dynamicModelGroup);\n    \n    // NMEA Sentences\n    const nmeaSentencesGroup = document.createElement('div');\n    nmeaSentencesGroup.className = 'form-group';\n    \n    const nmeaSentencesLabel = document.createElement('label');\n    nmeaSentencesLabel.htmlFor = 'nmea-sentences';\n    nmeaSentencesLabel.textContent = 'NMEA Sentences';\n    \n    const nmeaSentencesSelect = document.createElement('select');\n    nmeaSentencesSelect.id = 'nmea-sentences';\n    nmeaSentencesSelect.multiple = true;\n    nmeaSentencesSelect.size = 7;\n    nmeaSentencesSelect.style.height = 'auto';\n    \n    const nmeaSentences = [\n      { value: 'GGA', text: 'GGA (Position & Fix)' },\n      { value: 'RMC', text: 'RMC (Position & Time)' },\n      { value: 'GSA', text: 'GSA (DOP & Active Satellites)' },\n      { value: 'GSV', text: 'GSV (Satellites in View)' },\n      { value: 'VTG', text: 'VTG (Course & Speed)' },\n      { value: 'GST', text: 'GST (Position Error)' },\n      { value: 'ZDA', text: 'ZDA (Date & Time)' }\n    ];\n    \n    nmeaSentences.forEach(sentence => {\n      const option = document.createElement('option');\n      option.value = sentence.value;\n      option.textContent = sentence.text;\n      // Default to GGA, RMC, GSA, and GSV\n      if (['GGA', 'RMC', 'GSA', 'GSV'].includes(sentence.value)) {\n        option.selected = true;\n      }\n      nmeaSentencesSelect.appendChild(option);\n    });\n    \n    const nmeaSentencesHelp = document.createElement('p');\n    nmeaSentencesHelp.className = 'help-text';\n    nmeaSentencesHelp.textContent = 'NMEA messages to output';\n    \n    nmeaSentencesGroup.appendChild(nmeaSentencesLabel);\n    nmeaSentencesGroup.appendChild(nmeaSentencesSelect);\n    nmeaSentencesGroup.appendChild(nmeaSentencesHelp);\n    \n    form.appendChild(nmeaSentencesGroup);\n    \n    // RTK Settings\n    // Elevation mask\n    const elevationMaskGroup = document.createElement('div');\n    elevationMaskGroup.className = 'form-group';\n    \n    const elevationMaskLabel = document.createElement('label');\n    elevationMaskLabel.htmlFor = 'elevation-mask';\n    elevationMaskLabel.textContent = 'Elevation Mask (°)';\n    \n    const elevationMaskInput = document.createElement('input');\n    elevationMaskInput.type = 'number';\n    elevationMaskInput.id = 'elevation-mask';\n    elevationMaskInput.min = 0;\n    elevationMaskInput.max = 60;\n    elevationMaskInput.value = 10;\n    \n    const elevationMaskHelp = document.createElement('p');\n    elevationMaskHelp.className = 'help-text';\n    elevationMaskHelp.textContent = 'Ignore satellites below this elevation';\n    \n    elevationMaskGroup.appendChild(elevationMaskLabel);\n    elevationMaskGroup.appendChild(elevationMaskInput);\n    elevationMaskGroup.appendChild(elevationMaskHelp);\n    \n    form.appendChild(elevationMaskGroup);\n    \n    // SNR mask\n    const snrMaskGroup = document.createElement('div');\n    snrMaskGroup.className = 'form-group';\n    \n    const snrMaskLabel = document.createElement('label');\n    snrMaskLabel.htmlFor = 'snr-mask';\n    snrMaskLabel.textContent = 'SNR Mask (dB-Hz)';\n    \n    const snrMaskInput = document.createElement('input');\n    snrMaskInput.type = 'number';\n    snrMaskInput.id = 'snr-mask';\n    snrMaskInput.min = 0;\n    snrMaskInput.max = 50;\n    snrMaskInput.value = 35;\n    \n    const snrMaskHelp = document.createElement('p');\n    snrMaskHelp.className = 'help-text';\n    snrMaskHelp.textContent = 'Ignore satellites below this signal strength';\n    \n    snrMaskGroup.appendChild(snrMaskLabel);\n    snrMaskGroup.appendChild(snrMaskInput);\n    snrMaskGroup.appendChild(snrMaskHelp);\n    \n    form.appendChild(snrMaskGroup);\n    \n    settingsContainer.appendChild(form);\n    \n    // Create device status\n    const deviceStatus = document.createElement('div');\n    deviceStatus.className = 'device-status';\n    \n    const deviceStatusIndicator = document.createElement('div');\n    deviceStatusIndicator.className = 'device-status-indicator disconnected';\n    \n    const deviceStatusText = document.createElement('div');\n    deviceStatusText.textContent = 'No device connected';\n    \n    deviceStatus.appendChild(deviceStatusIndicator);\n    deviceStatus.appendChild(deviceStatusText);\n    \n    settingsContainer.appendChild(deviceStatus);\n    \n    // Create action buttons\n    const actions = document.createElement('div');\n    actions.className = 'device-settings-actions';\n    \n    const saveButton = document.createElement('button');\n    saveButton.type = 'button';\n    saveButton.id = 'save-settings';\n    saveButton.className = 'device-button secondary';\n    saveButton.textContent = 'Save Settings';\n    \n    const applyButton = document.createElement('button');\n    applyButton.type = 'button';\n    applyButton.id = 'apply-settings';\n    applyButton.className = 'device-button primary';\n    applyButton.textContent = 'Apply to Device';\n    applyButton.disabled = true;\n    \n    actions.appendChild(saveButton);\n    actions.appendChild(applyButton);\n    \n    settingsContainer.appendChild(actions);\n    \n    // Add to container\n    this.container.appendChild(settingsContainer);\n    \n    // Store references to elements\n    this.elements = {\n      deviceNameInput,\n      presetsSelect,\n      loadPresetButton,\n      gnssSystemsSelect,\n      baudRateSelect,\n      outputRateSelect,\n      dynamicModelSelect,\n      nmeaSentencesSelect,\n      elevationMaskInput,\n      snrMaskInput,\n      saveButton,\n      applyButton,\n      deviceStatusIndicator,\n      deviceStatusText,\n      form\n    };\n  }\n\n  /**\n   * Set up UI event listeners\n   */\n  setupEventListeners() {\n    if (!this.elements) {\n      console.warn('DeviceSettings: No UI elements found. Event listeners not set up.');\n      return;\n    }\n    \n    // Safely add event listener to an element if it exists\n    const safeAddListener = (elementKey, eventType, handler) => {\n      const element = this.elements[elementKey];\n      if (element) {\n        element.addEventListener(eventType, handler);\n      } else {\n        console.warn(`DeviceSettings: Element ${elementKey} not found`);\n      }\n    };\n    \n    // Load preset button\n    safeAddListener('loadPresetButton', 'click', () => {\n      this.loadDevicePreset();\n    });\n    \n    // Save settings button\n    safeAddListener('saveButton', 'click', () => {\n      this.saveConfig();\n    });\n    \n    // Apply settings button\n    safeAddListener('applyButton', 'click', () => {\n      this.applySettings();\n    });\n    \n    // Form change event to enable/disable save button\n    safeAddListener('form', 'change', () => {\n      // Enable save button when any form field changes\n      if (this.elements.saveButton) {\n        this.elements.saveButton.disabled = false;\n      }\n    });\n  }\n\n  /**\n   * Register event listeners for GNSS events\n   */\n  registerEventListeners() {\n    if (!this.events) {\n      console.warn('DeviceSettings: No events emitter provided. Settings will not update.');\n      return;\n    }\n    \n    // Connection status change events\n    this.events.on('connection:connected', this.handleConnected.bind(this));\n    this.events.on('connection:disconnected', this.handleDisconnected.bind(this));\n  }\n\n  /**\n   * Handle connected event\n   * @param {Object} data - Event data\n   */\n  handleConnected(data) {\n    this.deviceConnected = true;\n    \n    this.elements.deviceStatusIndicator.className = 'device-status-indicator connected';\n    this.elements.deviceStatusText.textContent = `Connected to ${data.deviceInfo?.name || 'device'}`;\n    \n    // Enable the apply button\n    this.elements.applyButton.disabled = false;\n  }\n\n  /**\n   * Handle disconnected event\n   */\n  handleDisconnected() {\n    this.deviceConnected = false;\n    \n    this.elements.deviceStatusIndicator.className = 'device-status-indicator disconnected';\n    this.elements.deviceStatusText.textContent = 'No device connected';\n    \n    // Disable the apply button\n    this.elements.applyButton.disabled = true;\n  }\n\n  /**\n   * Load saved configuration from settings\n   */\n  loadSavedConfig() {\n    if (!this.settings || !this.elements) return;\n    \n    // Initialize device settings in settings storage if not present\n    if (!this.settings.getSection('device')) {\n      this.settings.set('device', 'name', '');\n      this.settings.set('device', 'gnssSystems', ['gps', 'glonass']);\n      this.settings.set('device', 'baudRate', 115200);\n      this.settings.set('device', 'outputRate', 1);\n      this.settings.set('device', 'dynamicModel', 'pedestrian');\n      this.settings.set('device', 'nmeaSentences', ['GGA', 'RMC', 'GSA', 'GSV']);\n      this.settings.set('device', 'elevationMask', 10);\n      this.settings.set('device', 'snrMask', 35);\n      this.settings.set('device', 'preset', '');\n    }\n    \n    const deviceSettings = this.settings.getSection('device');\n    \n    // Safely set value if the element exists\n    const safeSetValue = (elementKey, value, isMultiSelect = false) => {\n      const element = this.elements[elementKey];\n      if (!element) return;\n      \n      if (isMultiSelect && Array.isArray(value)) {\n        // For multi-select elements, we need to set each option's selected state\n        Array.from(element.options).forEach(option => {\n          option.selected = value.includes(option.value);\n        });\n      } else if (element.type === 'checkbox') {\n        element.checked = Boolean(value);\n      } else {\n        element.value = value !== undefined ? value : '';\n      }\n    };\n    \n    // Update UI elements\n    safeSetValue('deviceNameInput', deviceSettings.name);\n    safeSetValue('presetsSelect', deviceSettings.preset);\n    safeSetValue('gnssSystemsSelect', deviceSettings.gnssSystems, true);\n    safeSetValue('baudRateSelect', deviceSettings.baudRate);\n    safeSetValue('outputRateSelect', deviceSettings.outputRate);\n    safeSetValue('dynamicModelSelect', deviceSettings.dynamicModel);\n    safeSetValue('nmeaSentencesSelect', deviceSettings.nmeaSentences, true);\n    safeSetValue('elevationMaskInput', deviceSettings.elevationMask);\n    safeSetValue('snrMaskInput', deviceSettings.snrMask);\n    \n    // Disable save button initially\n    if (this.elements.saveButton) {\n      this.elements.saveButton.disabled = true;\n    }\n  }\n\n  /**\n   * Save configuration to settings\n   */\n  saveConfig() {\n    if (!this.settings || !this.elements) return;\n    \n    // Safely get value from an element if it exists\n    const safeGetValue = (elementKey, defaultValue = '', isMultiSelect = false) => {\n      const element = this.elements[elementKey];\n      if (!element) return defaultValue;\n      \n      if (isMultiSelect) {\n        return Array.from(element.selectedOptions).map(option => option.value);\n      } else if (element.type === 'checkbox') {\n        return element.checked;\n      } else if (element.type === 'number') {\n        return parseInt(element.value, 10);\n      } else {\n        return element.value;\n      }\n    };\n    \n    // Get values from form\n    const config = {\n      name: safeGetValue('deviceNameInput', ''),\n      preset: safeGetValue('presetsSelect', ''),\n      gnssSystems: safeGetValue('gnssSystemsSelect', ['gps'], true),\n      baudRate: safeGetValue('baudRateSelect', 115200),\n      outputRate: safeGetValue('outputRateSelect', 1),\n      dynamicModel: safeGetValue('dynamicModelSelect', 'pedestrian'),\n      nmeaSentences: safeGetValue('nmeaSentencesSelect', ['GGA', 'RMC'], true),\n      elevationMask: safeGetValue('elevationMaskInput', 10),\n      snrMask: safeGetValue('snrMaskInput', 35)\n    };\n    \n    // Save to settings\n    for (const [key, value] of Object.entries(config)) {\n      this.settings.set('device', key, value);\n    }\n    \n    // Emit settings update event\n    if (this.events) {\n      this.events.emit('device:settings:update', config);\n    }\n    \n    // Disable save button after saving\n    if (this.elements.saveButton) {\n      this.elements.saveButton.disabled = true;\n    }\n    \n    // Show confirmation\n    alert('Device settings saved successfully!');\n  }\n\n  /**\n   * Apply settings to the connected device\n   */\n  async applySettings() {\n    if (!this.deviceConnected) {\n      alert('No device connected. Please connect a device first.');\n      return;\n    }\n    \n    // Get current settings\n    const deviceSettings = this.settings.getSection('device');\n    \n    // Emit event to apply settings to device\n    if (this.events) {\n      this.events.emit('device:apply:settings', deviceSettings);\n    }\n    \n    // Show confirmation\n    alert('Settings are being applied to the device. This may take a moment...');\n  }\n\n  /**\n   * Load settings from a device preset\n   */\n  loadDevicePreset() {\n    if (!this.elements.presetsSelect) return;\n    \n    const preset = this.elements.presetsSelect.value;\n    if (!preset) {\n      alert('Please select a device preset first.');\n      return;\n    }\n    \n    let presetSettings = {};\n    \n    // Define preset configurations\n    switch (preset) {\n      case 'ublox-f9p':\n        presetSettings = {\n          name: 'u-blox ZED-F9P',\n          gnssSystems: ['gps', 'glonass', 'galileo', 'beidou'],\n          baudRate: 115200,\n          outputRate: 5,\n          dynamicModel: 'pedestrian',\n          nmeaSentences: ['GGA', 'RMC', 'GSA', 'GSV', 'VTG', 'GST'],\n          elevationMask: 10,\n          snrMask: 35\n        };\n        break;\n        \n      case 'ublox-m8p':\n        presetSettings = {\n          name: 'u-blox NEO-M8P',\n          gnssSystems: ['gps', 'glonass'],\n          baudRate: 115200,\n          outputRate: 5,\n          dynamicModel: 'pedestrian',\n          nmeaSentences: ['GGA', 'RMC', 'GSA', 'GSV', 'VTG'],\n          elevationMask: 10,\n          snrMask: 35\n        };\n        break;\n        \n      case 'simplertk2b':\n        presetSettings = {\n          name: 'SimpleRTK2B',\n          gnssSystems: ['gps', 'glonass', 'galileo', 'beidou'],\n          baudRate: 115200,\n          outputRate: 5,\n          dynamicModel: 'pedestrian',\n          nmeaSentences: ['GGA', 'RMC', 'GSA', 'GSV', 'VTG', 'GST'],\n          elevationMask: 10,\n          snrMask: 35\n        };\n        break;\n        \n      case 'custom':\n        // Just update the device name field but leave other settings as is\n        presetSettings = {\n          name: 'Custom GNSS Device'\n        };\n        break;\n        \n      default:\n        alert('Unknown preset selected.');\n        return;\n    }\n    \n    // Apply preset settings to form\n    if (this.elements.deviceNameInput && presetSettings.name) {\n      this.elements.deviceNameInput.value = presetSettings.name;\n    }\n    \n    // Update GNSS systems\n    if (this.elements.gnssSystemsSelect && presetSettings.gnssSystems) {\n      const options = this.elements.gnssSystemsSelect.options;\n      for (let i = 0; i < options.length; i++) {\n        options[i].selected = presetSettings.gnssSystems.includes(options[i].value);\n      }\n    }\n    \n    // Update baud rate\n    if (this.elements.baudRateSelect && presetSettings.baudRate) {\n      this.elements.baudRateSelect.value = presetSettings.baudRate;\n    }\n    \n    // Update output rate\n    if (this.elements.outputRateSelect && presetSettings.outputRate) {\n      this.elements.outputRateSelect.value = presetSettings.outputRate;\n    }\n    \n    // Update dynamic model\n    if (this.elements.dynamicModelSelect && presetSettings.dynamicModel) {\n      this.elements.dynamicModelSelect.value = presetSettings.dynamicModel;\n    }\n    \n    // Update NMEA sentences\n    if (this.elements.nmeaSentencesSelect && presetSettings.nmeaSentences) {\n      const options = this.elements.nmeaSentencesSelect.options;\n      for (let i = 0; i < options.length; i++) {\n        options[i].selected = presetSettings.nmeaSentences.includes(options[i].value);\n      }\n    }\n    \n    // Update elevation mask\n    if (this.elements.elevationMaskInput && presetSettings.elevationMask) {\n      this.elements.elevationMaskInput.value = presetSettings.elevationMask;\n    }\n    \n    // Update SNR mask\n    if (this.elements.snrMaskInput && presetSettings.snrMask) {\n      this.elements.snrMaskInput.value = presetSettings.snrMask;\n    }\n    \n    // Enable save button\n    if (this.elements.saveButton) {\n      this.elements.saveButton.disabled = false;\n    }\n    \n    // Update preset in settings\n    this.settings.set('device', 'preset', preset);\n    \n    // Show confirmation\n    alert(`Loaded preset settings for ${presetSettings.name}`);\n  }\n}\n\nexport default DeviceSettings;","/**\n * GNSS Module - Main entry point\n * \n * This module provides a JavaScript interface for connecting to GNSS RTK rovers\n * via Web Bluetooth or Web Serial, parsing NMEA data, and managing NTRIP correction data.\n */\nimport { EventEmitter } from './event-emitter.js';\nimport { NmeaParser } from './nmea-parser.js';\nimport { NtripClient } from './ntrip-client.js';\nimport { Settings } from './settings.js';\nimport { ConnectionManager } from './connection/connection-manager.js';\nimport { BluetoothHandler } from './connection/bluetooth-handler.js';\nimport { SerialHandler } from './connection/serial-handler.js';\nimport { RtkSettings } from './ui/rtk-settings.js'; \nimport { RtkStatus } from './ui/rtk-status.js';\nimport { DeviceSettings } from './ui/device-settings.js';\nimport { EVENTS, BLE_SERVICES } from './constants.js';\n\n/**\n * Main GNSS Module class\n * Manages device connections, NMEA parsing, and NTRIP client\n */\nclass GnssModule {\n  /**\n   * Create a new GNSS module instance\n   * @param {Object} options - Configuration options\n   */\n  constructor(options = {}) {\n    // Initialize event system\n    this.events = new EventEmitter();\n    \n    // Initialize settings\n    this.settings = new Settings(options.settings);\n    \n    // Initialize other properties\n    this.debugSettings = options.debugSettings || {\n      info: false,\n      debug: false,\n      errors: true,\n      parsedSentences: false,\n      rtcmMessages: false\n    };\n    \n    // Initialize connection manager\n    this.connectionManager = new ConnectionManager(this.events, {\n      debug: this.debugSettings,\n      settings: this.settings\n    });\n    \n    // Create and register connection handlers\n    this.bluetoothHandler = new BluetoothHandler(this.events, {\n      debug: this.debugSettings\n    });\n    this.serialHandler = new SerialHandler(this.events, {\n      debug: this.debugSettings\n    });\n    \n    // Register connection handlers with the connection manager\n    this.connectionManager.registerConnectionMethod(this.bluetoothHandler);\n    this.connectionManager.registerConnectionMethod(this.serialHandler);\n    \n    // Initialize NMEA parser\n    this.nmeaParser = new NmeaParser({\n      events: this.events\n    });\n    \n    // Initialize NTRIP client\n    this.ntripClient = new NtripClient({\n      events: this.events,\n      settings: this.settings\n    });\n    \n    // Initialize UI components if enabled\n    if (options.ui !== false) {\n      this.rtkSettings = new RtkSettings({\n        events: this.events,\n        settings: this.settings,\n        selector: options.rtkSettingsSelector\n      });\n      \n      this.rtkStatus = new RtkStatus({\n        events: this.events,\n        selector: options.rtkStatusSelector\n      });\n      \n      this.deviceSettings = new DeviceSettings({\n        events: this.events,\n        settings: this.settings,\n        selector: options.deviceSettingsSelector\n      });\n    }\n    \n    // Last known position\n    this.currentPosition = null;\n    \n    // Setup internal event listeners\n    this._setupEventListeners();\n  }\n  \n  /**\n   * Set up internal event listeners\n   * @private\n   */\n  _setupEventListeners() {\n    // Listen for position updates from NMEA parser\n    this.events.on(EVENTS.POSITION_UPDATE, (position) => {\n      this.currentPosition = position;\n      // Forward position update to any listeners\n      this.events.emit('position', position);\n    });\n    \n    // Listen for satellite updates from NMEA parser\n    this.events.on(EVENTS.SATELLITES_UPDATE, (satellites) => {\n      this.satellites = satellites;\n      // Forward satellites update to any listeners\n      this.events.emit('satellites', satellites);\n    });\n    \n    // Forward RTCM data to device when connected\n    this.events.on(EVENTS.NTRIP_DATA, (rtcmData) => {\n      if (this.connectionManager.isConnected()) {\n        this.connectionManager.sendData(rtcmData.data);\n      }\n    });\n    \n    // Handle device settings application request\n    this.events.on(EVENTS.DEVICE_CONFIGURING, (settings) => {\n      this.configureDevice(settings);\n    });\n  }\n  \n  /**\n   * Connect to a GNSS device using available methods\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} Connection success\n   */\n  async connectDevice(options = {}) {\n    try {\n      const connected = await this.connectionManager.connect(options);\n      \n      if (connected) {\n        // Setup data flow from device to NMEA parser\n        // Only listen for the standardized device:data event\n        this.events.on(EVENTS.DATA_RECEIVED, (data) => {\n          this.nmeaParser.parse(data);\n        });\n      }\n      \n      return connected;\n    } catch (error) {\n      this.events.emit(EVENTS.CONNECTION_ERROR, { message: error.message });\n      return false;\n    }\n  }\n  \n  /**\n   * Connect specifically via Bluetooth\n   * @param {Object} options - Bluetooth connection options\n   * @returns {Promise<boolean>} Connection success\n   */\n  async connectBluetooth(options = {}) {\n    try {\n      // Important: This must be called directly in response to a user gesture\n      // Create the options for requestDevice\n      const requestOptions = {\n        optionalServices: [\n          // Use service UUIDs from constants\n          BLE_SERVICES.NORDIC_UART,\n          BLE_SERVICES.UART_ALTERNATIVE,\n          BLE_SERVICES.HM_MODULE,\n          BLE_SERVICES.HC_MODULE,\n          BLE_SERVICES.GENERIC_ACCESS,\n          BLE_SERVICES.GENERIC_ATTRIBUTE,\n          BLE_SERVICES.SPARKFUN_CUSTOM,\n          BLE_SERVICES.SPP,\n          BLE_SERVICES.HEART_RATE,\n          BLE_SERVICES.DEVICE_INFO\n        ]\n      };\n      \n      // Cannot have both acceptAllDevices and filters\n      if (!options.filters) {\n        Object.assign(requestOptions, {acceptAllDevices: true});\n      } else {\n        Object.assign(requestOptions, {filters: options.filters});\n      }\n      \n      // Request device directly (this must happen in direct response to user gesture)\n      const device = await navigator.bluetooth.requestDevice(requestOptions);\n      \n      // Now pass the selected device to the connection manager\n      return this.connectDevice({ \n        ...options,\n        method: 'bluetooth',\n        deviceObj: device // Pass the selected device object\n      });\n    } catch (error) {\n      // Handle the case where user cancels the dialog\n      if (error.name === 'NotFoundError') {\n        this.events.emit(EVENTS.CONNECTION_ERROR, { message: 'No device selected' });\n        return false;\n      }\n      \n      this.events.emit(EVENTS.CONNECTION_ERROR, { message: error.message });\n      return false;\n    }\n  }\n  \n  /**\n   * Connect specifically via Serial\n   * @param {Object} options - Serial connection options\n   * @returns {Promise<boolean>} Connection success\n   */\n  async connectSerial(options = {}) {\n    return this.connectDevice({ \n      ...options,\n      method: 'serial'\n    });\n  }\n  \n  /**\n   * Connect to NTRIP caster\n   * @param {Object} options - Connection options\n   * @returns {Promise<boolean>} Connection success\n   */\n  async connectNtrip(options = {}) {\n    try {\n      return await this.ntripClient.connect({\n        ...options,\n        position: this.currentPosition\n      });\n    } catch (error) {\n      this.events.emit('ntrip:error', { message: error.message });\n      return false;\n    }\n  }\n  \n  /**\n   * Disconnect from device\n   * @returns {Promise<void>}\n   */\n  async disconnectDevice() {\n    return this.connectionManager.disconnect();\n  }\n  \n  /**\n   * Disconnect from NTRIP\n   * @returns {Promise<void>}\n   */\n  async disconnectNtrip() {\n    return this.ntripClient.disconnect();\n  }\n  \n  /**\n   * Get current position\n   * @returns {Object|null} Current position\n   */\n  getPosition() {\n    return this.currentPosition;\n  }\n  \n  /**\n   * Get satellite information\n   * @returns {Array|null} Satellite information\n   */\n  getSatellites() {\n    return this.satellites || [];\n  }\n  \n  /**\n   * Get the settings manager\n   * @returns {Settings} Settings manager\n   */\n  getSettings() {\n    return this.settings;\n  }\n  \n  /**\n   * Configure the device with specified settings\n   * @param {Object} settings - Device settings to apply\n   * @returns {Promise<boolean>} Success flag\n   */\n  async configureDevice(settings = {}) {\n    try {\n      // Check if connected\n      if (!this.connectionManager.isConnected()) {\n        this.events.emit('device:error', { message: 'Not connected to any device' });\n        return false;\n      }\n      \n      // If no settings provided, use saved device settings\n      const deviceSettings = settings.gnssSystems ? \n        settings : \n        this.settings.getSection('device');\n      \n      // Emit event before applying settings\n      this.events.emit('device:configuring', { settings: deviceSettings });\n      \n      // Currently this is a placeholder - in a real implementation, \n      // you would send configuration commands to the device\n      // For example, with u-blox devices, you'd send UBX configuration messages\n      \n      // For now, we'll just simulate a successful configuration\n      setTimeout(() => {\n        this.events.emit('device:configured', { \n          settings: deviceSettings,\n          success: true\n        });\n      }, 1000);\n      \n      return true;\n    } catch (error) {\n      this.events.emit('device:error', { \n        message: 'Error configuring device',\n        error\n      });\n      return false;\n    }\n  }\n  \n  /**\n   * Subscribe to an event\n   * @param {string} event - Event name\n   * @param {Function} callback - Callback function\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback) {\n    return this.events.on(event, callback);\n  }\n  \n  /**\n   * Unsubscribe from an event\n   * @param {string} event - Event name\n   * @param {Function} callback - Callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n}\n\n// Export the main module class\nexport { GnssModule };\n\n// Export other classes for extensibility\nexport { EventEmitter };\nexport { NmeaParser };\nexport { NtripClient };\nexport { Settings };\nexport { ConnectionManager };\nexport { BluetoothHandler };\nexport { SerialHandler };\nexport { RtkSettings };\nexport { RtkStatus };\nexport { DeviceSettings };\n\n// Export constants for advanced usage\nexport { EVENTS, BLE_SERVICES, BLE_CHARACTERISTICS } from './constants.js';\n\n// Export default GnssModule as the primary entry point\nexport default GnssModule;"],"names":[],"mappings":"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"}